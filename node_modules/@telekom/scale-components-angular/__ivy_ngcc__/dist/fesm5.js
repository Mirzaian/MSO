import { __decorate, __metadata, __extends } from 'tslib';
import { Component, ChangeDetectionStrategy, ChangeDetectorRef, ElementRef, NgZone, Directive, HostListener, NgModule } from '@angular/core';
import { fromEvent } from 'rxjs';
import { defineCustomElements } from '@telekom/scale-components/loader';
import { NG_VALUE_ACCESSOR } from '@angular/forms';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
import * as ɵngcc0 from '@angular/core';

var _c0 = ["*"];
var proxyInputs = (/**
 * @param {?} Cmp
 * @param {?} inputs
 * @return {?}
 */
function (Cmp, inputs) {
    /** @type {?} */
    var Prototype = Cmp.prototype;
    inputs.forEach((/**
     * @param {?} item
     * @return {?}
     */
    function (item) {
        Object.defineProperty(Prototype, item, {
            get: /**
             * @return {?}
             */
            function () {
                return this.el[item];
            },
            set: /**
             * @param {?} val
             * @return {?}
             */
            function (val) {
                var _this = this;
                this.z.runOutsideAngular((/**
                 * @return {?}
                 */
                function () { return (_this.el[item] = val); }));
            },
        });
    }));
});
/** @type {?} */
var proxyMethods = (/**
 * @param {?} Cmp
 * @param {?} methods
 * @return {?}
 */
function (Cmp, methods) {
    /** @type {?} */
    var Prototype = Cmp.prototype;
    methods.forEach((/**
     * @param {?} methodName
     * @return {?}
     */
    function (methodName) {
        Prototype[methodName] = (/**
         * @return {?}
         */
        function () {
            var _this = this;
            /** @type {?} */
            var args = arguments;
            return this.z.runOutsideAngular((/**
             * @return {?}
             */
            function () { return _this.el[methodName].apply(_this.el, args); }));
        });
    }));
});
/** @type {?} */
var proxyOutputs = (/**
 * @param {?} instance
 * @param {?} el
 * @param {?} events
 * @return {?}
 */
function (instance, el, events) {
    events.forEach((/**
     * @param {?} eventName
     * @return {?}
     */
    function (eventName) { return (instance[eventName] = fromEvent(el, eventName)); }));
});
// tslint:disable-next-line: only-arrow-functions
/**
 * @param {?} opts
 * @return {?}
 */
function ProxyCmp(opts) {
    /** @type {?} */
    var decorator = (/**
     * @param {?} cls
     * @return {?}
     */
    function (cls) {
        if (opts.inputs) {
            proxyInputs(cls, opts.inputs);
        }
        if (opts.methods) {
            proxyMethods(cls, opts.methods);
        }
        return cls;
    });
    return decorator;
}

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var AppLogo = /** @class */ (function () {
    function AppLogo(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AppLogo.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AppLogo = __decorate([
        ProxyCmp({
            inputs: ['claim', 'claimLang', 'color', 'focusable', 'href', 'logoTitle']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AppLogo);
AppLogo.ɵfac = function AppLogo_Factory(t) { return new (t || AppLogo)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AppLogo.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AppLogo, selectors: [["app-logo"]], inputs: { claim: "claim", claimLang: "claimLang", color: "color", focusable: "focusable", href: "href", logoTitle: "logoTitle" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AppLogo_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AppLogo, [{
        type: Component,
        args: [{
                selector: 'app-logo',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['claim', 'claimLang', 'color', 'focusable', 'href', 'logoTitle']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AppLogo;
}());
var AppMegaMenu = /** @class */ (function () {
    function AppMegaMenu(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AppMegaMenu.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AppMegaMenu = __decorate([
        ProxyCmp({
            inputs: ['active', 'activeRouteId', 'hide', 'isActive', 'navigation']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AppMegaMenu);
AppMegaMenu.ɵfac = function AppMegaMenu_Factory(t) { return new (t || AppMegaMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AppMegaMenu.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AppMegaMenu, selectors: [["app-mega-menu"]], inputs: { active: "active", activeRouteId: "activeRouteId", hide: "hide", isActive: "isActive", navigation: "navigation" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AppMegaMenu_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AppMegaMenu, [{
        type: Component,
        args: [{
                selector: 'app-mega-menu',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['active', 'activeRouteId', 'hide', 'isActive', 'navigation']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AppMegaMenu;
}());
var AppNavigationMainMobile = /** @class */ (function () {
    function AppNavigationMainMobile(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['closeMenu']);
    }
    /** @nocollapse */
    AppNavigationMainMobile.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AppNavigationMainMobile = __decorate([
        ProxyCmp({
            inputs: ['activeRouteId', 'hide', 'navigation']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AppNavigationMainMobile);
AppNavigationMainMobile.ɵfac = function AppNavigationMainMobile_Factory(t) { return new (t || AppNavigationMainMobile)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AppNavigationMainMobile.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AppNavigationMainMobile, selectors: [["app-navigation-main-mobile"]], inputs: { activeRouteId: "activeRouteId", hide: "hide", navigation: "navigation" }, outputs: { closeMenu: "closeMenu" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AppNavigationMainMobile_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AppNavigationMainMobile, [{
        type: Component,
        args: [{
                selector: 'app-navigation-main-mobile',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['activeRouteId', 'hide', 'navigation'],
                outputs: ['closeMenu']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AppNavigationMainMobile;
}());
var AppNavigationSectorMobile = /** @class */ (function () {
    function AppNavigationSectorMobile(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    AppNavigationSectorMobile.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AppNavigationSectorMobile = __decorate([
        ProxyCmp({
            inputs: ['activeSectorId', 'hide', 'navigation']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AppNavigationSectorMobile);
AppNavigationSectorMobile.ɵfac = function AppNavigationSectorMobile_Factory(t) { return new (t || AppNavigationSectorMobile)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AppNavigationSectorMobile.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AppNavigationSectorMobile, selectors: [["app-navigation-sector-mobile"]], inputs: { activeSectorId: "activeSectorId", hide: "hide", navigation: "navigation" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AppNavigationSectorMobile_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AppNavigationSectorMobile, [{
        type: Component,
        args: [{
                selector: 'app-navigation-sector-mobile',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['activeSectorId', 'hide', 'navigation']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AppNavigationSectorMobile;
}());
var AppNavigationUserMenu = /** @class */ (function () {
    function AppNavigationUserMenu(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['closeMenu']);
    }
    /** @nocollapse */
    AppNavigationUserMenu.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    AppNavigationUserMenu = __decorate([
        ProxyCmp({
            inputs: ['hide', 'navigation']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], AppNavigationUserMenu);
AppNavigationUserMenu.ɵfac = function AppNavigationUserMenu_Factory(t) { return new (t || AppNavigationUserMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
AppNavigationUserMenu.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: AppNavigationUserMenu, selectors: [["app-navigation-user-menu"]], inputs: { hide: "hide", navigation: "navigation" }, outputs: { closeMenu: "closeMenu" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function AppNavigationUserMenu_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AppNavigationUserMenu, [{
        type: Component,
        args: [{
                selector: 'app-navigation-user-menu',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['hide', 'navigation'],
                outputs: ['closeMenu']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return AppNavigationUserMenu;
}());
var ScaleAccordion = /** @class */ (function () {
    function ScaleAccordion(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleAccordion.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleAccordion = __decorate([
        ProxyCmp({
            inputs: ['dependent', 'expanded', 'headingLevel', 'iconLocation', 'styles']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleAccordion);
ScaleAccordion.ɵfac = function ScaleAccordion_Factory(t) { return new (t || ScaleAccordion)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleAccordion.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleAccordion, selectors: [["scale-accordion"]], inputs: { dependent: "dependent", expanded: "expanded", headingLevel: "headingLevel", iconLocation: "iconLocation", styles: "styles" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleAccordion_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleAccordion, [{
        type: Component,
        args: [{
                selector: 'scale-accordion',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['dependent', 'expanded', 'headingLevel', 'iconLocation', 'styles']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleAccordion;
}());
var ScaleAlert = /** @class */ (function () {
    function ScaleAlert(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleAlert.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleAlert = __decorate([
        ProxyCmp({
            inputs: ['headline', 'icon', 'opened', 'size', 'styles', 'timeout', 'variant'],
            methods: ['open']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleAlert);
ScaleAlert.ɵfac = function ScaleAlert_Factory(t) { return new (t || ScaleAlert)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleAlert.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleAlert, selectors: [["scale-alert"]], inputs: { headline: "headline", icon: "icon", opened: "opened", size: "size", styles: "styles", timeout: "timeout", variant: "variant" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleAlert_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleAlert, [{
        type: Component,
        args: [{
                selector: 'scale-alert',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['headline', 'icon', 'opened', 'size', 'styles', 'timeout', 'variant']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleAlert;
}());
var ScaleAppFooter = /** @class */ (function () {
    function ScaleAppFooter(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleAppFooter.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleAppFooter = __decorate([
        ProxyCmp({
            inputs: ['claimLang', 'copyright', 'footerNavigation', 'logoAriaDescribedBy', 'logoClick', 'logoHref', 'logoTitle', 'styles', 'variant']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleAppFooter);
ScaleAppFooter.ɵfac = function ScaleAppFooter_Factory(t) { return new (t || ScaleAppFooter)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleAppFooter.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleAppFooter, selectors: [["scale-app-footer"]], inputs: { claimLang: "claimLang", copyright: "copyright", footerNavigation: "footerNavigation", logoAriaDescribedBy: "logoAriaDescribedBy", logoClick: "logoClick", logoHref: "logoHref", logoTitle: "logoTitle", styles: "styles", variant: "variant" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleAppFooter_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleAppFooter, [{
        type: Component,
        args: [{
                selector: 'scale-app-footer',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['claimLang', 'copyright', 'footerNavigation', 'logoAriaDescribedBy', 'logoClick', 'logoHref', 'logoTitle', 'styles', 'variant']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleAppFooter;
}());
var ScaleAppHeader = /** @class */ (function () {
    function ScaleAppHeader(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleAppHeader.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleAppHeader = __decorate([
        ProxyCmp({
            inputs: ['activeRouteId', 'activeSectorId', 'addonNavigation', 'claimLang', 'iconNavigation', 'isMegaMenuVisible', 'isMobileMenuVisible', 'logoAriaDescribedBy', 'logoClick', 'logoHref', 'logoTitle', 'mainNavigation', 'megaMenuVisible', 'mobileMenuVisible', 'portalName', 'sectorNavigation', 'sticky', 'userNavigation']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleAppHeader);
ScaleAppHeader.ɵfac = function ScaleAppHeader_Factory(t) { return new (t || ScaleAppHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleAppHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleAppHeader, selectors: [["scale-app-header"]], inputs: { activeRouteId: "activeRouteId", activeSectorId: "activeSectorId", addonNavigation: "addonNavigation", claimLang: "claimLang", iconNavigation: "iconNavigation", isMegaMenuVisible: "isMegaMenuVisible", isMobileMenuVisible: "isMobileMenuVisible", logoAriaDescribedBy: "logoAriaDescribedBy", logoClick: "logoClick", logoHref: "logoHref", logoTitle: "logoTitle", mainNavigation: "mainNavigation", megaMenuVisible: "megaMenuVisible", mobileMenuVisible: "mobileMenuVisible", portalName: "portalName", sectorNavigation: "sectorNavigation", sticky: "sticky", userNavigation: "userNavigation" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleAppHeader_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleAppHeader, [{
        type: Component,
        args: [{
                selector: 'scale-app-header',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['activeRouteId', 'activeSectorId', 'addonNavigation', 'claimLang', 'iconNavigation', 'isMegaMenuVisible', 'isMobileMenuVisible', 'logoAriaDescribedBy', 'logoClick', 'logoHref', 'logoTitle', 'mainNavigation', 'megaMenuVisible', 'mobileMenuVisible', 'portalName', 'sectorNavigation', 'sticky', 'userNavigation']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleAppHeader;
}());
var ScaleAppShell = /** @class */ (function () {
    function ScaleAppShell(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleAppShell.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleAppShell = __decorate([
        ProxyCmp({
            inputs: ['activeRouteId', 'activeSectorId', 'addonNavigation', 'claimLang', 'iconNavigation', 'logoAriaDescribedBy', 'logoClick', 'logoHref', 'logoTitle', 'mainNavigation', 'portalName', 'sectorNavigation', 'sticky', 'styles', 'userNavigation']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleAppShell);
ScaleAppShell.ɵfac = function ScaleAppShell_Factory(t) { return new (t || ScaleAppShell)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleAppShell.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleAppShell, selectors: [["scale-app-shell"]], inputs: { activeRouteId: "activeRouteId", activeSectorId: "activeSectorId", addonNavigation: "addonNavigation", claimLang: "claimLang", iconNavigation: "iconNavigation", logoAriaDescribedBy: "logoAriaDescribedBy", logoClick: "logoClick", logoHref: "logoHref", logoTitle: "logoTitle", mainNavigation: "mainNavigation", portalName: "portalName", sectorNavigation: "sectorNavigation", sticky: "sticky", styles: "styles", userNavigation: "userNavigation" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleAppShell_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleAppShell, [{
        type: Component,
        args: [{
                selector: 'scale-app-shell',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['activeRouteId', 'activeSectorId', 'addonNavigation', 'claimLang', 'iconNavigation', 'logoAriaDescribedBy', 'logoClick', 'logoHref', 'logoTitle', 'mainNavigation', 'portalName', 'sectorNavigation', 'sticky', 'styles', 'userNavigation']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleAppShell;
}());
var ScaleBreadcrumb = /** @class */ (function () {
    function ScaleBreadcrumb(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleBreadcrumb.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleBreadcrumb = __decorate([
        ProxyCmp({
            inputs: ['separator', 'styles']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleBreadcrumb);
ScaleBreadcrumb.ɵfac = function ScaleBreadcrumb_Factory(t) { return new (t || ScaleBreadcrumb)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleBreadcrumb.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleBreadcrumb, selectors: [["scale-breadcrumb"]], inputs: { separator: "separator", styles: "styles" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleBreadcrumb_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleBreadcrumb, [{
        type: Component,
        args: [{
                selector: 'scale-breadcrumb',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['separator', 'styles']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleBreadcrumb;
}());
var ScaleButton = /** @class */ (function () {
    function ScaleButton(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleButton.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleButton = __decorate([
        ProxyCmp({
            inputs: ['disabled', 'download', 'href', 'iconOnly', 'iconPosition', 'innerTabindex', 'name', 'size', 'styles', 'target', 'type', 'value', 'variant'],
            methods: ['setFocus']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleButton);
ScaleButton.ɵfac = function ScaleButton_Factory(t) { return new (t || ScaleButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleButton.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleButton, selectors: [["scale-button"]], inputs: { disabled: "disabled", download: "download", href: "href", iconOnly: "iconOnly", iconPosition: "iconPosition", innerTabindex: "innerTabindex", name: "name", size: "size", styles: "styles", target: "target", type: "type", value: "value", variant: "variant" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleButton_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleButton, [{
        type: Component,
        args: [{
                selector: 'scale-button',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['disabled', 'download', 'href', 'iconOnly', 'iconPosition', 'innerTabindex', 'name', 'size', 'styles', 'target', 'type', 'value', 'variant']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleButton;
}());
var ScaleCallout = /** @class */ (function () {
    function ScaleCallout(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleCallout.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleCallout = __decorate([
        ProxyCmp({
            inputs: ['asterisk', 'rotation', 'size', 'variant']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleCallout);
ScaleCallout.ɵfac = function ScaleCallout_Factory(t) { return new (t || ScaleCallout)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleCallout.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleCallout, selectors: [["scale-callout"]], inputs: { asterisk: "asterisk", rotation: "rotation", size: "size", variant: "variant" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleCallout_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleCallout, [{
        type: Component,
        args: [{
                selector: 'scale-callout',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['asterisk', 'rotation', 'size', 'variant']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleCallout;
}());
var ScaleCard = /** @class */ (function () {
    function ScaleCard(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleCard.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleCard = __decorate([
        ProxyCmp({
            inputs: ['label', 'rel', 'styles', 'target', 'to']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleCard);
ScaleCard.ɵfac = function ScaleCard_Factory(t) { return new (t || ScaleCard)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleCard.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleCard, selectors: [["scale-card"]], inputs: { label: "label", rel: "rel", styles: "styles", target: "target", to: "to" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleCard_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleCard, [{
        type: Component,
        args: [{
                selector: 'scale-card',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['label', 'rel', 'styles', 'target', 'to']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleCard;
}());
var ScaleCarousel = /** @class */ (function () {
    function ScaleCarousel(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleCarousel.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleCarousel = __decorate([
        ProxyCmp({
            inputs: ['styles', 'vertical']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleCarousel);
ScaleCarousel.ɵfac = function ScaleCarousel_Factory(t) { return new (t || ScaleCarousel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleCarousel.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleCarousel, selectors: [["scale-carousel"]], inputs: { styles: "styles", vertical: "vertical" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleCarousel_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleCarousel, [{
        type: Component,
        args: [{
                selector: 'scale-carousel',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['styles', 'vertical']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleCarousel;
}());
var ScaleChartStackCard = /** @class */ (function () {
    function ScaleChartStackCard(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleChartStackCard.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleChartStackCard = __decorate([
        ProxyCmp({
            inputs: ['data', 'heading']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleChartStackCard);
ScaleChartStackCard.ɵfac = function ScaleChartStackCard_Factory(t) { return new (t || ScaleChartStackCard)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleChartStackCard.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleChartStackCard, selectors: [["scale-chart-stack-card"]], inputs: { data: "data", heading: "heading" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleChartStackCard_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleChartStackCard, [{
        type: Component,
        args: [{
                selector: 'scale-chart-stack-card',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['data', 'heading']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleChartStackCard;
}());
var ScaleCheckbox = /** @class */ (function () {
    function ScaleCheckbox(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-change', 'scaleChange']);
    }
    /** @nocollapse */
    ScaleCheckbox.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleCheckbox = __decorate([
        ProxyCmp({
            inputs: ['ariaLabelCheckbox', 'checked', 'disabled', 'helperText', 'hideLabel', 'indeterminate', 'inputId', 'invalid', 'label', 'name', 'status', 'styles', 'value']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleCheckbox);
ScaleCheckbox.ɵfac = function ScaleCheckbox_Factory(t) { return new (t || ScaleCheckbox)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleCheckbox.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleCheckbox, selectors: [["scale-checkbox"]], inputs: { ariaLabelCheckbox: "ariaLabelCheckbox", checked: "checked", disabled: "disabled", helperText: "helperText", hideLabel: "hideLabel", indeterminate: "indeterminate", inputId: "inputId", invalid: "invalid", label: "label", name: "name", status: "status", styles: "styles", value: "value" }, outputs: { "scale-change": "scale-change", scaleChange: "scaleChange" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleCheckbox_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleCheckbox, [{
        type: Component,
        args: [{
                selector: 'scale-checkbox',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['ariaLabelCheckbox', 'checked', 'disabled', 'helperText', 'hideLabel', 'indeterminate', 'inputId', 'invalid', 'label', 'name', 'status', 'styles', 'value'],
                outputs: ['scale-change', 'scaleChange']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleCheckbox;
}());
var ScaleCheckboxGroup = /** @class */ (function () {
    function ScaleCheckboxGroup(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleCheckboxGroup.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleCheckboxGroup = __decorate([
        ProxyCmp({
            inputs: ['ariaLabelCheckboxGroup', 'helperText', 'inputId', 'invalid', 'label', 'name', 'selectText', 'status', 'styles', 'unselectText', 'value']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleCheckboxGroup);
ScaleCheckboxGroup.ɵfac = function ScaleCheckboxGroup_Factory(t) { return new (t || ScaleCheckboxGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleCheckboxGroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleCheckboxGroup, selectors: [["scale-checkbox-group"]], inputs: { ariaLabelCheckboxGroup: "ariaLabelCheckboxGroup", helperText: "helperText", inputId: "inputId", invalid: "invalid", label: "label", name: "name", selectText: "selectText", status: "status", styles: "styles", unselectText: "unselectText", value: "value" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleCheckboxGroup_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleCheckboxGroup, [{
        type: Component,
        args: [{
                selector: 'scale-checkbox-group',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['ariaLabelCheckboxGroup', 'helperText', 'inputId', 'invalid', 'label', 'name', 'selectText', 'status', 'styles', 'unselectText', 'value']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleCheckboxGroup;
}());
var ScaleCollapsible = /** @class */ (function () {
    function ScaleCollapsible(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-expand', 'scaleExpand']);
    }
    /** @nocollapse */
    ScaleCollapsible.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleCollapsible = __decorate([
        ProxyCmp({
            inputs: ['expanded', 'headingLevel', 'iconLocation', 'styles']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleCollapsible);
ScaleCollapsible.ɵfac = function ScaleCollapsible_Factory(t) { return new (t || ScaleCollapsible)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleCollapsible.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleCollapsible, selectors: [["scale-collapsible"]], inputs: { expanded: "expanded", headingLevel: "headingLevel", iconLocation: "iconLocation", styles: "styles" }, outputs: { "scale-expand": "scale-expand", scaleExpand: "scaleExpand" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleCollapsible_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleCollapsible, [{
        type: Component,
        args: [{
                selector: 'scale-collapsible',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['expanded', 'headingLevel', 'iconLocation', 'styles'],
                outputs: ['scale-expand', 'scaleExpand']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleCollapsible;
}());
var ScaleDataGrid = /** @class */ (function () {
    function ScaleDataGrid(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-edit', 'scaleEdit', 'scale-sort', 'scaleSort']);
    }
    /** @nocollapse */
    ScaleDataGrid.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleDataGrid = __decorate([
        ProxyCmp({
            inputs: ['fields', 'freezeHeader', 'heading', 'height', 'hideBorder', 'hideHeader', 'hideInfo', 'hideMenu', 'numbered', 'pageSize', 'rows', 'selectable', 'selection', 'shadeAlternate', 'styles', 'visible']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleDataGrid);
ScaleDataGrid.ɵfac = function ScaleDataGrid_Factory(t) { return new (t || ScaleDataGrid)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleDataGrid.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleDataGrid, selectors: [["scale-data-grid"]], inputs: { fields: "fields", freezeHeader: "freezeHeader", heading: "heading", height: "height", hideBorder: "hideBorder", hideHeader: "hideHeader", hideInfo: "hideInfo", hideMenu: "hideMenu", numbered: "numbered", pageSize: "pageSize", rows: "rows", selectable: "selectable", selection: "selection", shadeAlternate: "shadeAlternate", styles: "styles", visible: "visible" }, outputs: { "scale-edit": "scale-edit", scaleEdit: "scaleEdit", "scale-sort": "scale-sort", scaleSort: "scaleSort" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleDataGrid_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleDataGrid, [{
        type: Component,
        args: [{
                selector: 'scale-data-grid',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['fields', 'freezeHeader', 'heading', 'height', 'hideBorder', 'hideHeader', 'hideInfo', 'hideMenu', 'numbered', 'pageSize', 'rows', 'selectable', 'selection', 'shadeAlternate', 'styles', 'visible'],
                outputs: ['scale-edit', 'scaleEdit', 'scale-sort', 'scaleSort']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleDataGrid;
}());
var ScaleDatePicker = /** @class */ (function () {
    function ScaleDatePicker(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-change', 'scaleChange', 'scale-blur', 'scaleBlur', 'scale-focus', 'scaleFocus']);
    }
    /** @nocollapse */
    ScaleDatePicker.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleDatePicker = __decorate([
        ProxyCmp({
            inputs: ['dateAdapter', 'direction', 'disabled', 'firstDayOfWeek', 'helperText', 'identifier', 'invalid', 'label', 'localization', 'max', 'min', 'name', 'popupTitle', 'required', 'role', 'size', 'status', 'styles', 'value'],
            methods: ['setFocus', 'show', 'hide']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleDatePicker);
ScaleDatePicker.ɵfac = function ScaleDatePicker_Factory(t) { return new (t || ScaleDatePicker)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleDatePicker.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleDatePicker, selectors: [["scale-date-picker"]], inputs: { dateAdapter: "dateAdapter", direction: "direction", disabled: "disabled", firstDayOfWeek: "firstDayOfWeek", helperText: "helperText", identifier: "identifier", invalid: "invalid", label: "label", localization: "localization", max: "max", min: "min", name: "name", popupTitle: "popupTitle", required: "required", role: "role", size: "size", status: "status", styles: "styles", value: "value" }, outputs: { "scale-change": "scale-change", scaleChange: "scaleChange", "scale-blur": "scale-blur", scaleBlur: "scaleBlur", "scale-focus": "scale-focus", scaleFocus: "scaleFocus" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleDatePicker_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleDatePicker, [{
        type: Component,
        args: [{
                selector: 'scale-date-picker',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['dateAdapter', 'direction', 'disabled', 'firstDayOfWeek', 'helperText', 'identifier', 'invalid', 'label', 'localization', 'max', 'min', 'name', 'popupTitle', 'required', 'role', 'size', 'status', 'styles', 'value'],
                outputs: ['scale-change', 'scaleChange', 'scale-blur', 'scaleBlur', 'scale-focus', 'scaleFocus']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleDatePicker;
}());
var ScaleDivider = /** @class */ (function () {
    function ScaleDivider(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleDivider.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleDivider = __decorate([
        ProxyCmp({
            inputs: ['styles', 'vertical']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleDivider);
ScaleDivider.ɵfac = function ScaleDivider_Factory(t) { return new (t || ScaleDivider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleDivider.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleDivider, selectors: [["scale-divider"]], inputs: { styles: "styles", vertical: "vertical" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleDivider_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleDivider, [{
        type: Component,
        args: [{
                selector: 'scale-divider',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['styles', 'vertical']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleDivider;
}());
var ScaleDropdown = /** @class */ (function () {
    function ScaleDropdown(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-input', 'scaleInput', 'scale-change', 'scaleChange', 'scale-focus', 'scaleFocus', 'scale-blur', 'scaleBlur', 'scale-keydown', 'scaleKeydown']);
    }
    /** @nocollapse */
    ScaleDropdown.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleDropdown = __decorate([
        ProxyCmp({
            inputs: ['controlled', 'disabled', 'helperText', 'inputId', 'invalid', 'label', 'multiple', 'name', 'required', 'size', 'status', 'styles', 'transparent', 'value', 'visibleSize']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleDropdown);
ScaleDropdown.ɵfac = function ScaleDropdown_Factory(t) { return new (t || ScaleDropdown)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleDropdown.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleDropdown, selectors: [["scale-dropdown"]], inputs: { controlled: "controlled", disabled: "disabled", helperText: "helperText", inputId: "inputId", invalid: "invalid", label: "label", multiple: "multiple", name: "name", required: "required", size: "size", status: "status", styles: "styles", transparent: "transparent", value: "value", visibleSize: "visibleSize" }, outputs: { "scale-input": "scale-input", scaleInput: "scaleInput", "scale-change": "scale-change", scaleChange: "scaleChange", "scale-focus": "scale-focus", scaleFocus: "scaleFocus", "scale-blur": "scale-blur", scaleBlur: "scaleBlur", "scale-keydown": "scale-keydown", scaleKeydown: "scaleKeydown" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleDropdown_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleDropdown, [{
        type: Component,
        args: [{
                selector: 'scale-dropdown',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['controlled', 'disabled', 'helperText', 'inputId', 'invalid', 'label', 'multiple', 'name', 'required', 'size', 'status', 'styles', 'transparent', 'value', 'visibleSize'],
                outputs: ['scale-input', 'scaleInput', 'scale-change', 'scaleChange', 'scale-focus', 'scaleFocus', 'scale-blur', 'scaleBlur', 'scale-keydown', 'scaleKeydown']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleDropdown;
}());
var ScaleGrid = /** @class */ (function () {
    function ScaleGrid(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleGrid.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleGrid = __decorate([
        ProxyCmp({
            inputs: ['columns', 'gutterX', 'gutterY', 'maxWidth', 'spacing']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleGrid);
ScaleGrid.ɵfac = function ScaleGrid_Factory(t) { return new (t || ScaleGrid)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleGrid.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleGrid, selectors: [["scale-grid"]], inputs: { columns: "columns", gutterX: "gutterX", gutterY: "gutterY", maxWidth: "maxWidth", spacing: "spacing" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleGrid_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleGrid, [{
        type: Component,
        args: [{
                selector: 'scale-grid',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['columns', 'gutterX', 'gutterY', 'maxWidth', 'spacing']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleGrid;
}());
var ScaleGridItem = /** @class */ (function () {
    function ScaleGridItem(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleGridItem.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleGridItem = __decorate([
        ProxyCmp({
            inputs: ['offset', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleGridItem);
ScaleGridItem.ɵfac = function ScaleGridItem_Factory(t) { return new (t || ScaleGridItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleGridItem.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleGridItem, selectors: [["scale-grid-item"]], inputs: { offset: "offset", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleGridItem_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleGridItem, [{
        type: Component,
        args: [{
                selector: 'scale-grid-item',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['offset', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleGridItem;
}());
var ScaleIcon = /** @class */ (function () {
    function ScaleIcon(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIcon.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIcon = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'decorative', 'fill', 'focusable', 'name', 'path', 'size', 'stroke']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIcon);
ScaleIcon.ɵfac = function ScaleIcon_Factory(t) { return new (t || ScaleIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIcon.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIcon, selectors: [["scale-icon"]], inputs: { accessibilityTitle: "accessibilityTitle", decorative: "decorative", fill: "fill", focusable: "focusable", name: "name", path: "path", size: "size", stroke: "stroke" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIcon_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIcon, [{
        type: Component,
        args: [{
                selector: 'scale-icon',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'decorative', 'fill', 'focusable', 'name', 'path', 'size', 'stroke']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIcon;
}());
var ScaleIconActionAdd = /** @class */ (function () {
    function ScaleIconActionAdd(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionAdd.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionAdd = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionAdd);
ScaleIconActionAdd.ɵfac = function ScaleIconActionAdd_Factory(t) { return new (t || ScaleIconActionAdd)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionAdd.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionAdd, selectors: [["scale-icon-action-add"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionAdd_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionAdd, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-add',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionAdd;
}());
var ScaleIconActionAddCard = /** @class */ (function () {
    function ScaleIconActionAddCard(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionAddCard.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionAddCard = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionAddCard);
ScaleIconActionAddCard.ɵfac = function ScaleIconActionAddCard_Factory(t) { return new (t || ScaleIconActionAddCard)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionAddCard.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionAddCard, selectors: [["scale-icon-action-add-card"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionAddCard_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionAddCard, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-add-card',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionAddCard;
}());
var ScaleIconActionAutoLogin = /** @class */ (function () {
    function ScaleIconActionAutoLogin(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionAutoLogin.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionAutoLogin = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionAutoLogin);
ScaleIconActionAutoLogin.ɵfac = function ScaleIconActionAutoLogin_Factory(t) { return new (t || ScaleIconActionAutoLogin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionAutoLogin.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionAutoLogin, selectors: [["scale-icon-action-auto-login"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionAutoLogin_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionAutoLogin, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-auto-login',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionAutoLogin;
}());
var ScaleIconActionBackspace = /** @class */ (function () {
    function ScaleIconActionBackspace(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionBackspace.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionBackspace = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionBackspace);
ScaleIconActionBackspace.ɵfac = function ScaleIconActionBackspace_Factory(t) { return new (t || ScaleIconActionBackspace)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionBackspace.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionBackspace, selectors: [["scale-icon-action-backspace"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionBackspace_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionBackspace, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-backspace',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionBackspace;
}());
var ScaleIconActionChangelog = /** @class */ (function () {
    function ScaleIconActionChangelog(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionChangelog.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionChangelog = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionChangelog);
ScaleIconActionChangelog.ɵfac = function ScaleIconActionChangelog_Factory(t) { return new (t || ScaleIconActionChangelog)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionChangelog.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionChangelog, selectors: [["scale-icon-action-changelog"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionChangelog_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionChangelog, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-changelog',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionChangelog;
}());
var ScaleIconActionCircleAdd = /** @class */ (function () {
    function ScaleIconActionCircleAdd(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionCircleAdd.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionCircleAdd = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionCircleAdd);
ScaleIconActionCircleAdd.ɵfac = function ScaleIconActionCircleAdd_Factory(t) { return new (t || ScaleIconActionCircleAdd)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionCircleAdd.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionCircleAdd, selectors: [["scale-icon-action-circle-add"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionCircleAdd_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionCircleAdd, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-circle-add',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionCircleAdd;
}());
var ScaleIconActionCircleClose = /** @class */ (function () {
    function ScaleIconActionCircleClose(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionCircleClose.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionCircleClose = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionCircleClose);
ScaleIconActionCircleClose.ɵfac = function ScaleIconActionCircleClose_Factory(t) { return new (t || ScaleIconActionCircleClose)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionCircleClose.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionCircleClose, selectors: [["scale-icon-action-circle-close"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionCircleClose_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionCircleClose, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-circle-close',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionCircleClose;
}());
var ScaleIconActionClose = /** @class */ (function () {
    function ScaleIconActionClose(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionClose.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionClose = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionClose);
ScaleIconActionClose.ɵfac = function ScaleIconActionClose_Factory(t) { return new (t || ScaleIconActionClose)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionClose.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionClose, selectors: [["scale-icon-action-close"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionClose_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionClose, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-close',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionClose;
}());
var ScaleIconActionCopyPaste = /** @class */ (function () {
    function ScaleIconActionCopyPaste(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionCopyPaste.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionCopyPaste = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionCopyPaste);
ScaleIconActionCopyPaste.ɵfac = function ScaleIconActionCopyPaste_Factory(t) { return new (t || ScaleIconActionCopyPaste)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionCopyPaste.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionCopyPaste, selectors: [["scale-icon-action-copy-paste"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionCopyPaste_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionCopyPaste, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-copy-paste',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionCopyPaste;
}());
var ScaleIconActionCutPaste = /** @class */ (function () {
    function ScaleIconActionCutPaste(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionCutPaste.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionCutPaste = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionCutPaste);
ScaleIconActionCutPaste.ɵfac = function ScaleIconActionCutPaste_Factory(t) { return new (t || ScaleIconActionCutPaste)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionCutPaste.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionCutPaste, selectors: [["scale-icon-action-cut-paste"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionCutPaste_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionCutPaste, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-cut-paste',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionCutPaste;
}());
var ScaleIconActionDisabledMicrophone = /** @class */ (function () {
    function ScaleIconActionDisabledMicrophone(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionDisabledMicrophone.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionDisabledMicrophone = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionDisabledMicrophone);
ScaleIconActionDisabledMicrophone.ɵfac = function ScaleIconActionDisabledMicrophone_Factory(t) { return new (t || ScaleIconActionDisabledMicrophone)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionDisabledMicrophone.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionDisabledMicrophone, selectors: [["scale-icon-action-disabled-microphone"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionDisabledMicrophone_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionDisabledMicrophone, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-disabled-microphone',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionDisabledMicrophone;
}());
var ScaleIconActionDownload = /** @class */ (function () {
    function ScaleIconActionDownload(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionDownload.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionDownload = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionDownload);
ScaleIconActionDownload.ɵfac = function ScaleIconActionDownload_Factory(t) { return new (t || ScaleIconActionDownload)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionDownload.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionDownload, selectors: [["scale-icon-action-download"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionDownload_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionDownload, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-download',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionDownload;
}());
var ScaleIconActionDragAndDrop = /** @class */ (function () {
    function ScaleIconActionDragAndDrop(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionDragAndDrop.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionDragAndDrop = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionDragAndDrop);
ScaleIconActionDragAndDrop.ɵfac = function ScaleIconActionDragAndDrop_Factory(t) { return new (t || ScaleIconActionDragAndDrop)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionDragAndDrop.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionDragAndDrop, selectors: [["scale-icon-action-drag-and-drop"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionDragAndDrop_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionDragAndDrop, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-drag-and-drop',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionDragAndDrop;
}());
var ScaleIconActionEdit = /** @class */ (function () {
    function ScaleIconActionEdit(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionEdit.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionEdit = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionEdit);
ScaleIconActionEdit.ɵfac = function ScaleIconActionEdit_Factory(t) { return new (t || ScaleIconActionEdit)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionEdit.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionEdit, selectors: [["scale-icon-action-edit"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionEdit_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionEdit, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-edit',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionEdit;
}());
var ScaleIconActionFastForward = /** @class */ (function () {
    function ScaleIconActionFastForward(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionFastForward.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionFastForward = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionFastForward);
ScaleIconActionFastForward.ɵfac = function ScaleIconActionFastForward_Factory(t) { return new (t || ScaleIconActionFastForward)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionFastForward.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionFastForward, selectors: [["scale-icon-action-fast-forward"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionFastForward_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionFastForward, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-fast-forward',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionFastForward;
}());
var ScaleIconActionFavorite = /** @class */ (function () {
    function ScaleIconActionFavorite(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionFavorite.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionFavorite = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionFavorite);
ScaleIconActionFavorite.ɵfac = function ScaleIconActionFavorite_Factory(t) { return new (t || ScaleIconActionFavorite)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionFavorite.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionFavorite, selectors: [["scale-icon-action-favorite"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionFavorite_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionFavorite, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-favorite',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionFavorite;
}());
var ScaleIconActionFilter = /** @class */ (function () {
    function ScaleIconActionFilter(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionFilter.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionFilter = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionFilter);
ScaleIconActionFilter.ɵfac = function ScaleIconActionFilter_Factory(t) { return new (t || ScaleIconActionFilter)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionFilter.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionFilter, selectors: [["scale-icon-action-filter"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionFilter_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionFilter, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-filter',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionFilter;
}());
var ScaleIconActionForward = /** @class */ (function () {
    function ScaleIconActionForward(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionForward.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionForward = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionForward);
ScaleIconActionForward.ɵfac = function ScaleIconActionForward_Factory(t) { return new (t || ScaleIconActionForward)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionForward.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionForward, selectors: [["scale-icon-action-forward"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionForward_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionForward, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-forward',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionForward;
}());
var ScaleIconActionFullScreen = /** @class */ (function () {
    function ScaleIconActionFullScreen(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionFullScreen.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionFullScreen = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionFullScreen);
ScaleIconActionFullScreen.ɵfac = function ScaleIconActionFullScreen_Factory(t) { return new (t || ScaleIconActionFullScreen)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionFullScreen.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionFullScreen, selectors: [["scale-icon-action-full-screen"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionFullScreen_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionFullScreen, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-full-screen',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionFullScreen;
}());
var ScaleIconActionHidePassword = /** @class */ (function () {
    function ScaleIconActionHidePassword(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionHidePassword.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionHidePassword = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionHidePassword);
ScaleIconActionHidePassword.ɵfac = function ScaleIconActionHidePassword_Factory(t) { return new (t || ScaleIconActionHidePassword)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionHidePassword.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionHidePassword, selectors: [["scale-icon-action-hide-password"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionHidePassword_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionHidePassword, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-hide-password',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionHidePassword;
}());
var ScaleIconActionIndeterminate = /** @class */ (function () {
    function ScaleIconActionIndeterminate(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionIndeterminate.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionIndeterminate = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionIndeterminate);
ScaleIconActionIndeterminate.ɵfac = function ScaleIconActionIndeterminate_Factory(t) { return new (t || ScaleIconActionIndeterminate)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionIndeterminate.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionIndeterminate, selectors: [["scale-icon-action-indeterminate"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionIndeterminate_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionIndeterminate, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-indeterminate',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionIndeterminate;
}());
var ScaleIconActionInstall = /** @class */ (function () {
    function ScaleIconActionInstall(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionInstall.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionInstall = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionInstall);
ScaleIconActionInstall.ɵfac = function ScaleIconActionInstall_Factory(t) { return new (t || ScaleIconActionInstall)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionInstall.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionInstall, selectors: [["scale-icon-action-install"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionInstall_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionInstall, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-install',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionInstall;
}());
var ScaleIconActionLink = /** @class */ (function () {
    function ScaleIconActionLink(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionLink.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionLink = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionLink);
ScaleIconActionLink.ɵfac = function ScaleIconActionLink_Factory(t) { return new (t || ScaleIconActionLink)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionLink.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionLink, selectors: [["scale-icon-action-link"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionLink_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionLink, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-link',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionLink;
}());
var ScaleIconActionLogout = /** @class */ (function () {
    function ScaleIconActionLogout(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionLogout.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionLogout = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionLogout);
ScaleIconActionLogout.ɵfac = function ScaleIconActionLogout_Factory(t) { return new (t || ScaleIconActionLogout)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionLogout.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionLogout, selectors: [["scale-icon-action-logout"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionLogout_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionLogout, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-logout',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionLogout;
}());
var ScaleIconActionLoop = /** @class */ (function () {
    function ScaleIconActionLoop(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionLoop.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionLoop = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionLoop);
ScaleIconActionLoop.ɵfac = function ScaleIconActionLoop_Factory(t) { return new (t || ScaleIconActionLoop)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionLoop.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionLoop, selectors: [["scale-icon-action-loop"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionLoop_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionLoop, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-loop',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionLoop;
}());
var ScaleIconActionMenu = /** @class */ (function () {
    function ScaleIconActionMenu(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionMenu.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionMenu = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionMenu);
ScaleIconActionMenu.ɵfac = function ScaleIconActionMenu_Factory(t) { return new (t || ScaleIconActionMenu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionMenu.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionMenu, selectors: [["scale-icon-action-menu"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionMenu_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionMenu, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-menu',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionMenu;
}());
var ScaleIconActionMicrophone = /** @class */ (function () {
    function ScaleIconActionMicrophone(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionMicrophone.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionMicrophone = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionMicrophone);
ScaleIconActionMicrophone.ɵfac = function ScaleIconActionMicrophone_Factory(t) { return new (t || ScaleIconActionMicrophone)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionMicrophone.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionMicrophone, selectors: [["scale-icon-action-microphone"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionMicrophone_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionMicrophone, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-microphone',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionMicrophone;
}());
var ScaleIconActionMinimizeScreen = /** @class */ (function () {
    function ScaleIconActionMinimizeScreen(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionMinimizeScreen.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionMinimizeScreen = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionMinimizeScreen);
ScaleIconActionMinimizeScreen.ɵfac = function ScaleIconActionMinimizeScreen_Factory(t) { return new (t || ScaleIconActionMinimizeScreen)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionMinimizeScreen.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionMinimizeScreen, selectors: [["scale-icon-action-minimize-screen"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionMinimizeScreen_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionMinimizeScreen, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-minimize-screen',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionMinimizeScreen;
}());
var ScaleIconActionMore = /** @class */ (function () {
    function ScaleIconActionMore(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionMore.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionMore = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionMore);
ScaleIconActionMore.ɵfac = function ScaleIconActionMore_Factory(t) { return new (t || ScaleIconActionMore)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionMore.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionMore, selectors: [["scale-icon-action-more"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionMore_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionMore, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-more',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionMore;
}());
var ScaleIconActionMove = /** @class */ (function () {
    function ScaleIconActionMove(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionMove.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionMove = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionMove);
ScaleIconActionMove.ɵfac = function ScaleIconActionMove_Factory(t) { return new (t || ScaleIconActionMove)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionMove.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionMove, selectors: [["scale-icon-action-move"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionMove_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionMove, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-move',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionMove;
}());
var ScaleIconActionMute = /** @class */ (function () {
    function ScaleIconActionMute(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionMute.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionMute = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionMute);
ScaleIconActionMute.ɵfac = function ScaleIconActionMute_Factory(t) { return new (t || ScaleIconActionMute)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionMute.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionMute, selectors: [["scale-icon-action-mute"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionMute_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionMute, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-mute',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionMute;
}());
var ScaleIconActionNotification = /** @class */ (function () {
    function ScaleIconActionNotification(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionNotification.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionNotification = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionNotification);
ScaleIconActionNotification.ɵfac = function ScaleIconActionNotification_Factory(t) { return new (t || ScaleIconActionNotification)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionNotification.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionNotification, selectors: [["scale-icon-action-notification"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionNotification_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionNotification, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-notification',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionNotification;
}());
var ScaleIconActionPause = /** @class */ (function () {
    function ScaleIconActionPause(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionPause.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionPause = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionPause);
ScaleIconActionPause.ɵfac = function ScaleIconActionPause_Factory(t) { return new (t || ScaleIconActionPause)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionPause.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionPause, selectors: [["scale-icon-action-pause"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionPause_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionPause, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-pause',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionPause;
}());
var ScaleIconActionPin = /** @class */ (function () {
    function ScaleIconActionPin(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionPin.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionPin = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionPin);
ScaleIconActionPin.ɵfac = function ScaleIconActionPin_Factory(t) { return new (t || ScaleIconActionPin)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionPin.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionPin, selectors: [["scale-icon-action-pin"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionPin_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionPin, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-pin',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionPin;
}());
var ScaleIconActionPlay = /** @class */ (function () {
    function ScaleIconActionPlay(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionPlay.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionPlay = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionPlay);
ScaleIconActionPlay.ɵfac = function ScaleIconActionPlay_Factory(t) { return new (t || ScaleIconActionPlay)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionPlay.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionPlay, selectors: [["scale-icon-action-play"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionPlay_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionPlay, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-play',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionPlay;
}());
var ScaleIconActionPopUpWindow = /** @class */ (function () {
    function ScaleIconActionPopUpWindow(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionPopUpWindow.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionPopUpWindow = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionPopUpWindow);
ScaleIconActionPopUpWindow.ɵfac = function ScaleIconActionPopUpWindow_Factory(t) { return new (t || ScaleIconActionPopUpWindow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionPopUpWindow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionPopUpWindow, selectors: [["scale-icon-action-pop-up-window"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionPopUpWindow_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionPopUpWindow, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-pop-up-window',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionPopUpWindow;
}());
var ScaleIconActionPrint = /** @class */ (function () {
    function ScaleIconActionPrint(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionPrint.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionPrint = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionPrint);
ScaleIconActionPrint.ɵfac = function ScaleIconActionPrint_Factory(t) { return new (t || ScaleIconActionPrint)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionPrint.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionPrint, selectors: [["scale-icon-action-print"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionPrint_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionPrint, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-print',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionPrint;
}());
var ScaleIconActionRandom = /** @class */ (function () {
    function ScaleIconActionRandom(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionRandom.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionRandom = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionRandom);
ScaleIconActionRandom.ɵfac = function ScaleIconActionRandom_Factory(t) { return new (t || ScaleIconActionRandom)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionRandom.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionRandom, selectors: [["scale-icon-action-random"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionRandom_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionRandom, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-random',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionRandom;
}());
var ScaleIconActionRefresh = /** @class */ (function () {
    function ScaleIconActionRefresh(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionRefresh.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionRefresh = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionRefresh);
ScaleIconActionRefresh.ɵfac = function ScaleIconActionRefresh_Factory(t) { return new (t || ScaleIconActionRefresh)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionRefresh.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionRefresh, selectors: [["scale-icon-action-refresh"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionRefresh_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionRefresh, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-refresh',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionRefresh;
}());
var ScaleIconActionRemove = /** @class */ (function () {
    function ScaleIconActionRemove(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionRemove.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionRemove = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionRemove);
ScaleIconActionRemove.ɵfac = function ScaleIconActionRemove_Factory(t) { return new (t || ScaleIconActionRemove)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionRemove.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionRemove, selectors: [["scale-icon-action-remove"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionRemove_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionRemove, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-remove',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionRemove;
}());
var ScaleIconActionRestart = /** @class */ (function () {
    function ScaleIconActionRestart(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionRestart.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionRestart = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionRestart);
ScaleIconActionRestart.ɵfac = function ScaleIconActionRestart_Factory(t) { return new (t || ScaleIconActionRestart)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionRestart.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionRestart, selectors: [["scale-icon-action-restart"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionRestart_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionRestart, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-restart',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionRestart;
}());
var ScaleIconActionSearch = /** @class */ (function () {
    function ScaleIconActionSearch(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionSearch.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionSearch = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionSearch);
ScaleIconActionSearch.ɵfac = function ScaleIconActionSearch_Factory(t) { return new (t || ScaleIconActionSearch)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionSearch.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionSearch, selectors: [["scale-icon-action-search"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionSearch_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionSearch, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-search',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionSearch;
}());
var ScaleIconActionShoppingCart = /** @class */ (function () {
    function ScaleIconActionShoppingCart(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionShoppingCart.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionShoppingCart = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionShoppingCart);
ScaleIconActionShoppingCart.ɵfac = function ScaleIconActionShoppingCart_Factory(t) { return new (t || ScaleIconActionShoppingCart)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionShoppingCart.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionShoppingCart, selectors: [["scale-icon-action-shopping-cart"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionShoppingCart_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionShoppingCart, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-shopping-cart',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionShoppingCart;
}());
var ScaleIconActionShowPassword = /** @class */ (function () {
    function ScaleIconActionShowPassword(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionShowPassword.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionShowPassword = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionShowPassword);
ScaleIconActionShowPassword.ɵfac = function ScaleIconActionShowPassword_Factory(t) { return new (t || ScaleIconActionShowPassword)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionShowPassword.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionShowPassword, selectors: [["scale-icon-action-show-password"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionShowPassword_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionShowPassword, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-show-password',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionShowPassword;
}());
var ScaleIconActionSort = /** @class */ (function () {
    function ScaleIconActionSort(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionSort.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionSort = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionSort);
ScaleIconActionSort.ɵfac = function ScaleIconActionSort_Factory(t) { return new (t || ScaleIconActionSort)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionSort.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionSort, selectors: [["scale-icon-action-sort"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionSort_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionSort, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-sort',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionSort;
}());
var ScaleIconActionSoundOn = /** @class */ (function () {
    function ScaleIconActionSoundOn(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionSoundOn.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionSoundOn = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionSoundOn);
ScaleIconActionSoundOn.ɵfac = function ScaleIconActionSoundOn_Factory(t) { return new (t || ScaleIconActionSoundOn)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionSoundOn.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionSoundOn, selectors: [["scale-icon-action-sound-on"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionSoundOn_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionSoundOn, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-sound-on',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionSoundOn;
}());
var ScaleIconActionStreamOn = /** @class */ (function () {
    function ScaleIconActionStreamOn(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionStreamOn.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionStreamOn = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionStreamOn);
ScaleIconActionStreamOn.ɵfac = function ScaleIconActionStreamOn_Factory(t) { return new (t || ScaleIconActionStreamOn)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionStreamOn.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionStreamOn, selectors: [["scale-icon-action-stream-on"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionStreamOn_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionStreamOn, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-stream-on',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionStreamOn;
}());
var ScaleIconActionSuccess = /** @class */ (function () {
    function ScaleIconActionSuccess(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionSuccess.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionSuccess = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionSuccess);
ScaleIconActionSuccess.ɵfac = function ScaleIconActionSuccess_Factory(t) { return new (t || ScaleIconActionSuccess)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionSuccess.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionSuccess, selectors: [["scale-icon-action-success"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionSuccess_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionSuccess, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-success',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionSuccess;
}());
var ScaleIconActionThumbsDown = /** @class */ (function () {
    function ScaleIconActionThumbsDown(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionThumbsDown.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionThumbsDown = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionThumbsDown);
ScaleIconActionThumbsDown.ɵfac = function ScaleIconActionThumbsDown_Factory(t) { return new (t || ScaleIconActionThumbsDown)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionThumbsDown.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionThumbsDown, selectors: [["scale-icon-action-thumbs-down"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionThumbsDown_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionThumbsDown, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-thumbs-down',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionThumbsDown;
}());
var ScaleIconActionThumbsUp = /** @class */ (function () {
    function ScaleIconActionThumbsUp(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionThumbsUp.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionThumbsUp = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionThumbsUp);
ScaleIconActionThumbsUp.ɵfac = function ScaleIconActionThumbsUp_Factory(t) { return new (t || ScaleIconActionThumbsUp)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionThumbsUp.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionThumbsUp, selectors: [["scale-icon-action-thumbs-up"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionThumbsUp_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionThumbsUp, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-thumbs-up',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionThumbsUp;
}());
var ScaleIconActionTilesAdd = /** @class */ (function () {
    function ScaleIconActionTilesAdd(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionTilesAdd.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionTilesAdd = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionTilesAdd);
ScaleIconActionTilesAdd.ɵfac = function ScaleIconActionTilesAdd_Factory(t) { return new (t || ScaleIconActionTilesAdd)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionTilesAdd.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionTilesAdd, selectors: [["scale-icon-action-tiles-add"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionTilesAdd_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionTilesAdd, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-tiles-add',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionTilesAdd;
}());
var ScaleIconActionUpload = /** @class */ (function () {
    function ScaleIconActionUpload(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionUpload.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionUpload = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionUpload);
ScaleIconActionUpload.ɵfac = function ScaleIconActionUpload_Factory(t) { return new (t || ScaleIconActionUpload)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionUpload.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionUpload, selectors: [["scale-icon-action-upload"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionUpload_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionUpload, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-upload',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionUpload;
}());
var ScaleIconActionVolumeDown = /** @class */ (function () {
    function ScaleIconActionVolumeDown(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionVolumeDown.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionVolumeDown = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionVolumeDown);
ScaleIconActionVolumeDown.ɵfac = function ScaleIconActionVolumeDown_Factory(t) { return new (t || ScaleIconActionVolumeDown)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionVolumeDown.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionVolumeDown, selectors: [["scale-icon-action-volume-down"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionVolumeDown_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionVolumeDown, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-volume-down',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionVolumeDown;
}());
var ScaleIconActionVolumeUp = /** @class */ (function () {
    function ScaleIconActionVolumeUp(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionVolumeUp.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionVolumeUp = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionVolumeUp);
ScaleIconActionVolumeUp.ɵfac = function ScaleIconActionVolumeUp_Factory(t) { return new (t || ScaleIconActionVolumeUp)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionVolumeUp.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionVolumeUp, selectors: [["scale-icon-action-volume-up"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionVolumeUp_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionVolumeUp, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-volume-up',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionVolumeUp;
}());
var ScaleIconActionZoomIn = /** @class */ (function () {
    function ScaleIconActionZoomIn(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionZoomIn.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionZoomIn = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionZoomIn);
ScaleIconActionZoomIn.ɵfac = function ScaleIconActionZoomIn_Factory(t) { return new (t || ScaleIconActionZoomIn)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionZoomIn.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionZoomIn, selectors: [["scale-icon-action-zoom-in"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionZoomIn_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionZoomIn, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-zoom-in',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionZoomIn;
}());
var ScaleIconActionZoomOut = /** @class */ (function () {
    function ScaleIconActionZoomOut(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconActionZoomOut.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconActionZoomOut = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconActionZoomOut);
ScaleIconActionZoomOut.ɵfac = function ScaleIconActionZoomOut_Factory(t) { return new (t || ScaleIconActionZoomOut)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconActionZoomOut.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconActionZoomOut, selectors: [["scale-icon-action-zoom-out"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconActionZoomOut_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconActionZoomOut, [{
        type: Component,
        args: [{
                selector: 'scale-icon-action-zoom-out',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconActionZoomOut;
}());
var ScaleIconAlertCompliance = /** @class */ (function () {
    function ScaleIconAlertCompliance(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconAlertCompliance.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconAlertCompliance = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconAlertCompliance);
ScaleIconAlertCompliance.ɵfac = function ScaleIconAlertCompliance_Factory(t) { return new (t || ScaleIconAlertCompliance)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconAlertCompliance.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconAlertCompliance, selectors: [["scale-icon-alert-compliance"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconAlertCompliance_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconAlertCompliance, [{
        type: Component,
        args: [{
                selector: 'scale-icon-alert-compliance',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconAlertCompliance;
}());
var ScaleIconAlertError = /** @class */ (function () {
    function ScaleIconAlertError(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconAlertError.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconAlertError = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconAlertError);
ScaleIconAlertError.ɵfac = function ScaleIconAlertError_Factory(t) { return new (t || ScaleIconAlertError)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconAlertError.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconAlertError, selectors: [["scale-icon-alert-error"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconAlertError_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconAlertError, [{
        type: Component,
        args: [{
                selector: 'scale-icon-alert-error',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconAlertError;
}());
var ScaleIconAlertHelp = /** @class */ (function () {
    function ScaleIconAlertHelp(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconAlertHelp.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconAlertHelp = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconAlertHelp);
ScaleIconAlertHelp.ɵfac = function ScaleIconAlertHelp_Factory(t) { return new (t || ScaleIconAlertHelp)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconAlertHelp.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconAlertHelp, selectors: [["scale-icon-alert-help"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconAlertHelp_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconAlertHelp, [{
        type: Component,
        args: [{
                selector: 'scale-icon-alert-help',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconAlertHelp;
}());
var ScaleIconAlertImprintDataprivacy = /** @class */ (function () {
    function ScaleIconAlertImprintDataprivacy(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconAlertImprintDataprivacy.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconAlertImprintDataprivacy = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconAlertImprintDataprivacy);
ScaleIconAlertImprintDataprivacy.ɵfac = function ScaleIconAlertImprintDataprivacy_Factory(t) { return new (t || ScaleIconAlertImprintDataprivacy)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconAlertImprintDataprivacy.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconAlertImprintDataprivacy, selectors: [["scale-icon-alert-imprint-dataprivacy"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconAlertImprintDataprivacy_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconAlertImprintDataprivacy, [{
        type: Component,
        args: [{
                selector: 'scale-icon-alert-imprint-dataprivacy',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconAlertImprintDataprivacy;
}());
var ScaleIconAlertInformation = /** @class */ (function () {
    function ScaleIconAlertInformation(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconAlertInformation.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconAlertInformation = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconAlertInformation);
ScaleIconAlertInformation.ɵfac = function ScaleIconAlertInformation_Factory(t) { return new (t || ScaleIconAlertInformation)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconAlertInformation.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconAlertInformation, selectors: [["scale-icon-alert-information"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconAlertInformation_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconAlertInformation, [{
        type: Component,
        args: [{
                selector: 'scale-icon-alert-information',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconAlertInformation;
}());
var ScaleIconAlertLegal = /** @class */ (function () {
    function ScaleIconAlertLegal(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconAlertLegal.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconAlertLegal = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconAlertLegal);
ScaleIconAlertLegal.ɵfac = function ScaleIconAlertLegal_Factory(t) { return new (t || ScaleIconAlertLegal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconAlertLegal.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconAlertLegal, selectors: [["scale-icon-alert-legal"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconAlertLegal_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconAlertLegal, [{
        type: Component,
        args: [{
                selector: 'scale-icon-alert-legal',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconAlertLegal;
}());
var ScaleIconAlertSecurity = /** @class */ (function () {
    function ScaleIconAlertSecurity(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconAlertSecurity.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconAlertSecurity = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconAlertSecurity);
ScaleIconAlertSecurity.ɵfac = function ScaleIconAlertSecurity_Factory(t) { return new (t || ScaleIconAlertSecurity)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconAlertSecurity.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconAlertSecurity, selectors: [["scale-icon-alert-security"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconAlertSecurity_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconAlertSecurity, [{
        type: Component,
        args: [{
                selector: 'scale-icon-alert-security',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconAlertSecurity;
}());
var ScaleIconAlertSuccess = /** @class */ (function () {
    function ScaleIconAlertSuccess(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconAlertSuccess.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconAlertSuccess = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconAlertSuccess);
ScaleIconAlertSuccess.ɵfac = function ScaleIconAlertSuccess_Factory(t) { return new (t || ScaleIconAlertSuccess)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconAlertSuccess.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconAlertSuccess, selectors: [["scale-icon-alert-success"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconAlertSuccess_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconAlertSuccess, [{
        type: Component,
        args: [{
                selector: 'scale-icon-alert-success',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconAlertSuccess;
}());
var ScaleIconAlertWarning = /** @class */ (function () {
    function ScaleIconAlertWarning(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconAlertWarning.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconAlertWarning = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconAlertWarning);
ScaleIconAlertWarning.ɵfac = function ScaleIconAlertWarning_Factory(t) { return new (t || ScaleIconAlertWarning)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconAlertWarning.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconAlertWarning, selectors: [["scale-icon-alert-warning"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconAlertWarning_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconAlertWarning, [{
        type: Component,
        args: [{
                selector: 'scale-icon-alert-warning',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconAlertWarning;
}());
var ScaleIconCommunicationCallIncoming = /** @class */ (function () {
    function ScaleIconCommunicationCallIncoming(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconCommunicationCallIncoming.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconCommunicationCallIncoming = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconCommunicationCallIncoming);
ScaleIconCommunicationCallIncoming.ɵfac = function ScaleIconCommunicationCallIncoming_Factory(t) { return new (t || ScaleIconCommunicationCallIncoming)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconCommunicationCallIncoming.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconCommunicationCallIncoming, selectors: [["scale-icon-communication-call-incoming"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconCommunicationCallIncoming_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconCommunicationCallIncoming, [{
        type: Component,
        args: [{
                selector: 'scale-icon-communication-call-incoming',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconCommunicationCallIncoming;
}());
var ScaleIconCommunicationCallOutgoing = /** @class */ (function () {
    function ScaleIconCommunicationCallOutgoing(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconCommunicationCallOutgoing.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconCommunicationCallOutgoing = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconCommunicationCallOutgoing);
ScaleIconCommunicationCallOutgoing.ɵfac = function ScaleIconCommunicationCallOutgoing_Factory(t) { return new (t || ScaleIconCommunicationCallOutgoing)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconCommunicationCallOutgoing.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconCommunicationCallOutgoing, selectors: [["scale-icon-communication-call-outgoing"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconCommunicationCallOutgoing_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconCommunicationCallOutgoing, [{
        type: Component,
        args: [{
                selector: 'scale-icon-communication-call-outgoing',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconCommunicationCallOutgoing;
}());
var ScaleIconCommunicationChat = /** @class */ (function () {
    function ScaleIconCommunicationChat(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconCommunicationChat.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconCommunicationChat = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconCommunicationChat);
ScaleIconCommunicationChat.ɵfac = function ScaleIconCommunicationChat_Factory(t) { return new (t || ScaleIconCommunicationChat)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconCommunicationChat.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconCommunicationChat, selectors: [["scale-icon-communication-chat"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconCommunicationChat_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconCommunicationChat, [{
        type: Component,
        args: [{
                selector: 'scale-icon-communication-chat',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconCommunicationChat;
}());
var ScaleIconCommunicationEmail = /** @class */ (function () {
    function ScaleIconCommunicationEmail(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconCommunicationEmail.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconCommunicationEmail = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconCommunicationEmail);
ScaleIconCommunicationEmail.ɵfac = function ScaleIconCommunicationEmail_Factory(t) { return new (t || ScaleIconCommunicationEmail)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconCommunicationEmail.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconCommunicationEmail, selectors: [["scale-icon-communication-email"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconCommunicationEmail_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconCommunicationEmail, [{
        type: Component,
        args: [{
                selector: 'scale-icon-communication-email',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconCommunicationEmail;
}());
var ScaleIconCommunicationEndCall = /** @class */ (function () {
    function ScaleIconCommunicationEndCall(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconCommunicationEndCall.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconCommunicationEndCall = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconCommunicationEndCall);
ScaleIconCommunicationEndCall.ɵfac = function ScaleIconCommunicationEndCall_Factory(t) { return new (t || ScaleIconCommunicationEndCall)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconCommunicationEndCall.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconCommunicationEndCall, selectors: [["scale-icon-communication-end-call"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconCommunicationEndCall_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconCommunicationEndCall, [{
        type: Component,
        args: [{
                selector: 'scale-icon-communication-end-call',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconCommunicationEndCall;
}());
var ScaleIconCommunicationFeedback = /** @class */ (function () {
    function ScaleIconCommunicationFeedback(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconCommunicationFeedback.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconCommunicationFeedback = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconCommunicationFeedback);
ScaleIconCommunicationFeedback.ɵfac = function ScaleIconCommunicationFeedback_Factory(t) { return new (t || ScaleIconCommunicationFeedback)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconCommunicationFeedback.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconCommunicationFeedback, selectors: [["scale-icon-communication-feedback"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconCommunicationFeedback_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconCommunicationFeedback, [{
        type: Component,
        args: [{
                selector: 'scale-icon-communication-feedback',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconCommunicationFeedback;
}());
var ScaleIconCommunicationMessage = /** @class */ (function () {
    function ScaleIconCommunicationMessage(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconCommunicationMessage.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconCommunicationMessage = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconCommunicationMessage);
ScaleIconCommunicationMessage.ɵfac = function ScaleIconCommunicationMessage_Factory(t) { return new (t || ScaleIconCommunicationMessage)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconCommunicationMessage.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconCommunicationMessage, selectors: [["scale-icon-communication-message"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconCommunicationMessage_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconCommunicationMessage, [{
        type: Component,
        args: [{
                selector: 'scale-icon-communication-message',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconCommunicationMessage;
}());
var ScaleIconCommunicationPhoneNumber = /** @class */ (function () {
    function ScaleIconCommunicationPhoneNumber(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconCommunicationPhoneNumber.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconCommunicationPhoneNumber = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconCommunicationPhoneNumber);
ScaleIconCommunicationPhoneNumber.ɵfac = function ScaleIconCommunicationPhoneNumber_Factory(t) { return new (t || ScaleIconCommunicationPhoneNumber)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconCommunicationPhoneNumber.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconCommunicationPhoneNumber, selectors: [["scale-icon-communication-phone-number"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconCommunicationPhoneNumber_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconCommunicationPhoneNumber, [{
        type: Component,
        args: [{
                selector: 'scale-icon-communication-phone-number',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconCommunicationPhoneNumber;
}());
var ScaleIconCommunicationRecipient = /** @class */ (function () {
    function ScaleIconCommunicationRecipient(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconCommunicationRecipient.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconCommunicationRecipient = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconCommunicationRecipient);
ScaleIconCommunicationRecipient.ɵfac = function ScaleIconCommunicationRecipient_Factory(t) { return new (t || ScaleIconCommunicationRecipient)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconCommunicationRecipient.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconCommunicationRecipient, selectors: [["scale-icon-communication-recipient"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconCommunicationRecipient_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconCommunicationRecipient, [{
        type: Component,
        args: [{
                selector: 'scale-icon-communication-recipient',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconCommunicationRecipient;
}());
var ScaleIconCommunicationVoiceMessage = /** @class */ (function () {
    function ScaleIconCommunicationVoiceMessage(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconCommunicationVoiceMessage.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconCommunicationVoiceMessage = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconCommunicationVoiceMessage);
ScaleIconCommunicationVoiceMessage.ɵfac = function ScaleIconCommunicationVoiceMessage_Factory(t) { return new (t || ScaleIconCommunicationVoiceMessage)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconCommunicationVoiceMessage.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconCommunicationVoiceMessage, selectors: [["scale-icon-communication-voice-message"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconCommunicationVoiceMessage_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconCommunicationVoiceMessage, [{
        type: Component,
        args: [{
                selector: 'scale-icon-communication-voice-message',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconCommunicationVoiceMessage;
}());
var ScaleIconContentAchievement = /** @class */ (function () {
    function ScaleIconContentAchievement(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentAchievement.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentAchievement = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentAchievement);
ScaleIconContentAchievement.ɵfac = function ScaleIconContentAchievement_Factory(t) { return new (t || ScaleIconContentAchievement)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentAchievement.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentAchievement, selectors: [["scale-icon-content-achievement"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentAchievement_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentAchievement, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-achievement',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentAchievement;
}());
var ScaleIconContentApplications = /** @class */ (function () {
    function ScaleIconContentApplications(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentApplications.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentApplications = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentApplications);
ScaleIconContentApplications.ɵfac = function ScaleIconContentApplications_Factory(t) { return new (t || ScaleIconContentApplications)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentApplications.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentApplications, selectors: [["scale-icon-content-applications"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentApplications_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentApplications, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-applications',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentApplications;
}());
var ScaleIconContentBiometric = /** @class */ (function () {
    function ScaleIconContentBiometric(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentBiometric.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentBiometric = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentBiometric);
ScaleIconContentBiometric.ɵfac = function ScaleIconContentBiometric_Factory(t) { return new (t || ScaleIconContentBiometric)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentBiometric.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentBiometric, selectors: [["scale-icon-content-biometric"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentBiometric_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentBiometric, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-biometric',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentBiometric;
}());
var ScaleIconContentBookmark = /** @class */ (function () {
    function ScaleIconContentBookmark(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentBookmark.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentBookmark = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentBookmark);
ScaleIconContentBookmark.ɵfac = function ScaleIconContentBookmark_Factory(t) { return new (t || ScaleIconContentBookmark)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentBookmark.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentBookmark, selectors: [["scale-icon-content-bookmark"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentBookmark_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentBookmark, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-bookmark',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentBookmark;
}());
var ScaleIconContentCalendar = /** @class */ (function () {
    function ScaleIconContentCalendar(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentCalendar.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentCalendar = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentCalendar);
ScaleIconContentCalendar.ɵfac = function ScaleIconContentCalendar_Factory(t) { return new (t || ScaleIconContentCalendar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentCalendar.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentCalendar, selectors: [["scale-icon-content-calendar"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentCalendar_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentCalendar, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-calendar',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentCalendar;
}());
var ScaleIconContentClipboard = /** @class */ (function () {
    function ScaleIconContentClipboard(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentClipboard.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentClipboard = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentClipboard);
ScaleIconContentClipboard.ɵfac = function ScaleIconContentClipboard_Factory(t) { return new (t || ScaleIconContentClipboard)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentClipboard.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentClipboard, selectors: [["scale-icon-content-clipboard"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentClipboard_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentClipboard, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-clipboard',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentClipboard;
}());
var ScaleIconContentClock = /** @class */ (function () {
    function ScaleIconContentClock(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentClock.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentClock = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentClock);
ScaleIconContentClock.ɵfac = function ScaleIconContentClock_Factory(t) { return new (t || ScaleIconContentClock)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentClock.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentClock, selectors: [["scale-icon-content-clock"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentClock_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentClock, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-clock',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentClock;
}());
var ScaleIconContentCreditCard = /** @class */ (function () {
    function ScaleIconContentCreditCard(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentCreditCard.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentCreditCard = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentCreditCard);
ScaleIconContentCreditCard.ɵfac = function ScaleIconContentCreditCard_Factory(t) { return new (t || ScaleIconContentCreditCard)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentCreditCard.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentCreditCard, selectors: [["scale-icon-content-credit-card"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentCreditCard_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentCreditCard, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-credit-card',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentCreditCard;
}());
var ScaleIconContentDelivery = /** @class */ (function () {
    function ScaleIconContentDelivery(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentDelivery.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentDelivery = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentDelivery);
ScaleIconContentDelivery.ɵfac = function ScaleIconContentDelivery_Factory(t) { return new (t || ScaleIconContentDelivery)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentDelivery.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentDelivery, selectors: [["scale-icon-content-delivery"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentDelivery_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentDelivery, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-delivery',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentDelivery;
}());
var ScaleIconContentDigitalBanking = /** @class */ (function () {
    function ScaleIconContentDigitalBanking(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentDigitalBanking.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentDigitalBanking = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentDigitalBanking);
ScaleIconContentDigitalBanking.ɵfac = function ScaleIconContentDigitalBanking_Factory(t) { return new (t || ScaleIconContentDigitalBanking)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentDigitalBanking.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentDigitalBanking, selectors: [["scale-icon-content-digital-banking"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentDigitalBanking_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentDigitalBanking, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-digital-banking',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentDigitalBanking;
}());
var ScaleIconContentDigitalMedia = /** @class */ (function () {
    function ScaleIconContentDigitalMedia(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentDigitalMedia.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentDigitalMedia = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentDigitalMedia);
ScaleIconContentDigitalMedia.ɵfac = function ScaleIconContentDigitalMedia_Factory(t) { return new (t || ScaleIconContentDigitalMedia)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentDigitalMedia.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentDigitalMedia, selectors: [["scale-icon-content-digital-media"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentDigitalMedia_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentDigitalMedia, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-digital-media',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentDigitalMedia;
}());
var ScaleIconContentDraftFile = /** @class */ (function () {
    function ScaleIconContentDraftFile(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentDraftFile.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentDraftFile = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentDraftFile);
ScaleIconContentDraftFile.ɵfac = function ScaleIconContentDraftFile_Factory(t) { return new (t || ScaleIconContentDraftFile)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentDraftFile.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentDraftFile, selectors: [["scale-icon-content-draft-file"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentDraftFile_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentDraftFile, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-draft-file',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentDraftFile;
}());
var ScaleIconContentESim = /** @class */ (function () {
    function ScaleIconContentESim(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentESim.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentESim = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentESim);
ScaleIconContentESim.ɵfac = function ScaleIconContentESim_Factory(t) { return new (t || ScaleIconContentESim)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentESim.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentESim, selectors: [["scale-icon-content-e-sim"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentESim_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentESim, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-e-sim',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentESim;
}());
var ScaleIconContentEu = /** @class */ (function () {
    function ScaleIconContentEu(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentEu.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentEu = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentEu);
ScaleIconContentEu.ɵfac = function ScaleIconContentEu_Factory(t) { return new (t || ScaleIconContentEu)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentEu.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentEu, selectors: [["scale-icon-content-eu"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentEu_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentEu, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-eu',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentEu;
}());
var ScaleIconContentFeatures = /** @class */ (function () {
    function ScaleIconContentFeatures(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentFeatures.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentFeatures = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentFeatures);
ScaleIconContentFeatures.ɵfac = function ScaleIconContentFeatures_Factory(t) { return new (t || ScaleIconContentFeatures)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentFeatures.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentFeatures, selectors: [["scale-icon-content-features"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentFeatures_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentFeatures, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-features',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentFeatures;
}());
var ScaleIconContentFlexibleTariffs = /** @class */ (function () {
    function ScaleIconContentFlexibleTariffs(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentFlexibleTariffs.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentFlexibleTariffs = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentFlexibleTariffs);
ScaleIconContentFlexibleTariffs.ɵfac = function ScaleIconContentFlexibleTariffs_Factory(t) { return new (t || ScaleIconContentFlexibleTariffs)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentFlexibleTariffs.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentFlexibleTariffs, selectors: [["scale-icon-content-flexible-tariffs"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentFlexibleTariffs_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentFlexibleTariffs, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-flexible-tariffs',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentFlexibleTariffs;
}());
var ScaleIconContentHeart = /** @class */ (function () {
    function ScaleIconContentHeart(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentHeart.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentHeart = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentHeart);
ScaleIconContentHeart.ɵfac = function ScaleIconContentHeart_Factory(t) { return new (t || ScaleIconContentHeart)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentHeart.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentHeart, selectors: [["scale-icon-content-heart"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentHeart_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentHeart, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-heart',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentHeart;
}());
var ScaleIconContentHistory = /** @class */ (function () {
    function ScaleIconContentHistory(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentHistory.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentHistory = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentHistory);
ScaleIconContentHistory.ɵfac = function ScaleIconContentHistory_Factory(t) { return new (t || ScaleIconContentHistory)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentHistory.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentHistory, selectors: [["scale-icon-content-history"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentHistory_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentHistory, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-history',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentHistory;
}());
var ScaleIconContentInternational = /** @class */ (function () {
    function ScaleIconContentInternational(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentInternational.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentInternational = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentInternational);
ScaleIconContentInternational.ɵfac = function ScaleIconContentInternational_Factory(t) { return new (t || ScaleIconContentInternational)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentInternational.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentInternational, selectors: [["scale-icon-content-international"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentInternational_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentInternational, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-international',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentInternational;
}());
var ScaleIconContentInternationalSms = /** @class */ (function () {
    function ScaleIconContentInternationalSms(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentInternationalSms.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentInternationalSms = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentInternationalSms);
ScaleIconContentInternationalSms.ɵfac = function ScaleIconContentInternationalSms_Factory(t) { return new (t || ScaleIconContentInternationalSms)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentInternationalSms.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentInternationalSms, selectors: [["scale-icon-content-international-sms"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentInternationalSms_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentInternationalSms, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-international-sms',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentInternationalSms;
}());
var ScaleIconContentInterview = /** @class */ (function () {
    function ScaleIconContentInterview(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentInterview.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentInterview = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentInterview);
ScaleIconContentInterview.ɵfac = function ScaleIconContentInterview_Factory(t) { return new (t || ScaleIconContentInterview)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentInterview.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentInterview, selectors: [["scale-icon-content-interview"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentInterview_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentInterview, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-interview',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentInterview;
}());
var ScaleIconContentKey = /** @class */ (function () {
    function ScaleIconContentKey(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentKey.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentKey = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentKey);
ScaleIconContentKey.ɵfac = function ScaleIconContentKey_Factory(t) { return new (t || ScaleIconContentKey)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentKey.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentKey, selectors: [["scale-icon-content-key"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentKey_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentKey, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-key',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentKey;
}());
var ScaleIconContentLock = /** @class */ (function () {
    function ScaleIconContentLock(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentLock.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentLock = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentLock);
ScaleIconContentLock.ɵfac = function ScaleIconContentLock_Factory(t) { return new (t || ScaleIconContentLock)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentLock.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentLock, selectors: [["scale-icon-content-lock"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentLock_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentLock, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-lock',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentLock;
}());
var ScaleIconContentMediaFolder = /** @class */ (function () {
    function ScaleIconContentMediaFolder(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentMediaFolder.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentMediaFolder = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentMediaFolder);
ScaleIconContentMediaFolder.ɵfac = function ScaleIconContentMediaFolder_Factory(t) { return new (t || ScaleIconContentMediaFolder)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentMediaFolder.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentMediaFolder, selectors: [["scale-icon-content-media-folder"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentMediaFolder_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentMediaFolder, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-media-folder',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentMediaFolder;
}());
var ScaleIconContentMoneyAt = /** @class */ (function () {
    function ScaleIconContentMoneyAt(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentMoneyAt.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentMoneyAt = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentMoneyAt);
ScaleIconContentMoneyAt.ɵfac = function ScaleIconContentMoneyAt_Factory(t) { return new (t || ScaleIconContentMoneyAt)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentMoneyAt.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentMoneyAt, selectors: [["scale-icon-content-money-at"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentMoneyAt_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentMoneyAt, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-money-at',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentMoneyAt;
}());
var ScaleIconContentMusic = /** @class */ (function () {
    function ScaleIconContentMusic(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentMusic.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentMusic = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentMusic);
ScaleIconContentMusic.ɵfac = function ScaleIconContentMusic_Factory(t) { return new (t || ScaleIconContentMusic)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentMusic.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentMusic, selectors: [["scale-icon-content-music"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentMusic_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentMusic, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-music',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentMusic;
}());
var ScaleIconContentNews = /** @class */ (function () {
    function ScaleIconContentNews(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentNews.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentNews = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentNews);
ScaleIconContentNews.ɵfac = function ScaleIconContentNews_Factory(t) { return new (t || ScaleIconContentNews)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentNews.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentNews, selectors: [["scale-icon-content-news"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentNews_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentNews, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-news',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentNews;
}());
var ScaleIconContentPrepaidActivate = /** @class */ (function () {
    function ScaleIconContentPrepaidActivate(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentPrepaidActivate.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentPrepaidActivate = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentPrepaidActivate);
ScaleIconContentPrepaidActivate.ɵfac = function ScaleIconContentPrepaidActivate_Factory(t) { return new (t || ScaleIconContentPrepaidActivate)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentPrepaidActivate.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentPrepaidActivate, selectors: [["scale-icon-content-prepaid-activate"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentPrepaidActivate_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentPrepaidActivate, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-prepaid-activate',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentPrepaidActivate;
}());
var ScaleIconContentPriceTag = /** @class */ (function () {
    function ScaleIconContentPriceTag(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentPriceTag.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentPriceTag = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentPriceTag);
ScaleIconContentPriceTag.ɵfac = function ScaleIconContentPriceTag_Factory(t) { return new (t || ScaleIconContentPriceTag)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentPriceTag.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentPriceTag, selectors: [["scale-icon-content-price-tag"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentPriceTag_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentPriceTag, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-price-tag',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentPriceTag;
}());
var ScaleIconContentRss = /** @class */ (function () {
    function ScaleIconContentRss(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentRss.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentRss = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentRss);
ScaleIconContentRss.ɵfac = function ScaleIconContentRss_Factory(t) { return new (t || ScaleIconContentRss)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentRss.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentRss, selectors: [["scale-icon-content-rss"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentRss_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentRss, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-rss',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentRss;
}());
var ScaleIconContentShop = /** @class */ (function () {
    function ScaleIconContentShop(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentShop.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentShop = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentShop);
ScaleIconContentShop.ɵfac = function ScaleIconContentShop_Factory(t) { return new (t || ScaleIconContentShop)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentShop.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentShop, selectors: [["scale-icon-content-shop"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentShop_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentShop, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-shop',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentShop;
}());
var ScaleIconContentSignal = /** @class */ (function () {
    function ScaleIconContentSignal(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentSignal.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentSignal = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentSignal);
ScaleIconContentSignal.ɵfac = function ScaleIconContentSignal_Factory(t) { return new (t || ScaleIconContentSignal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentSignal.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentSignal, selectors: [["scale-icon-content-signal"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentSignal_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentSignal, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-signal',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentSignal;
}());
var ScaleIconContentSimCard = /** @class */ (function () {
    function ScaleIconContentSimCard(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentSimCard.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentSimCard = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentSimCard);
ScaleIconContentSimCard.ɵfac = function ScaleIconContentSimCard_Factory(t) { return new (t || ScaleIconContentSimCard)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentSimCard.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentSimCard, selectors: [["scale-icon-content-sim-card"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentSimCard_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentSimCard, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-sim-card',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentSimCard;
}());
var ScaleIconContentSmile = /** @class */ (function () {
    function ScaleIconContentSmile(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentSmile.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentSmile = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentSmile);
ScaleIconContentSmile.ɵfac = function ScaleIconContentSmile_Factory(t) { return new (t || ScaleIconContentSmile)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentSmile.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentSmile, selectors: [["scale-icon-content-smile"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentSmile_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentSmile, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-smile',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentSmile;
}());
var ScaleIconContentTariffs = /** @class */ (function () {
    function ScaleIconContentTariffs(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentTariffs.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentTariffs = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentTariffs);
ScaleIconContentTariffs.ɵfac = function ScaleIconContentTariffs_Factory(t) { return new (t || ScaleIconContentTariffs)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentTariffs.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentTariffs, selectors: [["scale-icon-content-tariffs"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentTariffs_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentTariffs, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-tariffs',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentTariffs;
}());
var ScaleIconContentTransport = /** @class */ (function () {
    function ScaleIconContentTransport(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentTransport.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentTransport = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentTransport);
ScaleIconContentTransport.ɵfac = function ScaleIconContentTransport_Factory(t) { return new (t || ScaleIconContentTransport)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentTransport.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentTransport, selectors: [["scale-icon-content-transport"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentTransport_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentTransport, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-transport',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentTransport;
}());
var ScaleIconContentUnlock = /** @class */ (function () {
    function ScaleIconContentUnlock(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentUnlock.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentUnlock = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentUnlock);
ScaleIconContentUnlock.ɵfac = function ScaleIconContentUnlock_Factory(t) { return new (t || ScaleIconContentUnlock)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentUnlock.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentUnlock, selectors: [["scale-icon-content-unlock"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentUnlock_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentUnlock, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-unlock',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentUnlock;
}());
var ScaleIconContentVoucher = /** @class */ (function () {
    function ScaleIconContentVoucher(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentVoucher.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentVoucher = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentVoucher);
ScaleIconContentVoucher.ɵfac = function ScaleIconContentVoucher_Factory(t) { return new (t || ScaleIconContentVoucher)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentVoucher.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentVoucher, selectors: [["scale-icon-content-voucher"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentVoucher_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentVoucher, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-voucher',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentVoucher;
}());
var ScaleIconContentWallet = /** @class */ (function () {
    function ScaleIconContentWallet(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconContentWallet.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconContentWallet = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconContentWallet);
ScaleIconContentWallet.ɵfac = function ScaleIconContentWallet_Factory(t) { return new (t || ScaleIconContentWallet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconContentWallet.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconContentWallet, selectors: [["scale-icon-content-wallet"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconContentWallet_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconContentWallet, [{
        type: Component,
        args: [{
                selector: 'scale-icon-content-wallet',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconContentWallet;
}());
var ScaleIconDeviceAddDevice = /** @class */ (function () {
    function ScaleIconDeviceAddDevice(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconDeviceAddDevice.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconDeviceAddDevice = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconDeviceAddDevice);
ScaleIconDeviceAddDevice.ɵfac = function ScaleIconDeviceAddDevice_Factory(t) { return new (t || ScaleIconDeviceAddDevice)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconDeviceAddDevice.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconDeviceAddDevice, selectors: [["scale-icon-device-add-device"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconDeviceAddDevice_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconDeviceAddDevice, [{
        type: Component,
        args: [{
                selector: 'scale-icon-device-add-device',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconDeviceAddDevice;
}());
var ScaleIconDeviceCamera = /** @class */ (function () {
    function ScaleIconDeviceCamera(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconDeviceCamera.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconDeviceCamera = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconDeviceCamera);
ScaleIconDeviceCamera.ɵfac = function ScaleIconDeviceCamera_Factory(t) { return new (t || ScaleIconDeviceCamera)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconDeviceCamera.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconDeviceCamera, selectors: [["scale-icon-device-camera"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconDeviceCamera_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconDeviceCamera, [{
        type: Component,
        args: [{
                selector: 'scale-icon-device-camera',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconDeviceCamera;
}());
var ScaleIconDeviceChangeCamera = /** @class */ (function () {
    function ScaleIconDeviceChangeCamera(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconDeviceChangeCamera.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconDeviceChangeCamera = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconDeviceChangeCamera);
ScaleIconDeviceChangeCamera.ɵfac = function ScaleIconDeviceChangeCamera_Factory(t) { return new (t || ScaleIconDeviceChangeCamera)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconDeviceChangeCamera.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconDeviceChangeCamera, selectors: [["scale-icon-device-change-camera"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconDeviceChangeCamera_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconDeviceChangeCamera, [{
        type: Component,
        args: [{
                selector: 'scale-icon-device-change-camera',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconDeviceChangeCamera;
}());
var ScaleIconDeviceComputer = /** @class */ (function () {
    function ScaleIconDeviceComputer(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconDeviceComputer.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconDeviceComputer = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconDeviceComputer);
ScaleIconDeviceComputer.ɵfac = function ScaleIconDeviceComputer_Factory(t) { return new (t || ScaleIconDeviceComputer)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconDeviceComputer.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconDeviceComputer, selectors: [["scale-icon-device-computer"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconDeviceComputer_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconDeviceComputer, [{
        type: Component,
        args: [{
                selector: 'scale-icon-device-computer',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconDeviceComputer;
}());
var ScaleIconDeviceDevicePhone = /** @class */ (function () {
    function ScaleIconDeviceDevicePhone(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconDeviceDevicePhone.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconDeviceDevicePhone = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconDeviceDevicePhone);
ScaleIconDeviceDevicePhone.ɵfac = function ScaleIconDeviceDevicePhone_Factory(t) { return new (t || ScaleIconDeviceDevicePhone)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconDeviceDevicePhone.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconDeviceDevicePhone, selectors: [["scale-icon-device-device-phone"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconDeviceDevicePhone_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconDeviceDevicePhone, [{
        type: Component,
        args: [{
                selector: 'scale-icon-device-device-phone',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconDeviceDevicePhone;
}());
var ScaleIconDeviceDeviceRouter = /** @class */ (function () {
    function ScaleIconDeviceDeviceRouter(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconDeviceDeviceRouter.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconDeviceDeviceRouter = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconDeviceDeviceRouter);
ScaleIconDeviceDeviceRouter.ɵfac = function ScaleIconDeviceDeviceRouter_Factory(t) { return new (t || ScaleIconDeviceDeviceRouter)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconDeviceDeviceRouter.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconDeviceDeviceRouter, selectors: [["scale-icon-device-device-router"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconDeviceDeviceRouter_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconDeviceDeviceRouter, [{
        type: Component,
        args: [{
                selector: 'scale-icon-device-device-router',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconDeviceDeviceRouter;
}());
var ScaleIconDeviceDeviceTv = /** @class */ (function () {
    function ScaleIconDeviceDeviceTv(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconDeviceDeviceTv.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconDeviceDeviceTv = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconDeviceDeviceTv);
ScaleIconDeviceDeviceTv.ɵfac = function ScaleIconDeviceDeviceTv_Factory(t) { return new (t || ScaleIconDeviceDeviceTv)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconDeviceDeviceTv.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconDeviceDeviceTv, selectors: [["scale-icon-device-device-tv"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconDeviceDeviceTv_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconDeviceDeviceTv, [{
        type: Component,
        args: [{
                selector: 'scale-icon-device-device-tv',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconDeviceDeviceTv;
}());
var ScaleIconDeviceDeviceWatch = /** @class */ (function () {
    function ScaleIconDeviceDeviceWatch(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconDeviceDeviceWatch.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconDeviceDeviceWatch = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconDeviceDeviceWatch);
ScaleIconDeviceDeviceWatch.ɵfac = function ScaleIconDeviceDeviceWatch_Factory(t) { return new (t || ScaleIconDeviceDeviceWatch)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconDeviceDeviceWatch.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconDeviceDeviceWatch, selectors: [["scale-icon-device-device-watch"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconDeviceDeviceWatch_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconDeviceDeviceWatch, [{
        type: Component,
        args: [{
                selector: 'scale-icon-device-device-watch',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconDeviceDeviceWatch;
}());
var ScaleIconDeviceFixedLineServices = /** @class */ (function () {
    function ScaleIconDeviceFixedLineServices(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconDeviceFixedLineServices.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconDeviceFixedLineServices = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconDeviceFixedLineServices);
ScaleIconDeviceFixedLineServices.ɵfac = function ScaleIconDeviceFixedLineServices_Factory(t) { return new (t || ScaleIconDeviceFixedLineServices)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconDeviceFixedLineServices.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconDeviceFixedLineServices, selectors: [["scale-icon-device-fixed-line-services"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconDeviceFixedLineServices_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconDeviceFixedLineServices, [{
        type: Component,
        args: [{
                selector: 'scale-icon-device-fixed-line-services',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconDeviceFixedLineServices;
}());
var ScaleIconDeviceMediaReceiver = /** @class */ (function () {
    function ScaleIconDeviceMediaReceiver(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconDeviceMediaReceiver.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconDeviceMediaReceiver = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconDeviceMediaReceiver);
ScaleIconDeviceMediaReceiver.ɵfac = function ScaleIconDeviceMediaReceiver_Factory(t) { return new (t || ScaleIconDeviceMediaReceiver)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconDeviceMediaReceiver.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconDeviceMediaReceiver, selectors: [["scale-icon-device-media-receiver"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconDeviceMediaReceiver_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconDeviceMediaReceiver, [{
        type: Component,
        args: [{
                selector: 'scale-icon-device-media-receiver',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconDeviceMediaReceiver;
}());
var ScaleIconDeviceMobileDevicesCombination = /** @class */ (function () {
    function ScaleIconDeviceMobileDevicesCombination(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconDeviceMobileDevicesCombination.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconDeviceMobileDevicesCombination = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconDeviceMobileDevicesCombination);
ScaleIconDeviceMobileDevicesCombination.ɵfac = function ScaleIconDeviceMobileDevicesCombination_Factory(t) { return new (t || ScaleIconDeviceMobileDevicesCombination)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconDeviceMobileDevicesCombination.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconDeviceMobileDevicesCombination, selectors: [["scale-icon-device-mobile-devices-combination"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconDeviceMobileDevicesCombination_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconDeviceMobileDevicesCombination, [{
        type: Component,
        args: [{
                selector: 'scale-icon-device-mobile-devices-combination',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconDeviceMobileDevicesCombination;
}());
var ScaleIconDeviceMobileEquipment = /** @class */ (function () {
    function ScaleIconDeviceMobileEquipment(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconDeviceMobileEquipment.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconDeviceMobileEquipment = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconDeviceMobileEquipment);
ScaleIconDeviceMobileEquipment.ɵfac = function ScaleIconDeviceMobileEquipment_Factory(t) { return new (t || ScaleIconDeviceMobileEquipment)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconDeviceMobileEquipment.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconDeviceMobileEquipment, selectors: [["scale-icon-device-mobile-equipment"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconDeviceMobileEquipment_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconDeviceMobileEquipment, [{
        type: Component,
        args: [{
                selector: 'scale-icon-device-mobile-equipment',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconDeviceMobileEquipment;
}());
var ScaleIconDeviceMobilePhoneInsurance = /** @class */ (function () {
    function ScaleIconDeviceMobilePhoneInsurance(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconDeviceMobilePhoneInsurance.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconDeviceMobilePhoneInsurance = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconDeviceMobilePhoneInsurance);
ScaleIconDeviceMobilePhoneInsurance.ɵfac = function ScaleIconDeviceMobilePhoneInsurance_Factory(t) { return new (t || ScaleIconDeviceMobilePhoneInsurance)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconDeviceMobilePhoneInsurance.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconDeviceMobilePhoneInsurance, selectors: [["scale-icon-device-mobile-phone-insurance"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconDeviceMobilePhoneInsurance_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconDeviceMobilePhoneInsurance, [{
        type: Component,
        args: [{
                selector: 'scale-icon-device-mobile-phone-insurance',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconDeviceMobilePhoneInsurance;
}());
var ScaleIconDeviceMobileServices = /** @class */ (function () {
    function ScaleIconDeviceMobileServices(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconDeviceMobileServices.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconDeviceMobileServices = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconDeviceMobileServices);
ScaleIconDeviceMobileServices.ɵfac = function ScaleIconDeviceMobileServices_Factory(t) { return new (t || ScaleIconDeviceMobileServices)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconDeviceMobileServices.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconDeviceMobileServices, selectors: [["scale-icon-device-mobile-services"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconDeviceMobileServices_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconDeviceMobileServices, [{
        type: Component,
        args: [{
                selector: 'scale-icon-device-mobile-services',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconDeviceMobileServices;
}());
var ScaleIconDeviceNoCamera = /** @class */ (function () {
    function ScaleIconDeviceNoCamera(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconDeviceNoCamera.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconDeviceNoCamera = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconDeviceNoCamera);
ScaleIconDeviceNoCamera.ɵfac = function ScaleIconDeviceNoCamera_Factory(t) { return new (t || ScaleIconDeviceNoCamera)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconDeviceNoCamera.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconDeviceNoCamera, selectors: [["scale-icon-device-no-camera"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconDeviceNoCamera_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconDeviceNoCamera, [{
        type: Component,
        args: [{
                selector: 'scale-icon-device-no-camera',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconDeviceNoCamera;
}());
var ScaleIconDevicePhotoCamera = /** @class */ (function () {
    function ScaleIconDevicePhotoCamera(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconDevicePhotoCamera.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconDevicePhotoCamera = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconDevicePhotoCamera);
ScaleIconDevicePhotoCamera.ɵfac = function ScaleIconDevicePhotoCamera_Factory(t) { return new (t || ScaleIconDevicePhotoCamera)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconDevicePhotoCamera.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconDevicePhotoCamera, selectors: [["scale-icon-device-photo-camera"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconDevicePhotoCamera_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconDevicePhotoCamera, [{
        type: Component,
        args: [{
                selector: 'scale-icon-device-photo-camera',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconDevicePhotoCamera;
}());
var ScaleIconDeviceRemoteController = /** @class */ (function () {
    function ScaleIconDeviceRemoteController(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconDeviceRemoteController.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconDeviceRemoteController = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconDeviceRemoteController);
ScaleIconDeviceRemoteController.ɵfac = function ScaleIconDeviceRemoteController_Factory(t) { return new (t || ScaleIconDeviceRemoteController)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconDeviceRemoteController.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconDeviceRemoteController, selectors: [["scale-icon-device-remote-controller"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconDeviceRemoteController_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconDeviceRemoteController, [{
        type: Component,
        args: [{
                selector: 'scale-icon-device-remote-controller',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconDeviceRemoteController;
}());
var ScaleIconDeviceReplacementMobilephone = /** @class */ (function () {
    function ScaleIconDeviceReplacementMobilephone(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconDeviceReplacementMobilephone.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconDeviceReplacementMobilephone = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconDeviceReplacementMobilephone);
ScaleIconDeviceReplacementMobilephone.ɵfac = function ScaleIconDeviceReplacementMobilephone_Factory(t) { return new (t || ScaleIconDeviceReplacementMobilephone)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconDeviceReplacementMobilephone.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconDeviceReplacementMobilephone, selectors: [["scale-icon-device-replacement-mobilephone"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconDeviceReplacementMobilephone_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconDeviceReplacementMobilephone, [{
        type: Component,
        args: [{
                selector: 'scale-icon-device-replacement-mobilephone',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconDeviceReplacementMobilephone;
}());
var ScaleIconDeviceScreenRotate = /** @class */ (function () {
    function ScaleIconDeviceScreenRotate(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconDeviceScreenRotate.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconDeviceScreenRotate = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconDeviceScreenRotate);
ScaleIconDeviceScreenRotate.ɵfac = function ScaleIconDeviceScreenRotate_Factory(t) { return new (t || ScaleIconDeviceScreenRotate)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconDeviceScreenRotate.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconDeviceScreenRotate, selectors: [["scale-icon-device-screen-rotate"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconDeviceScreenRotate_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconDeviceScreenRotate, [{
        type: Component,
        args: [{
                selector: 'scale-icon-device-screen-rotate',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconDeviceScreenRotate;
}());
var ScaleIconDeviceSmartSpeaker = /** @class */ (function () {
    function ScaleIconDeviceSmartSpeaker(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconDeviceSmartSpeaker.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconDeviceSmartSpeaker = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconDeviceSmartSpeaker);
ScaleIconDeviceSmartSpeaker.ɵfac = function ScaleIconDeviceSmartSpeaker_Factory(t) { return new (t || ScaleIconDeviceSmartSpeaker)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconDeviceSmartSpeaker.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconDeviceSmartSpeaker, selectors: [["scale-icon-device-smart-speaker"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconDeviceSmartSpeaker_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconDeviceSmartSpeaker, [{
        type: Component,
        args: [{
                selector: 'scale-icon-device-smart-speaker',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconDeviceSmartSpeaker;
}());
var ScaleIconDeviceTvAndMobile = /** @class */ (function () {
    function ScaleIconDeviceTvAndMobile(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconDeviceTvAndMobile.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconDeviceTvAndMobile = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconDeviceTvAndMobile);
ScaleIconDeviceTvAndMobile.ɵfac = function ScaleIconDeviceTvAndMobile_Factory(t) { return new (t || ScaleIconDeviceTvAndMobile)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconDeviceTvAndMobile.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconDeviceTvAndMobile, selectors: [["scale-icon-device-tv-and-mobile"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconDeviceTvAndMobile_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconDeviceTvAndMobile, [{
        type: Component,
        args: [{
                selector: 'scale-icon-device-tv-and-mobile',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconDeviceTvAndMobile;
}());
var ScaleIconHomeHome = /** @class */ (function () {
    function ScaleIconHomeHome(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconHomeHome.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconHomeHome = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconHomeHome);
ScaleIconHomeHome.ɵfac = function ScaleIconHomeHome_Factory(t) { return new (t || ScaleIconHomeHome)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconHomeHome.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconHomeHome, selectors: [["scale-icon-home-home"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconHomeHome_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconHomeHome, [{
        type: Component,
        args: [{
                selector: 'scale-icon-home-home',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconHomeHome;
}());
var ScaleIconHomeInternetAtHome = /** @class */ (function () {
    function ScaleIconHomeInternetAtHome(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconHomeInternetAtHome.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconHomeInternetAtHome = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconHomeInternetAtHome);
ScaleIconHomeInternetAtHome.ɵfac = function ScaleIconHomeInternetAtHome_Factory(t) { return new (t || ScaleIconHomeInternetAtHome)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconHomeInternetAtHome.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconHomeInternetAtHome, selectors: [["scale-icon-home-internet-at-home"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconHomeInternetAtHome_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconHomeInternetAtHome, [{
        type: Component,
        args: [{
                selector: 'scale-icon-home-internet-at-home',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconHomeInternetAtHome;
}());
var ScaleIconHomeIot = /** @class */ (function () {
    function ScaleIconHomeIot(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconHomeIot.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconHomeIot = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconHomeIot);
ScaleIconHomeIot.ɵfac = function ScaleIconHomeIot_Factory(t) { return new (t || ScaleIconHomeIot)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconHomeIot.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconHomeIot, selectors: [["scale-icon-home-iot"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconHomeIot_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconHomeIot, [{
        type: Component,
        args: [{
                selector: 'scale-icon-home-iot',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconHomeIot;
}());
var ScaleIconHomeNoWifi = /** @class */ (function () {
    function ScaleIconHomeNoWifi(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconHomeNoWifi.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconHomeNoWifi = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconHomeNoWifi);
ScaleIconHomeNoWifi.ɵfac = function ScaleIconHomeNoWifi_Factory(t) { return new (t || ScaleIconHomeNoWifi)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconHomeNoWifi.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconHomeNoWifi, selectors: [["scale-icon-home-no-wifi"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconHomeNoWifi_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconHomeNoWifi, [{
        type: Component,
        args: [{
                selector: 'scale-icon-home-no-wifi',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconHomeNoWifi;
}());
var ScaleIconHomeSmarthome = /** @class */ (function () {
    function ScaleIconHomeSmarthome(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconHomeSmarthome.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconHomeSmarthome = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconHomeSmarthome);
ScaleIconHomeSmarthome.ɵfac = function ScaleIconHomeSmarthome_Factory(t) { return new (t || ScaleIconHomeSmarthome)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconHomeSmarthome.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconHomeSmarthome, selectors: [["scale-icon-home-smarthome"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconHomeSmarthome_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconHomeSmarthome, [{
        type: Component,
        args: [{
                selector: 'scale-icon-home-smarthome',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconHomeSmarthome;
}());
var ScaleIconHomeWifi = /** @class */ (function () {
    function ScaleIconHomeWifi(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconHomeWifi.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconHomeWifi = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconHomeWifi);
ScaleIconHomeWifi.ɵfac = function ScaleIconHomeWifi_Factory(t) { return new (t || ScaleIconHomeWifi)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconHomeWifi.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconHomeWifi, selectors: [["scale-icon-home-wifi"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconHomeWifi_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconHomeWifi, [{
        type: Component,
        args: [{
                selector: 'scale-icon-home-wifi',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconHomeWifi;
}());
var ScaleIconNavigationCircleTopUp = /** @class */ (function () {
    function ScaleIconNavigationCircleTopUp(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconNavigationCircleTopUp.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconNavigationCircleTopUp = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconNavigationCircleTopUp);
ScaleIconNavigationCircleTopUp.ɵfac = function ScaleIconNavigationCircleTopUp_Factory(t) { return new (t || ScaleIconNavigationCircleTopUp)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconNavigationCircleTopUp.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconNavigationCircleTopUp, selectors: [["scale-icon-navigation-circle-top-up"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconNavigationCircleTopUp_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconNavigationCircleTopUp, [{
        type: Component,
        args: [{
                selector: 'scale-icon-navigation-circle-top-up',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconNavigationCircleTopUp;
}());
var ScaleIconNavigationCollapseDown = /** @class */ (function () {
    function ScaleIconNavigationCollapseDown(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconNavigationCollapseDown.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconNavigationCollapseDown = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconNavigationCollapseDown);
ScaleIconNavigationCollapseDown.ɵfac = function ScaleIconNavigationCollapseDown_Factory(t) { return new (t || ScaleIconNavigationCollapseDown)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconNavigationCollapseDown.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconNavigationCollapseDown, selectors: [["scale-icon-navigation-collapse-down"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconNavigationCollapseDown_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconNavigationCollapseDown, [{
        type: Component,
        args: [{
                selector: 'scale-icon-navigation-collapse-down',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconNavigationCollapseDown;
}());
var ScaleIconNavigationCollapseUp = /** @class */ (function () {
    function ScaleIconNavigationCollapseUp(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconNavigationCollapseUp.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconNavigationCollapseUp = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconNavigationCollapseUp);
ScaleIconNavigationCollapseUp.ɵfac = function ScaleIconNavigationCollapseUp_Factory(t) { return new (t || ScaleIconNavigationCollapseUp)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconNavigationCollapseUp.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconNavigationCollapseUp, selectors: [["scale-icon-navigation-collapse-up"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconNavigationCollapseUp_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconNavigationCollapseUp, [{
        type: Component,
        args: [{
                selector: 'scale-icon-navigation-collapse-up',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconNavigationCollapseUp;
}());
var ScaleIconNavigationExternalLink = /** @class */ (function () {
    function ScaleIconNavigationExternalLink(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconNavigationExternalLink.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconNavigationExternalLink = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconNavigationExternalLink);
ScaleIconNavigationExternalLink.ɵfac = function ScaleIconNavigationExternalLink_Factory(t) { return new (t || ScaleIconNavigationExternalLink)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconNavigationExternalLink.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconNavigationExternalLink, selectors: [["scale-icon-navigation-external-link"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconNavigationExternalLink_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconNavigationExternalLink, [{
        type: Component,
        args: [{
                selector: 'scale-icon-navigation-external-link',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconNavigationExternalLink;
}());
var ScaleIconNavigationInternalLink = /** @class */ (function () {
    function ScaleIconNavigationInternalLink(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconNavigationInternalLink.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconNavigationInternalLink = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconNavigationInternalLink);
ScaleIconNavigationInternalLink.ɵfac = function ScaleIconNavigationInternalLink_Factory(t) { return new (t || ScaleIconNavigationInternalLink)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconNavigationInternalLink.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconNavigationInternalLink, selectors: [["scale-icon-navigation-internal-link"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconNavigationInternalLink_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconNavigationInternalLink, [{
        type: Component,
        args: [{
                selector: 'scale-icon-navigation-internal-link',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconNavigationInternalLink;
}());
var ScaleIconNavigationLeft = /** @class */ (function () {
    function ScaleIconNavigationLeft(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconNavigationLeft.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconNavigationLeft = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconNavigationLeft);
ScaleIconNavigationLeft.ɵfac = function ScaleIconNavigationLeft_Factory(t) { return new (t || ScaleIconNavigationLeft)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconNavigationLeft.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconNavigationLeft, selectors: [["scale-icon-navigation-left"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconNavigationLeft_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconNavigationLeft, [{
        type: Component,
        args: [{
                selector: 'scale-icon-navigation-left',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconNavigationLeft;
}());
var ScaleIconNavigationLocation = /** @class */ (function () {
    function ScaleIconNavigationLocation(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconNavigationLocation.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconNavigationLocation = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconNavigationLocation);
ScaleIconNavigationLocation.ɵfac = function ScaleIconNavigationLocation_Factory(t) { return new (t || ScaleIconNavigationLocation)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconNavigationLocation.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconNavigationLocation, selectors: [["scale-icon-navigation-location"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconNavigationLocation_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconNavigationLocation, [{
        type: Component,
        args: [{
                selector: 'scale-icon-navigation-location',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconNavigationLocation;
}());
var ScaleIconNavigationMyLocation = /** @class */ (function () {
    function ScaleIconNavigationMyLocation(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconNavigationMyLocation.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconNavigationMyLocation = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconNavigationMyLocation);
ScaleIconNavigationMyLocation.ɵfac = function ScaleIconNavigationMyLocation_Factory(t) { return new (t || ScaleIconNavigationMyLocation)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconNavigationMyLocation.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconNavigationMyLocation, selectors: [["scale-icon-navigation-my-location"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconNavigationMyLocation_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconNavigationMyLocation, [{
        type: Component,
        args: [{
                selector: 'scale-icon-navigation-my-location',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconNavigationMyLocation;
}());
var ScaleIconNavigationRight = /** @class */ (function () {
    function ScaleIconNavigationRight(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconNavigationRight.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconNavigationRight = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconNavigationRight);
ScaleIconNavigationRight.ɵfac = function ScaleIconNavigationRight_Factory(t) { return new (t || ScaleIconNavigationRight)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconNavigationRight.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconNavigationRight, selectors: [["scale-icon-navigation-right"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconNavigationRight_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconNavigationRight, [{
        type: Component,
        args: [{
                selector: 'scale-icon-navigation-right',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconNavigationRight;
}());
var ScaleIconNavigationStart = /** @class */ (function () {
    function ScaleIconNavigationStart(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconNavigationStart.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconNavigationStart = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconNavigationStart);
ScaleIconNavigationStart.ɵfac = function ScaleIconNavigationStart_Factory(t) { return new (t || ScaleIconNavigationStart)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconNavigationStart.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconNavigationStart, selectors: [["scale-icon-navigation-start"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconNavigationStart_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconNavigationStart, [{
        type: Component,
        args: [{
                selector: 'scale-icon-navigation-start',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconNavigationStart;
}());
var ScaleIconNavigationTopUp = /** @class */ (function () {
    function ScaleIconNavigationTopUp(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconNavigationTopUp.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconNavigationTopUp = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconNavigationTopUp);
ScaleIconNavigationTopUp.ɵfac = function ScaleIconNavigationTopUp_Factory(t) { return new (t || ScaleIconNavigationTopUp)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconNavigationTopUp.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconNavigationTopUp, selectors: [["scale-icon-navigation-top-up"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconNavigationTopUp_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconNavigationTopUp, [{
        type: Component,
        args: [{
                selector: 'scale-icon-navigation-top-up',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconNavigationTopUp;
}());
var ScaleIconProcessOrderStatus = /** @class */ (function () {
    function ScaleIconProcessOrderStatus(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconProcessOrderStatus.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconProcessOrderStatus = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconProcessOrderStatus);
ScaleIconProcessOrderStatus.ɵfac = function ScaleIconProcessOrderStatus_Factory(t) { return new (t || ScaleIconProcessOrderStatus)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconProcessOrderStatus.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconProcessOrderStatus, selectors: [["scale-icon-process-order-status"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconProcessOrderStatus_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconProcessOrderStatus, [{
        type: Component,
        args: [{
                selector: 'scale-icon-process-order-status',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconProcessOrderStatus;
}());
var ScaleIconProcessProcessing = /** @class */ (function () {
    function ScaleIconProcessProcessing(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconProcessProcessing.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconProcessProcessing = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconProcessProcessing);
ScaleIconProcessProcessing.ɵfac = function ScaleIconProcessProcessing_Factory(t) { return new (t || ScaleIconProcessProcessing)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconProcessProcessing.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconProcessProcessing, selectors: [["scale-icon-process-processing"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconProcessProcessing_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconProcessProcessing, [{
        type: Component,
        args: [{
                selector: 'scale-icon-process-processing',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconProcessProcessing;
}());
var ScaleIconServiceDevicesService = /** @class */ (function () {
    function ScaleIconServiceDevicesService(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconServiceDevicesService.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconServiceDevicesService = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconServiceDevicesService);
ScaleIconServiceDevicesService.ɵfac = function ScaleIconServiceDevicesService_Factory(t) { return new (t || ScaleIconServiceDevicesService)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconServiceDevicesService.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconServiceDevicesService, selectors: [["scale-icon-service-devices-service"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconServiceDevicesService_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconServiceDevicesService, [{
        type: Component,
        args: [{
                selector: 'scale-icon-service-devices-service',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconServiceDevicesService;
}());
var ScaleIconServiceMaintanance = /** @class */ (function () {
    function ScaleIconServiceMaintanance(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconServiceMaintanance.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconServiceMaintanance = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconServiceMaintanance);
ScaleIconServiceMaintanance.ɵfac = function ScaleIconServiceMaintanance_Factory(t) { return new (t || ScaleIconServiceMaintanance)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconServiceMaintanance.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconServiceMaintanance, selectors: [["scale-icon-service-maintanance"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconServiceMaintanance_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconServiceMaintanance, [{
        type: Component,
        args: [{
                selector: 'scale-icon-service-maintanance',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconServiceMaintanance;
}());
var ScaleIconServiceServices = /** @class */ (function () {
    function ScaleIconServiceServices(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconServiceServices.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconServiceServices = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconServiceServices);
ScaleIconServiceServices.ɵfac = function ScaleIconServiceServices_Factory(t) { return new (t || ScaleIconServiceServices)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconServiceServices.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconServiceServices, selectors: [["scale-icon-service-services"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconServiceServices_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconServiceServices, [{
        type: Component,
        args: [{
                selector: 'scale-icon-service-services',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconServiceServices;
}());
var ScaleIconServiceSettings = /** @class */ (function () {
    function ScaleIconServiceSettings(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconServiceSettings.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconServiceSettings = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconServiceSettings);
ScaleIconServiceSettings.ɵfac = function ScaleIconServiceSettings_Factory(t) { return new (t || ScaleIconServiceSettings)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconServiceSettings.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconServiceSettings, selectors: [["scale-icon-service-settings"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconServiceSettings_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconServiceSettings, [{
        type: Component,
        args: [{
                selector: 'scale-icon-service-settings',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconServiceSettings;
}());
var ScaleIconServiceSupport = /** @class */ (function () {
    function ScaleIconServiceSupport(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconServiceSupport.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconServiceSupport = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconServiceSupport);
ScaleIconServiceSupport.ɵfac = function ScaleIconServiceSupport_Factory(t) { return new (t || ScaleIconServiceSupport)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconServiceSupport.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconServiceSupport, selectors: [["scale-icon-service-support"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconServiceSupport_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconServiceSupport, [{
        type: Component,
        args: [{
                selector: 'scale-icon-service-support',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconServiceSupport;
}());
var ScaleIconTProductMagentaCloud = /** @class */ (function () {
    function ScaleIconTProductMagentaCloud(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconTProductMagentaCloud.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconTProductMagentaCloud = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconTProductMagentaCloud);
ScaleIconTProductMagentaCloud.ɵfac = function ScaleIconTProductMagentaCloud_Factory(t) { return new (t || ScaleIconTProductMagentaCloud)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconTProductMagentaCloud.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconTProductMagentaCloud, selectors: [["scale-icon-t-product-magenta-cloud"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconTProductMagentaCloud_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconTProductMagentaCloud, [{
        type: Component,
        args: [{
                selector: 'scale-icon-t-product-magenta-cloud',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconTProductMagentaCloud;
}());
var ScaleIconTProductMagentaTv = /** @class */ (function () {
    function ScaleIconTProductMagentaTv(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconTProductMagentaTv.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconTProductMagentaTv = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconTProductMagentaTv);
ScaleIconTProductMagentaTv.ɵfac = function ScaleIconTProductMagentaTv_Factory(t) { return new (t || ScaleIconTProductMagentaTv)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconTProductMagentaTv.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconTProductMagentaTv, selectors: [["scale-icon-t-product-magenta-tv"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconTProductMagentaTv_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconTProductMagentaTv, [{
        type: Component,
        args: [{
                selector: 'scale-icon-t-product-magenta-tv',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconTProductMagentaTv;
}());
var ScaleIconTProductMagentaone = /** @class */ (function () {
    function ScaleIconTProductMagentaone(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconTProductMagentaone.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconTProductMagentaone = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconTProductMagentaone);
ScaleIconTProductMagentaone.ɵfac = function ScaleIconTProductMagentaone_Factory(t) { return new (t || ScaleIconTProductMagentaone)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconTProductMagentaone.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconTProductMagentaone, selectors: [["scale-icon-t-product-magentaone"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconTProductMagentaone_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconTProductMagentaone, [{
        type: Component,
        args: [{
                selector: 'scale-icon-t-product-magentaone',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconTProductMagentaone;
}());
var ScaleIconTProductMeasureInternetSpeed = /** @class */ (function () {
    function ScaleIconTProductMeasureInternetSpeed(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconTProductMeasureInternetSpeed.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconTProductMeasureInternetSpeed = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconTProductMeasureInternetSpeed);
ScaleIconTProductMeasureInternetSpeed.ɵfac = function ScaleIconTProductMeasureInternetSpeed_Factory(t) { return new (t || ScaleIconTProductMeasureInternetSpeed)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconTProductMeasureInternetSpeed.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconTProductMeasureInternetSpeed, selectors: [["scale-icon-t-product-measure-internet-speed"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconTProductMeasureInternetSpeed_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconTProductMeasureInternetSpeed, [{
        type: Component,
        args: [{
                selector: 'scale-icon-t-product-measure-internet-speed',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconTProductMeasureInternetSpeed;
}());
var ScaleIconTProductSeamlessConnectivity = /** @class */ (function () {
    function ScaleIconTProductSeamlessConnectivity(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconTProductSeamlessConnectivity.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconTProductSeamlessConnectivity = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconTProductSeamlessConnectivity);
ScaleIconTProductSeamlessConnectivity.ɵfac = function ScaleIconTProductSeamlessConnectivity_Factory(t) { return new (t || ScaleIconTProductSeamlessConnectivity)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconTProductSeamlessConnectivity.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconTProductSeamlessConnectivity, selectors: [["scale-icon-t-product-seamless-connectivity"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconTProductSeamlessConnectivity_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconTProductSeamlessConnectivity, [{
        type: Component,
        args: [{
                selector: 'scale-icon-t-product-seamless-connectivity',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconTProductSeamlessConnectivity;
}());
var ScaleIconTProductTelekomShopB = /** @class */ (function () {
    function ScaleIconTProductTelekomShopB(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconTProductTelekomShopB.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconTProductTelekomShopB = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconTProductTelekomShopB);
ScaleIconTProductTelekomShopB.ɵfac = function ScaleIconTProductTelekomShopB_Factory(t) { return new (t || ScaleIconTProductTelekomShopB)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconTProductTelekomShopB.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconTProductTelekomShopB, selectors: [["scale-icon-t-product-telekom-shop-b"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconTProductTelekomShopB_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconTProductTelekomShopB, [{
        type: Component,
        args: [{
                selector: 'scale-icon-t-product-telekom-shop-b',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconTProductTelekomShopB;
}());
var ScaleIconTProductUsage = /** @class */ (function () {
    function ScaleIconTProductUsage(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconTProductUsage.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconTProductUsage = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconTProductUsage);
ScaleIconTProductUsage.ɵfac = function ScaleIconTProductUsage_Factory(t) { return new (t || ScaleIconTProductUsage)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconTProductUsage.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconTProductUsage, selectors: [["scale-icon-t-product-usage"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconTProductUsage_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconTProductUsage, [{
        type: Component,
        args: [{
                selector: 'scale-icon-t-product-usage',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconTProductUsage;
}());
var ScaleIconUserFileAnalytics = /** @class */ (function () {
    function ScaleIconUserFileAnalytics(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconUserFileAnalytics.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconUserFileAnalytics = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconUserFileAnalytics);
ScaleIconUserFileAnalytics.ɵfac = function ScaleIconUserFileAnalytics_Factory(t) { return new (t || ScaleIconUserFileAnalytics)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconUserFileAnalytics.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconUserFileAnalytics, selectors: [["scale-icon-user-file-analytics"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconUserFileAnalytics_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconUserFileAnalytics, [{
        type: Component,
        args: [{
                selector: 'scale-icon-user-file-analytics',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconUserFileAnalytics;
}());
var ScaleIconUserFileAttachment = /** @class */ (function () {
    function ScaleIconUserFileAttachment(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconUserFileAttachment.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconUserFileAttachment = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconUserFileAttachment);
ScaleIconUserFileAttachment.ɵfac = function ScaleIconUserFileAttachment_Factory(t) { return new (t || ScaleIconUserFileAttachment)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconUserFileAttachment.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconUserFileAttachment, selectors: [["scale-icon-user-file-attachment"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconUserFileAttachment_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconUserFileAttachment, [{
        type: Component,
        args: [{
                selector: 'scale-icon-user-file-attachment',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconUserFileAttachment;
}());
var ScaleIconUserFileAudioFile = /** @class */ (function () {
    function ScaleIconUserFileAudioFile(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconUserFileAudioFile.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconUserFileAudioFile = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconUserFileAudioFile);
ScaleIconUserFileAudioFile.ɵfac = function ScaleIconUserFileAudioFile_Factory(t) { return new (t || ScaleIconUserFileAudioFile)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconUserFileAudioFile.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconUserFileAudioFile, selectors: [["scale-icon-user-file-audio-file"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconUserFileAudioFile_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconUserFileAudioFile, [{
        type: Component,
        args: [{
                selector: 'scale-icon-user-file-audio-file',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconUserFileAudioFile;
}());
var ScaleIconUserFileBilling = /** @class */ (function () {
    function ScaleIconUserFileBilling(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconUserFileBilling.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconUserFileBilling = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconUserFileBilling);
ScaleIconUserFileBilling.ɵfac = function ScaleIconUserFileBilling_Factory(t) { return new (t || ScaleIconUserFileBilling)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconUserFileBilling.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconUserFileBilling, selectors: [["scale-icon-user-file-billing"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconUserFileBilling_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconUserFileBilling, [{
        type: Component,
        args: [{
                selector: 'scale-icon-user-file-billing',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconUserFileBilling;
}());
var ScaleIconUserFileBussinesUsers = /** @class */ (function () {
    function ScaleIconUserFileBussinesUsers(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconUserFileBussinesUsers.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconUserFileBussinesUsers = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconUserFileBussinesUsers);
ScaleIconUserFileBussinesUsers.ɵfac = function ScaleIconUserFileBussinesUsers_Factory(t) { return new (t || ScaleIconUserFileBussinesUsers)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconUserFileBussinesUsers.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconUserFileBussinesUsers, selectors: [["scale-icon-user-file-bussines-users"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconUserFileBussinesUsers_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconUserFileBussinesUsers, [{
        type: Component,
        args: [{
                selector: 'scale-icon-user-file-bussines-users',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconUserFileBussinesUsers;
}());
var ScaleIconUserFileCommunities = /** @class */ (function () {
    function ScaleIconUserFileCommunities(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconUserFileCommunities.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconUserFileCommunities = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconUserFileCommunities);
ScaleIconUserFileCommunities.ɵfac = function ScaleIconUserFileCommunities_Factory(t) { return new (t || ScaleIconUserFileCommunities)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconUserFileCommunities.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconUserFileCommunities, selectors: [["scale-icon-user-file-communities"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconUserFileCommunities_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconUserFileCommunities, [{
        type: Component,
        args: [{
                selector: 'scale-icon-user-file-communities',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconUserFileCommunities;
}());
var ScaleIconUserFileContacts = /** @class */ (function () {
    function ScaleIconUserFileContacts(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconUserFileContacts.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconUserFileContacts = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconUserFileContacts);
ScaleIconUserFileContacts.ɵfac = function ScaleIconUserFileContacts_Factory(t) { return new (t || ScaleIconUserFileContacts)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconUserFileContacts.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconUserFileContacts, selectors: [["scale-icon-user-file-contacts"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconUserFileContacts_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconUserFileContacts, [{
        type: Component,
        args: [{
                selector: 'scale-icon-user-file-contacts',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconUserFileContacts;
}());
var ScaleIconUserFileContracts = /** @class */ (function () {
    function ScaleIconUserFileContracts(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconUserFileContracts.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconUserFileContracts = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconUserFileContracts);
ScaleIconUserFileContracts.ɵfac = function ScaleIconUserFileContracts_Factory(t) { return new (t || ScaleIconUserFileContracts)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconUserFileContracts.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconUserFileContracts, selectors: [["scale-icon-user-file-contracts"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconUserFileContracts_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconUserFileContracts, [{
        type: Component,
        args: [{
                selector: 'scale-icon-user-file-contracts',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconUserFileContracts;
}());
var ScaleIconUserFileFamilies = /** @class */ (function () {
    function ScaleIconUserFileFamilies(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconUserFileFamilies.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconUserFileFamilies = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconUserFileFamilies);
ScaleIconUserFileFamilies.ɵfac = function ScaleIconUserFileFamilies_Factory(t) { return new (t || ScaleIconUserFileFamilies)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconUserFileFamilies.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconUserFileFamilies, selectors: [["scale-icon-user-file-families"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconUserFileFamilies_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconUserFileFamilies, [{
        type: Component,
        args: [{
                selector: 'scale-icon-user-file-families',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconUserFileFamilies;
}());
var ScaleIconUserFileHandshake = /** @class */ (function () {
    function ScaleIconUserFileHandshake(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconUserFileHandshake.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconUserFileHandshake = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconUserFileHandshake);
ScaleIconUserFileHandshake.ɵfac = function ScaleIconUserFileHandshake_Factory(t) { return new (t || ScaleIconUserFileHandshake)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconUserFileHandshake.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconUserFileHandshake, selectors: [["scale-icon-user-file-handshake"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconUserFileHandshake_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconUserFileHandshake, [{
        type: Component,
        args: [{
                selector: 'scale-icon-user-file-handshake',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconUserFileHandshake;
}());
var ScaleIconUserFileIdCard = /** @class */ (function () {
    function ScaleIconUserFileIdCard(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconUserFileIdCard.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconUserFileIdCard = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconUserFileIdCard);
ScaleIconUserFileIdCard.ɵfac = function ScaleIconUserFileIdCard_Factory(t) { return new (t || ScaleIconUserFileIdCard)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconUserFileIdCard.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconUserFileIdCard, selectors: [["scale-icon-user-file-id-card"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconUserFileIdCard_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconUserFileIdCard, [{
        type: Component,
        args: [{
                selector: 'scale-icon-user-file-id-card',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconUserFileIdCard;
}());
var ScaleIconUserFileImageFile = /** @class */ (function () {
    function ScaleIconUserFileImageFile(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconUserFileImageFile.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconUserFileImageFile = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconUserFileImageFile);
ScaleIconUserFileImageFile.ɵfac = function ScaleIconUserFileImageFile_Factory(t) { return new (t || ScaleIconUserFileImageFile)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconUserFileImageFile.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconUserFileImageFile, selectors: [["scale-icon-user-file-image-file"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconUserFileImageFile_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconUserFileImageFile, [{
        type: Component,
        args: [{
                selector: 'scale-icon-user-file-image-file',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconUserFileImageFile;
}());
var ScaleIconUserFileLogout = /** @class */ (function () {
    function ScaleIconUserFileLogout(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconUserFileLogout.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconUserFileLogout = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconUserFileLogout);
ScaleIconUserFileLogout.ɵfac = function ScaleIconUserFileLogout_Factory(t) { return new (t || ScaleIconUserFileLogout)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconUserFileLogout.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconUserFileLogout, selectors: [["scale-icon-user-file-logout"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconUserFileLogout_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconUserFileLogout, [{
        type: Component,
        args: [{
                selector: 'scale-icon-user-file-logout',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconUserFileLogout;
}());
var ScaleIconUserFilePdfFile = /** @class */ (function () {
    function ScaleIconUserFilePdfFile(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconUserFilePdfFile.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconUserFilePdfFile = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconUserFilePdfFile);
ScaleIconUserFilePdfFile.ɵfac = function ScaleIconUserFilePdfFile_Factory(t) { return new (t || ScaleIconUserFilePdfFile)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconUserFilePdfFile.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconUserFilePdfFile, selectors: [["scale-icon-user-file-pdf-file"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconUserFilePdfFile_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconUserFilePdfFile, [{
        type: Component,
        args: [{
                selector: 'scale-icon-user-file-pdf-file',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconUserFilePdfFile;
}());
var ScaleIconUserFileSwitchUsers = /** @class */ (function () {
    function ScaleIconUserFileSwitchUsers(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconUserFileSwitchUsers.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconUserFileSwitchUsers = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconUserFileSwitchUsers);
ScaleIconUserFileSwitchUsers.ɵfac = function ScaleIconUserFileSwitchUsers_Factory(t) { return new (t || ScaleIconUserFileSwitchUsers)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconUserFileSwitchUsers.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconUserFileSwitchUsers, selectors: [["scale-icon-user-file-switch-users"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconUserFileSwitchUsers_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconUserFileSwitchUsers, [{
        type: Component,
        args: [{
                selector: 'scale-icon-user-file-switch-users',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconUserFileSwitchUsers;
}());
var ScaleIconUserFileUser = /** @class */ (function () {
    function ScaleIconUserFileUser(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconUserFileUser.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconUserFileUser = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconUserFileUser);
ScaleIconUserFileUser.ɵfac = function ScaleIconUserFileUser_Factory(t) { return new (t || ScaleIconUserFileUser)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconUserFileUser.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconUserFileUser, selectors: [["scale-icon-user-file-user"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconUserFileUser_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconUserFileUser, [{
        type: Component,
        args: [{
                selector: 'scale-icon-user-file-user',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconUserFileUser;
}());
var ScaleIconUserFileVideos = /** @class */ (function () {
    function ScaleIconUserFileVideos(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconUserFileVideos.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconUserFileVideos = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconUserFileVideos);
ScaleIconUserFileVideos.ɵfac = function ScaleIconUserFileVideos_Factory(t) { return new (t || ScaleIconUserFileVideos)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconUserFileVideos.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconUserFileVideos, selectors: [["scale-icon-user-file-videos"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconUserFileVideos_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconUserFileVideos, [{
        type: Component,
        args: [{
                selector: 'scale-icon-user-file-videos',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconUserFileVideos;
}());
var ScaleIconWeatherCloudy = /** @class */ (function () {
    function ScaleIconWeatherCloudy(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconWeatherCloudy.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconWeatherCloudy = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconWeatherCloudy);
ScaleIconWeatherCloudy.ɵfac = function ScaleIconWeatherCloudy_Factory(t) { return new (t || ScaleIconWeatherCloudy)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconWeatherCloudy.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconWeatherCloudy, selectors: [["scale-icon-weather-cloudy"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconWeatherCloudy_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconWeatherCloudy, [{
        type: Component,
        args: [{
                selector: 'scale-icon-weather-cloudy',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconWeatherCloudy;
}());
var ScaleIconWeatherCloudyRain = /** @class */ (function () {
    function ScaleIconWeatherCloudyRain(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconWeatherCloudyRain.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconWeatherCloudyRain = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconWeatherCloudyRain);
ScaleIconWeatherCloudyRain.ɵfac = function ScaleIconWeatherCloudyRain_Factory(t) { return new (t || ScaleIconWeatherCloudyRain)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconWeatherCloudyRain.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconWeatherCloudyRain, selectors: [["scale-icon-weather-cloudy-rain"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconWeatherCloudyRain_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconWeatherCloudyRain, [{
        type: Component,
        args: [{
                selector: 'scale-icon-weather-cloudy-rain',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconWeatherCloudyRain;
}());
var ScaleIconWeatherCloudySleet = /** @class */ (function () {
    function ScaleIconWeatherCloudySleet(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconWeatherCloudySleet.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconWeatherCloudySleet = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconWeatherCloudySleet);
ScaleIconWeatherCloudySleet.ɵfac = function ScaleIconWeatherCloudySleet_Factory(t) { return new (t || ScaleIconWeatherCloudySleet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconWeatherCloudySleet.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconWeatherCloudySleet, selectors: [["scale-icon-weather-cloudy-sleet"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconWeatherCloudySleet_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconWeatherCloudySleet, [{
        type: Component,
        args: [{
                selector: 'scale-icon-weather-cloudy-sleet',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconWeatherCloudySleet;
}());
var ScaleIconWeatherCloudySnow = /** @class */ (function () {
    function ScaleIconWeatherCloudySnow(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconWeatherCloudySnow.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconWeatherCloudySnow = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconWeatherCloudySnow);
ScaleIconWeatherCloudySnow.ɵfac = function ScaleIconWeatherCloudySnow_Factory(t) { return new (t || ScaleIconWeatherCloudySnow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconWeatherCloudySnow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconWeatherCloudySnow, selectors: [["scale-icon-weather-cloudy-snow"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconWeatherCloudySnow_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconWeatherCloudySnow, [{
        type: Component,
        args: [{
                selector: 'scale-icon-weather-cloudy-snow',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconWeatherCloudySnow;
}());
var ScaleIconWeatherCloudyThunderRain = /** @class */ (function () {
    function ScaleIconWeatherCloudyThunderRain(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconWeatherCloudyThunderRain.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconWeatherCloudyThunderRain = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconWeatherCloudyThunderRain);
ScaleIconWeatherCloudyThunderRain.ɵfac = function ScaleIconWeatherCloudyThunderRain_Factory(t) { return new (t || ScaleIconWeatherCloudyThunderRain)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconWeatherCloudyThunderRain.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconWeatherCloudyThunderRain, selectors: [["scale-icon-weather-cloudy-thunder-rain"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconWeatherCloudyThunderRain_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconWeatherCloudyThunderRain, [{
        type: Component,
        args: [{
                selector: 'scale-icon-weather-cloudy-thunder-rain',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconWeatherCloudyThunderRain;
}());
var ScaleIconWeatherCloudyThunderSnow = /** @class */ (function () {
    function ScaleIconWeatherCloudyThunderSnow(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconWeatherCloudyThunderSnow.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconWeatherCloudyThunderSnow = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconWeatherCloudyThunderSnow);
ScaleIconWeatherCloudyThunderSnow.ɵfac = function ScaleIconWeatherCloudyThunderSnow_Factory(t) { return new (t || ScaleIconWeatherCloudyThunderSnow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconWeatherCloudyThunderSnow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconWeatherCloudyThunderSnow, selectors: [["scale-icon-weather-cloudy-thunder-snow"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconWeatherCloudyThunderSnow_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconWeatherCloudyThunderSnow, [{
        type: Component,
        args: [{
                selector: 'scale-icon-weather-cloudy-thunder-snow',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconWeatherCloudyThunderSnow;
}());
var ScaleIconWeatherHeavySleet = /** @class */ (function () {
    function ScaleIconWeatherHeavySleet(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconWeatherHeavySleet.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconWeatherHeavySleet = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconWeatherHeavySleet);
ScaleIconWeatherHeavySleet.ɵfac = function ScaleIconWeatherHeavySleet_Factory(t) { return new (t || ScaleIconWeatherHeavySleet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconWeatherHeavySleet.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconWeatherHeavySleet, selectors: [["scale-icon-weather-heavy-sleet"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconWeatherHeavySleet_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconWeatherHeavySleet, [{
        type: Component,
        args: [{
                selector: 'scale-icon-weather-heavy-sleet',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconWeatherHeavySleet;
}());
var ScaleIconWeatherHeavySnow = /** @class */ (function () {
    function ScaleIconWeatherHeavySnow(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconWeatherHeavySnow.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconWeatherHeavySnow = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconWeatherHeavySnow);
ScaleIconWeatherHeavySnow.ɵfac = function ScaleIconWeatherHeavySnow_Factory(t) { return new (t || ScaleIconWeatherHeavySnow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconWeatherHeavySnow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconWeatherHeavySnow, selectors: [["scale-icon-weather-heavy-snow"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconWeatherHeavySnow_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconWeatherHeavySnow, [{
        type: Component,
        args: [{
                selector: 'scale-icon-weather-heavy-snow',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconWeatherHeavySnow;
}());
var ScaleIconWeatherMoonClear = /** @class */ (function () {
    function ScaleIconWeatherMoonClear(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconWeatherMoonClear.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconWeatherMoonClear = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconWeatherMoonClear);
ScaleIconWeatherMoonClear.ɵfac = function ScaleIconWeatherMoonClear_Factory(t) { return new (t || ScaleIconWeatherMoonClear)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconWeatherMoonClear.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconWeatherMoonClear, selectors: [["scale-icon-weather-moon-clear"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconWeatherMoonClear_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconWeatherMoonClear, [{
        type: Component,
        args: [{
                selector: 'scale-icon-weather-moon-clear',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconWeatherMoonClear;
}());
var ScaleIconWeatherMoonCloudyA = /** @class */ (function () {
    function ScaleIconWeatherMoonCloudyA(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconWeatherMoonCloudyA.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconWeatherMoonCloudyA = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconWeatherMoonCloudyA);
ScaleIconWeatherMoonCloudyA.ɵfac = function ScaleIconWeatherMoonCloudyA_Factory(t) { return new (t || ScaleIconWeatherMoonCloudyA)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconWeatherMoonCloudyA.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconWeatherMoonCloudyA, selectors: [["scale-icon-weather-moon-cloudy-a"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconWeatherMoonCloudyA_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconWeatherMoonCloudyA, [{
        type: Component,
        args: [{
                selector: 'scale-icon-weather-moon-cloudy-a',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconWeatherMoonCloudyA;
}());
var ScaleIconWeatherMoonCloudyB = /** @class */ (function () {
    function ScaleIconWeatherMoonCloudyB(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconWeatherMoonCloudyB.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconWeatherMoonCloudyB = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconWeatherMoonCloudyB);
ScaleIconWeatherMoonCloudyB.ɵfac = function ScaleIconWeatherMoonCloudyB_Factory(t) { return new (t || ScaleIconWeatherMoonCloudyB)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconWeatherMoonCloudyB.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconWeatherMoonCloudyB, selectors: [["scale-icon-weather-moon-cloudy-b"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconWeatherMoonCloudyB_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconWeatherMoonCloudyB, [{
        type: Component,
        args: [{
                selector: 'scale-icon-weather-moon-cloudy-b',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconWeatherMoonCloudyB;
}());
var ScaleIconWeatherMoonRain = /** @class */ (function () {
    function ScaleIconWeatherMoonRain(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconWeatherMoonRain.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconWeatherMoonRain = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconWeatherMoonRain);
ScaleIconWeatherMoonRain.ɵfac = function ScaleIconWeatherMoonRain_Factory(t) { return new (t || ScaleIconWeatherMoonRain)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconWeatherMoonRain.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconWeatherMoonRain, selectors: [["scale-icon-weather-moon-rain"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconWeatherMoonRain_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconWeatherMoonRain, [{
        type: Component,
        args: [{
                selector: 'scale-icon-weather-moon-rain',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconWeatherMoonRain;
}());
var ScaleIconWeatherMoonSleet = /** @class */ (function () {
    function ScaleIconWeatherMoonSleet(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconWeatherMoonSleet.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconWeatherMoonSleet = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconWeatherMoonSleet);
ScaleIconWeatherMoonSleet.ɵfac = function ScaleIconWeatherMoonSleet_Factory(t) { return new (t || ScaleIconWeatherMoonSleet)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconWeatherMoonSleet.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconWeatherMoonSleet, selectors: [["scale-icon-weather-moon-sleet"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconWeatherMoonSleet_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconWeatherMoonSleet, [{
        type: Component,
        args: [{
                selector: 'scale-icon-weather-moon-sleet',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconWeatherMoonSleet;
}());
var ScaleIconWeatherMoonSnow = /** @class */ (function () {
    function ScaleIconWeatherMoonSnow(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconWeatherMoonSnow.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconWeatherMoonSnow = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconWeatherMoonSnow);
ScaleIconWeatherMoonSnow.ɵfac = function ScaleIconWeatherMoonSnow_Factory(t) { return new (t || ScaleIconWeatherMoonSnow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconWeatherMoonSnow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconWeatherMoonSnow, selectors: [["scale-icon-weather-moon-snow"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconWeatherMoonSnow_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconWeatherMoonSnow, [{
        type: Component,
        args: [{
                selector: 'scale-icon-weather-moon-snow',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconWeatherMoonSnow;
}());
var ScaleIconWeatherMoonThunderRain = /** @class */ (function () {
    function ScaleIconWeatherMoonThunderRain(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconWeatherMoonThunderRain.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconWeatherMoonThunderRain = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconWeatherMoonThunderRain);
ScaleIconWeatherMoonThunderRain.ɵfac = function ScaleIconWeatherMoonThunderRain_Factory(t) { return new (t || ScaleIconWeatherMoonThunderRain)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconWeatherMoonThunderRain.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconWeatherMoonThunderRain, selectors: [["scale-icon-weather-moon-thunder-rain"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconWeatherMoonThunderRain_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconWeatherMoonThunderRain, [{
        type: Component,
        args: [{
                selector: 'scale-icon-weather-moon-thunder-rain',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconWeatherMoonThunderRain;
}());
var ScaleIconWeatherMoonThunderSnow = /** @class */ (function () {
    function ScaleIconWeatherMoonThunderSnow(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconWeatherMoonThunderSnow.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconWeatherMoonThunderSnow = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconWeatherMoonThunderSnow);
ScaleIconWeatherMoonThunderSnow.ɵfac = function ScaleIconWeatherMoonThunderSnow_Factory(t) { return new (t || ScaleIconWeatherMoonThunderSnow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconWeatherMoonThunderSnow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconWeatherMoonThunderSnow, selectors: [["scale-icon-weather-moon-thunder-snow"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconWeatherMoonThunderSnow_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconWeatherMoonThunderSnow, [{
        type: Component,
        args: [{
                selector: 'scale-icon-weather-moon-thunder-snow',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconWeatherMoonThunderSnow;
}());
var ScaleIconWeatherOvercast = /** @class */ (function () {
    function ScaleIconWeatherOvercast(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconWeatherOvercast.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconWeatherOvercast = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconWeatherOvercast);
ScaleIconWeatherOvercast.ɵfac = function ScaleIconWeatherOvercast_Factory(t) { return new (t || ScaleIconWeatherOvercast)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconWeatherOvercast.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconWeatherOvercast, selectors: [["scale-icon-weather-overcast"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconWeatherOvercast_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconWeatherOvercast, [{
        type: Component,
        args: [{
                selector: 'scale-icon-weather-overcast',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconWeatherOvercast;
}());
var ScaleIconWeatherRain = /** @class */ (function () {
    function ScaleIconWeatherRain(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconWeatherRain.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconWeatherRain = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconWeatherRain);
ScaleIconWeatherRain.ɵfac = function ScaleIconWeatherRain_Factory(t) { return new (t || ScaleIconWeatherRain)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconWeatherRain.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconWeatherRain, selectors: [["scale-icon-weather-rain"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconWeatherRain_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconWeatherRain, [{
        type: Component,
        args: [{
                selector: 'scale-icon-weather-rain',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconWeatherRain;
}());
var ScaleIconWeatherSunny = /** @class */ (function () {
    function ScaleIconWeatherSunny(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconWeatherSunny.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconWeatherSunny = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconWeatherSunny);
ScaleIconWeatherSunny.ɵfac = function ScaleIconWeatherSunny_Factory(t) { return new (t || ScaleIconWeatherSunny)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconWeatherSunny.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconWeatherSunny, selectors: [["scale-icon-weather-sunny"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconWeatherSunny_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconWeatherSunny, [{
        type: Component,
        args: [{
                selector: 'scale-icon-weather-sunny',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconWeatherSunny;
}());
var ScaleIconWeatherThunderRain = /** @class */ (function () {
    function ScaleIconWeatherThunderRain(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconWeatherThunderRain.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconWeatherThunderRain = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconWeatherThunderRain);
ScaleIconWeatherThunderRain.ɵfac = function ScaleIconWeatherThunderRain_Factory(t) { return new (t || ScaleIconWeatherThunderRain)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconWeatherThunderRain.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconWeatherThunderRain, selectors: [["scale-icon-weather-thunder-rain"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconWeatherThunderRain_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconWeatherThunderRain, [{
        type: Component,
        args: [{
                selector: 'scale-icon-weather-thunder-rain',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconWeatherThunderRain;
}());
var ScaleIconWeatherThunderSnow = /** @class */ (function () {
    function ScaleIconWeatherThunderSnow(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleIconWeatherThunderSnow.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleIconWeatherThunderSnow = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleIconWeatherThunderSnow);
ScaleIconWeatherThunderSnow.ɵfac = function ScaleIconWeatherThunderSnow_Factory(t) { return new (t || ScaleIconWeatherThunderSnow)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleIconWeatherThunderSnow.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleIconWeatherThunderSnow, selectors: [["scale-icon-weather-thunder-snow"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", decorative: "decorative", fill: "fill", selected: "selected", size: "size" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleIconWeatherThunderSnow_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleIconWeatherThunderSnow, [{
        type: Component,
        args: [{
                selector: 'scale-icon-weather-thunder-snow',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'decorative', 'fill', 'selected', 'size']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleIconWeatherThunderSnow;
}());
var ScaleInput = /** @class */ (function () {
    function ScaleInput(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-input', 'scaleInput', 'scale-change', 'scaleChange', 'scale-focus', 'scaleFocus', 'scale-blur', 'scaleBlur', 'scale-keydown', 'scaleKeyDown']);
    }
    /** @nocollapse */
    ScaleInput.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleInput = __decorate([
        ProxyCmp({
            inputs: ['checked', 'cols', 'controlled', 'counter', 'disabled', 'helperText', 'icon', 'inputId', 'invalid', 'label', 'maxLength', 'minLength', 'multiple', 'name', 'placeholder', 'required', 'resize', 'rows', 'size', 'status', 'styles', 'transparent', 'type', 'value', 'variant', 'visibleSize']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleInput);
ScaleInput.ɵfac = function ScaleInput_Factory(t) { return new (t || ScaleInput)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleInput.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleInput, selectors: [["scale-input"]], inputs: { checked: "checked", cols: "cols", controlled: "controlled", counter: "counter", disabled: "disabled", helperText: "helperText", icon: "icon", inputId: "inputId", invalid: "invalid", label: "label", maxLength: "maxLength", minLength: "minLength", multiple: "multiple", name: "name", placeholder: "placeholder", required: "required", resize: "resize", rows: "rows", size: "size", status: "status", styles: "styles", transparent: "transparent", type: "type", value: "value", variant: "variant", visibleSize: "visibleSize" }, outputs: { "scale-input": "scale-input", scaleInput: "scaleInput", "scale-change": "scale-change", scaleChange: "scaleChange", "scale-focus": "scale-focus", scaleFocus: "scaleFocus", "scale-blur": "scale-blur", scaleBlur: "scaleBlur", "scale-keydown": "scale-keydown", scaleKeyDown: "scaleKeyDown" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleInput_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleInput, [{
        type: Component,
        args: [{
                selector: 'scale-input',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['checked', 'cols', 'controlled', 'counter', 'disabled', 'helperText', 'icon', 'inputId', 'invalid', 'label', 'maxLength', 'minLength', 'multiple', 'name', 'placeholder', 'required', 'resize', 'rows', 'size', 'status', 'styles', 'transparent', 'type', 'value', 'variant', 'visibleSize'],
                outputs: ['scale-input', 'scaleInput', 'scale-change', 'scaleChange', 'scale-focus', 'scaleFocus', 'scale-blur', 'scaleBlur', 'scale-keydown', 'scaleKeyDown']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleInput;
}());
var ScaleLink = /** @class */ (function () {
    function ScaleLink(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleLink.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleLink = __decorate([
        ProxyCmp({
            inputs: ['disabled', 'download', 'href', 'hreflang', 'iconPosition', 'innerTabindex', 'omitUnderline', 'ping', 'referrerpolicy', 'rel', 'styles', 'target', 'type'],
            methods: ['setFocus']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleLink);
ScaleLink.ɵfac = function ScaleLink_Factory(t) { return new (t || ScaleLink)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleLink.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleLink, selectors: [["scale-link"]], inputs: { disabled: "disabled", download: "download", href: "href", hreflang: "hreflang", iconPosition: "iconPosition", innerTabindex: "innerTabindex", omitUnderline: "omitUnderline", ping: "ping", referrerpolicy: "referrerpolicy", rel: "rel", styles: "styles", target: "target", type: "type" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleLink_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleLink, [{
        type: Component,
        args: [{
                selector: 'scale-link',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['disabled', 'download', 'href', 'hreflang', 'iconPosition', 'innerTabindex', 'omitUnderline', 'ping', 'referrerpolicy', 'rel', 'styles', 'target', 'type']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleLink;
}());
var ScaleList = /** @class */ (function () {
    function ScaleList(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleList.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleList = __decorate([
        ProxyCmp({
            inputs: ['ordered', 'styles']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleList);
ScaleList.ɵfac = function ScaleList_Factory(t) { return new (t || ScaleList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleList.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleList, selectors: [["scale-list"]], inputs: { ordered: "ordered", styles: "styles" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleList_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleList, [{
        type: Component,
        args: [{
                selector: 'scale-list',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['ordered', 'styles']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleList;
}());
var ScaleListItem = /** @class */ (function () {
    function ScaleListItem(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleListItem.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleListItem = __decorate([
        ProxyCmp({
            inputs: ['index', 'marker', 'ordered', 'styles']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleListItem);
ScaleListItem.ɵfac = function ScaleListItem_Factory(t) { return new (t || ScaleListItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleListItem.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleListItem, selectors: [["scale-list-item"]], inputs: { index: "index", marker: "marker", ordered: "ordered", styles: "styles" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleListItem_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleListItem, [{
        type: Component,
        args: [{
                selector: 'scale-list-item',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['index', 'marker', 'ordered', 'styles']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleListItem;
}());
var ScaleLoadingSpinner = /** @class */ (function () {
    function ScaleLoadingSpinner(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleLoadingSpinner.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleLoadingSpinner = __decorate([
        ProxyCmp({
            inputs: ['alignment', 'size', 'text', 'variant']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleLoadingSpinner);
ScaleLoadingSpinner.ɵfac = function ScaleLoadingSpinner_Factory(t) { return new (t || ScaleLoadingSpinner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleLoadingSpinner.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleLoadingSpinner, selectors: [["scale-loading-spinner"]], inputs: { alignment: "alignment", size: "size", text: "text", variant: "variant" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleLoadingSpinner_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleLoadingSpinner, [{
        type: Component,
        args: [{
                selector: 'scale-loading-spinner',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['alignment', 'size', 'text', 'variant']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleLoadingSpinner;
}());
var ScaleLogo = /** @class */ (function () {
    function ScaleLogo(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleLogo.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleLogo = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'focusable', 'href', 'language', 'logoAriaDescribedBy', 'logoTitle', 'scrollIntoViewOnFocus', 'size', 'styles', 'transparent', 'variant']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleLogo);
ScaleLogo.ɵfac = function ScaleLogo_Factory(t) { return new (t || ScaleLogo)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleLogo.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleLogo, selectors: [["scale-logo"]], inputs: { accessibilityTitle: "accessibilityTitle", focusable: "focusable", href: "href", language: "language", logoAriaDescribedBy: "logoAriaDescribedBy", logoTitle: "logoTitle", scrollIntoViewOnFocus: "scrollIntoViewOnFocus", size: "size", styles: "styles", transparent: "transparent", variant: "variant" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleLogo_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleLogo, [{
        type: Component,
        args: [{
                selector: 'scale-logo',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'focusable', 'href', 'language', 'logoAriaDescribedBy', 'logoTitle', 'scrollIntoViewOnFocus', 'size', 'styles', 'transparent', 'variant']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleLogo;
}());
var ScaleLogoSvg = /** @class */ (function () {
    function ScaleLogoSvg(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleLogoSvg.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleLogoSvg = __decorate([
        ProxyCmp({
            inputs: ['accessibilityTitle', 'color', 'focusable', 'language', 'role']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleLogoSvg);
ScaleLogoSvg.ɵfac = function ScaleLogoSvg_Factory(t) { return new (t || ScaleLogoSvg)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleLogoSvg.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleLogoSvg, selectors: [["scale-logo-svg"]], inputs: { accessibilityTitle: "accessibilityTitle", color: "color", focusable: "focusable", language: "language", role: "role" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleLogoSvg_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleLogoSvg, [{
        type: Component,
        args: [{
                selector: 'scale-logo-svg',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['accessibilityTitle', 'color', 'focusable', 'language', 'role']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleLogoSvg;
}());
var ScaleMenuFlyout = /** @class */ (function () {
    function ScaleMenuFlyout(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleMenuFlyout.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleMenuFlyout = __decorate([
        ProxyCmp({
            inputs: ['closeOnSelect', 'direction', 'styles']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleMenuFlyout);
ScaleMenuFlyout.ɵfac = function ScaleMenuFlyout_Factory(t) { return new (t || ScaleMenuFlyout)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleMenuFlyout.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleMenuFlyout, selectors: [["scale-menu-flyout"]], inputs: { closeOnSelect: "closeOnSelect", direction: "direction", styles: "styles" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleMenuFlyout_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleMenuFlyout, [{
        type: Component,
        args: [{
                selector: 'scale-menu-flyout',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['closeOnSelect', 'direction', 'styles']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleMenuFlyout;
}());
var ScaleMenuFlyoutDivider = /** @class */ (function () {
    function ScaleMenuFlyoutDivider(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleMenuFlyoutDivider.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleMenuFlyoutDivider = __decorate([
        ProxyCmp({
            inputs: ['styles']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleMenuFlyoutDivider);
ScaleMenuFlyoutDivider.ɵfac = function ScaleMenuFlyoutDivider_Factory(t) { return new (t || ScaleMenuFlyoutDivider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleMenuFlyoutDivider.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleMenuFlyoutDivider, selectors: [["scale-menu-flyout-divider"]], inputs: { styles: "styles" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleMenuFlyoutDivider_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleMenuFlyoutDivider, [{
        type: Component,
        args: [{
                selector: 'scale-menu-flyout-divider',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['styles']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleMenuFlyoutDivider;
}());
var ScaleMenuFlyoutItem = /** @class */ (function () {
    function ScaleMenuFlyoutItem(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-select', 'scaleSelect']);
    }
    /** @nocollapse */
    ScaleMenuFlyoutItem.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleMenuFlyoutItem = __decorate([
        ProxyCmp({
            inputs: ['active', 'cascade', 'checkable', 'checked', 'disabled', 'styles', 'value'],
            methods: ['triggerEvent']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleMenuFlyoutItem);
ScaleMenuFlyoutItem.ɵfac = function ScaleMenuFlyoutItem_Factory(t) { return new (t || ScaleMenuFlyoutItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleMenuFlyoutItem.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleMenuFlyoutItem, selectors: [["scale-menu-flyout-item"]], inputs: { active: "active", cascade: "cascade", checkable: "checkable", checked: "checked", disabled: "disabled", styles: "styles", value: "value" }, outputs: { "scale-select": "scale-select", scaleSelect: "scaleSelect" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleMenuFlyoutItem_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleMenuFlyoutItem, [{
        type: Component,
        args: [{
                selector: 'scale-menu-flyout-item',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['active', 'cascade', 'checkable', 'checked', 'disabled', 'styles', 'value'],
                outputs: ['scale-select', 'scaleSelect']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleMenuFlyoutItem;
}());
var ScaleMenuFlyoutList = /** @class */ (function () {
    function ScaleMenuFlyoutList(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-open', 'scaleOpen', 'scale-close', 'scaleClose']);
    }
    /** @nocollapse */
    ScaleMenuFlyoutList.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleMenuFlyoutList = __decorate([
        ProxyCmp({
            inputs: ['active', 'closeOnSelect', 'direction', 'opened', 'styles', 'trigger'],
            methods: ['open', 'close', 'setFocus']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleMenuFlyoutList);
ScaleMenuFlyoutList.ɵfac = function ScaleMenuFlyoutList_Factory(t) { return new (t || ScaleMenuFlyoutList)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleMenuFlyoutList.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleMenuFlyoutList, selectors: [["scale-menu-flyout-list"]], inputs: { active: "active", closeOnSelect: "closeOnSelect", direction: "direction", opened: "opened", styles: "styles", trigger: "trigger" }, outputs: { "scale-open": "scale-open", scaleOpen: "scaleOpen", "scale-close": "scale-close", scaleClose: "scaleClose" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleMenuFlyoutList_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleMenuFlyoutList, [{
        type: Component,
        args: [{
                selector: 'scale-menu-flyout-list',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['active', 'closeOnSelect', 'direction', 'opened', 'styles', 'trigger'],
                outputs: ['scale-open', 'scaleOpen', 'scale-close', 'scaleClose']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleMenuFlyoutList;
}());
var ScaleModal = /** @class */ (function () {
    function ScaleModal(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-open', 'scaleOpen', 'scale-before-close', 'scaleBeforeClose', 'scale-close', 'scaleClose']);
    }
    /** @nocollapse */
    ScaleModal.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleModal = __decorate([
        ProxyCmp({
            inputs: ['alignActions', 'allowInjectingStyleToBody', 'closeButtonLabel', 'closeButtonTitle', 'duration', 'heading', 'opened', 'size', 'styles']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleModal);
ScaleModal.ɵfac = function ScaleModal_Factory(t) { return new (t || ScaleModal)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleModal.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleModal, selectors: [["scale-modal"]], inputs: { alignActions: "alignActions", allowInjectingStyleToBody: "allowInjectingStyleToBody", closeButtonLabel: "closeButtonLabel", closeButtonTitle: "closeButtonTitle", duration: "duration", heading: "heading", opened: "opened", size: "size", styles: "styles" }, outputs: { "scale-open": "scale-open", scaleOpen: "scaleOpen", "scale-before-close": "scale-before-close", scaleBeforeClose: "scaleBeforeClose", "scale-close": "scale-close", scaleClose: "scaleClose" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleModal_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleModal, [{
        type: Component,
        args: [{
                selector: 'scale-modal',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['alignActions', 'allowInjectingStyleToBody', 'closeButtonLabel', 'closeButtonTitle', 'duration', 'heading', 'opened', 'size', 'styles'],
                outputs: ['scale-open', 'scaleOpen', 'scale-before-close', 'scaleBeforeClose', 'scale-close', 'scaleClose']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleModal;
}());
var ScaleNavIcon = /** @class */ (function () {
    function ScaleNavIcon(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleNavIcon.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleNavIcon = __decorate([
        ProxyCmp({
            inputs: ['active', 'badge', 'badgeLabel', 'clickLink', 'href', 'icon', 'isActive', 'isMobileMenuOpen', 'mobileMenuOpen', 'refMobileMenuToggle', 'refMobileUserMenuToggle', 'refUserMenuToggle']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleNavIcon);
ScaleNavIcon.ɵfac = function ScaleNavIcon_Factory(t) { return new (t || ScaleNavIcon)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleNavIcon.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleNavIcon, selectors: [["scale-nav-icon"]], inputs: { active: "active", badge: "badge", badgeLabel: "badgeLabel", clickLink: "clickLink", href: "href", icon: "icon", isActive: "isActive", isMobileMenuOpen: "isMobileMenuOpen", mobileMenuOpen: "mobileMenuOpen", refMobileMenuToggle: "refMobileMenuToggle", refMobileUserMenuToggle: "refMobileUserMenuToggle", refUserMenuToggle: "refUserMenuToggle" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleNavIcon_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleNavIcon, [{
        type: Component,
        args: [{
                selector: 'scale-nav-icon',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['active', 'badge', 'badgeLabel', 'clickLink', 'href', 'icon', 'isActive', 'isMobileMenuOpen', 'mobileMenuOpen', 'refMobileMenuToggle', 'refMobileUserMenuToggle', 'refUserMenuToggle']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleNavIcon;
}());
var ScaleNavMain = /** @class */ (function () {
    function ScaleNavMain(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleNavMain.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleNavMain = __decorate([
        ProxyCmp({
            inputs: ['active', 'clickLink', 'href', 'isActive', 'isMegaMenuVisible', 'megaMenuVisible', 'name', 'popup']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleNavMain);
ScaleNavMain.ɵfac = function ScaleNavMain_Factory(t) { return new (t || ScaleNavMain)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleNavMain.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleNavMain, selectors: [["scale-nav-main"]], inputs: { active: "active", clickLink: "clickLink", href: "href", isActive: "isActive", isMegaMenuVisible: "isMegaMenuVisible", megaMenuVisible: "megaMenuVisible", name: "name", popup: "popup" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleNavMain_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleNavMain, [{
        type: Component,
        args: [{
                selector: 'scale-nav-main',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['active', 'clickLink', 'href', 'isActive', 'isMegaMenuVisible', 'megaMenuVisible', 'name', 'popup']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleNavMain;
}());
var ScaleNavSegment = /** @class */ (function () {
    function ScaleNavSegment(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleNavSegment.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleNavSegment = __decorate([
        ProxyCmp({
            inputs: ['active', 'href', 'isActive']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleNavSegment);
ScaleNavSegment.ɵfac = function ScaleNavSegment_Factory(t) { return new (t || ScaleNavSegment)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleNavSegment.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleNavSegment, selectors: [["scale-nav-segment"]], inputs: { active: "active", href: "href", isActive: "isActive" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleNavSegment_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleNavSegment, [{
        type: Component,
        args: [{
                selector: 'scale-nav-segment',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['active', 'href', 'isActive']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleNavSegment;
}());
var ScaleNotificationBadge = /** @class */ (function () {
    function ScaleNotificationBadge(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleNotificationBadge.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleNotificationBadge = __decorate([
        ProxyCmp({
            inputs: ['clickHandler', 'label', 'maxCharacters', 'type']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleNotificationBadge);
ScaleNotificationBadge.ɵfac = function ScaleNotificationBadge_Factory(t) { return new (t || ScaleNotificationBadge)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleNotificationBadge.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleNotificationBadge, selectors: [["scale-notification-badge"]], inputs: { clickHandler: "clickHandler", label: "label", maxCharacters: "maxCharacters", type: "type" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleNotificationBadge_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleNotificationBadge, [{
        type: Component,
        args: [{
                selector: 'scale-notification-badge',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['clickHandler', 'label', 'maxCharacters', 'type']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleNotificationBadge;
}());
var ScaleNotificationBanner = /** @class */ (function () {
    function ScaleNotificationBanner(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-close']);
    }
    /** @nocollapse */
    ScaleNotificationBanner.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleNotificationBanner = __decorate([
        ProxyCmp({
            inputs: ['autoHide', 'autoHideDuration', 'dismissible', 'href', 'opened', 'variant'],
            methods: ['open']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleNotificationBanner);
ScaleNotificationBanner.ɵfac = function ScaleNotificationBanner_Factory(t) { return new (t || ScaleNotificationBanner)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleNotificationBanner.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleNotificationBanner, selectors: [["scale-notification-banner"]], inputs: { autoHide: "autoHide", autoHideDuration: "autoHideDuration", dismissible: "dismissible", href: "href", opened: "opened", variant: "variant" }, outputs: { "scale-close": "scale-close" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleNotificationBanner_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleNotificationBanner, [{
        type: Component,
        args: [{
                selector: 'scale-notification-banner',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['autoHide', 'autoHideDuration', 'dismissible', 'href', 'opened', 'variant'],
                outputs: ['scale-close']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleNotificationBanner;
}());
var ScaleNotificationMessage = /** @class */ (function () {
    function ScaleNotificationMessage(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-close']);
    }
    /** @nocollapse */
    ScaleNotificationMessage.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleNotificationMessage = __decorate([
        ProxyCmp({
            inputs: ['autoHide', 'autoHideDuration', 'dismissible', 'opened', 'variant'],
            methods: ['open']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleNotificationMessage);
ScaleNotificationMessage.ɵfac = function ScaleNotificationMessage_Factory(t) { return new (t || ScaleNotificationMessage)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleNotificationMessage.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleNotificationMessage, selectors: [["scale-notification-message"]], inputs: { autoHide: "autoHide", autoHideDuration: "autoHideDuration", dismissible: "dismissible", opened: "opened", variant: "variant" }, outputs: { "scale-close": "scale-close" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleNotificationMessage_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleNotificationMessage, [{
        type: Component,
        args: [{
                selector: 'scale-notification-message',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['autoHide', 'autoHideDuration', 'dismissible', 'opened', 'variant'],
                outputs: ['scale-close']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleNotificationMessage;
}());
var ScaleNotificationToast = /** @class */ (function () {
    function ScaleNotificationToast(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleNotificationToast.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleNotificationToast = __decorate([
        ProxyCmp({
            inputs: ['alignment', 'animated', 'autoHide', 'autoHideDuration', 'fadeDuration', 'href', 'opened', 'positionHorizontal', 'positionVertical', 'story', 'styles', 'variant'],
            methods: ['open']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleNotificationToast);
ScaleNotificationToast.ɵfac = function ScaleNotificationToast_Factory(t) { return new (t || ScaleNotificationToast)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleNotificationToast.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleNotificationToast, selectors: [["scale-notification-toast"]], inputs: { alignment: "alignment", animated: "animated", autoHide: "autoHide", autoHideDuration: "autoHideDuration", fadeDuration: "fadeDuration", href: "href", opened: "opened", positionHorizontal: "positionHorizontal", positionVertical: "positionVertical", story: "story", styles: "styles", variant: "variant" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleNotificationToast_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleNotificationToast, [{
        type: Component,
        args: [{
                selector: 'scale-notification-toast',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['alignment', 'animated', 'autoHide', 'autoHideDuration', 'fadeDuration', 'href', 'opened', 'positionHorizontal', 'positionVertical', 'story', 'styles', 'variant']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleNotificationToast;
}());
var ScalePagination = /** @class */ (function () {
    function ScalePagination(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-pagination', 'scalePagination']);
    }
    /** @nocollapse */
    ScalePagination.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScalePagination = __decorate([
        ProxyCmp({
            inputs: ['ariaLabelFirstPage', 'ariaLabelLastPage', 'ariaLabelNextPage', 'ariaLabelPreviousPage', 'hideBorder', 'hideBorders', 'pageSize', 'size', 'small', 'startElement', 'styles', 'totalElements']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScalePagination);
ScalePagination.ɵfac = function ScalePagination_Factory(t) { return new (t || ScalePagination)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScalePagination.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScalePagination, selectors: [["scale-pagination"]], inputs: { ariaLabelFirstPage: "ariaLabelFirstPage", ariaLabelLastPage: "ariaLabelLastPage", ariaLabelNextPage: "ariaLabelNextPage", ariaLabelPreviousPage: "ariaLabelPreviousPage", hideBorder: "hideBorder", hideBorders: "hideBorders", pageSize: "pageSize", size: "size", small: "small", startElement: "startElement", styles: "styles", totalElements: "totalElements" }, outputs: { "scale-pagination": "scale-pagination", scalePagination: "scalePagination" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScalePagination_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScalePagination, [{
        type: Component,
        args: [{
                selector: 'scale-pagination',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['ariaLabelFirstPage', 'ariaLabelLastPage', 'ariaLabelNextPage', 'ariaLabelPreviousPage', 'hideBorder', 'hideBorders', 'pageSize', 'size', 'small', 'startElement', 'styles', 'totalElements'],
                outputs: ['scale-pagination', 'scalePagination']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScalePagination;
}());
var ScaleProgressBar = /** @class */ (function () {
    function ScaleProgressBar(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleProgressBar.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleProgressBar = __decorate([
        ProxyCmp({
            inputs: ['busy', 'customColor', 'disabled', 'hasError', 'icon', 'label', 'mute', 'percentage', 'progressBarId', 'showStatus', 'statusDescription', 'statusInside', 'strokeWidth', 'styles']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleProgressBar);
ScaleProgressBar.ɵfac = function ScaleProgressBar_Factory(t) { return new (t || ScaleProgressBar)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleProgressBar.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleProgressBar, selectors: [["scale-progress-bar"]], inputs: { busy: "busy", customColor: "customColor", disabled: "disabled", hasError: "hasError", icon: "icon", label: "label", mute: "mute", percentage: "percentage", progressBarId: "progressBarId", showStatus: "showStatus", statusDescription: "statusDescription", statusInside: "statusInside", strokeWidth: "strokeWidth", styles: "styles" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleProgressBar_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleProgressBar, [{
        type: Component,
        args: [{
                selector: 'scale-progress-bar',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['busy', 'customColor', 'disabled', 'hasError', 'icon', 'label', 'mute', 'percentage', 'progressBarId', 'showStatus', 'statusDescription', 'statusInside', 'strokeWidth', 'styles']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleProgressBar;
}());
var ScaleRadioButton = /** @class */ (function () {
    function ScaleRadioButton(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-change', 'scaleChange']);
    }
    /** @nocollapse */
    ScaleRadioButton.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleRadioButton = __decorate([
        ProxyCmp({
            inputs: ['checked', 'disabled', 'helperText', 'inputId', 'invalid', 'label', 'name', 'status', 'styles', 'value']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleRadioButton);
ScaleRadioButton.ɵfac = function ScaleRadioButton_Factory(t) { return new (t || ScaleRadioButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleRadioButton.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleRadioButton, selectors: [["scale-radio-button"]], inputs: { checked: "checked", disabled: "disabled", helperText: "helperText", inputId: "inputId", invalid: "invalid", label: "label", name: "name", status: "status", styles: "styles", value: "value" }, outputs: { "scale-change": "scale-change", scaleChange: "scaleChange" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleRadioButton_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleRadioButton, [{
        type: Component,
        args: [{
                selector: 'scale-radio-button',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['checked', 'disabled', 'helperText', 'inputId', 'invalid', 'label', 'name', 'status', 'styles', 'value'],
                outputs: ['scale-change', 'scaleChange']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleRadioButton;
}());
var ScaleRadioButtonGroup = /** @class */ (function () {
    function ScaleRadioButtonGroup(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleRadioButtonGroup.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleRadioButtonGroup = __decorate([
        ProxyCmp({
            inputs: ['helperText', 'invalid', 'label', 'status']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleRadioButtonGroup);
ScaleRadioButtonGroup.ɵfac = function ScaleRadioButtonGroup_Factory(t) { return new (t || ScaleRadioButtonGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleRadioButtonGroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleRadioButtonGroup, selectors: [["scale-radio-button-group"]], inputs: { helperText: "helperText", invalid: "invalid", label: "label", status: "status" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleRadioButtonGroup_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleRadioButtonGroup, [{
        type: Component,
        args: [{
                selector: 'scale-radio-button-group',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['helperText', 'invalid', 'label', 'status']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleRadioButtonGroup;
}());
var ScaleRatingStars = /** @class */ (function () {
    function ScaleRatingStars(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-change', 'scaleChange']);
    }
    /** @nocollapse */
    ScaleRatingStars.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleRatingStars = __decorate([
        ProxyCmp({
            inputs: ['ariaLabelTranslation', 'disabled', 'hideLabel', 'infoText', 'label', 'max', 'maxRating', 'minRating', 'rating', 'readonly', 'size', 'starSize']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleRatingStars);
ScaleRatingStars.ɵfac = function ScaleRatingStars_Factory(t) { return new (t || ScaleRatingStars)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleRatingStars.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleRatingStars, selectors: [["scale-rating-stars"]], inputs: { ariaLabelTranslation: "ariaLabelTranslation", disabled: "disabled", hideLabel: "hideLabel", infoText: "infoText", label: "label", max: "max", maxRating: "maxRating", minRating: "minRating", rating: "rating", readonly: "readonly", size: "size", starSize: "starSize" }, outputs: { "scale-change": "scale-change", scaleChange: "scaleChange" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleRatingStars_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleRatingStars, [{
        type: Component,
        args: [{
                selector: 'scale-rating-stars',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['ariaLabelTranslation', 'disabled', 'hideLabel', 'infoText', 'label', 'max', 'maxRating', 'minRating', 'rating', 'readonly', 'size', 'starSize'],
                outputs: ['scale-change', 'scaleChange']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleRatingStars;
}());
var ScaleSidebarNav = /** @class */ (function () {
    function ScaleSidebarNav(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleSidebarNav.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleSidebarNav = __decorate([
        ProxyCmp({
            inputs: ['ariaLabelSidebarNav', 'collapsible', 'collapsibleLabel', 'collapsibleMediaQuery', 'styles']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleSidebarNav);
ScaleSidebarNav.ɵfac = function ScaleSidebarNav_Factory(t) { return new (t || ScaleSidebarNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleSidebarNav.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleSidebarNav, selectors: [["scale-sidebar-nav"]], inputs: { ariaLabelSidebarNav: "ariaLabelSidebarNav", collapsible: "collapsible", collapsibleLabel: "collapsibleLabel", collapsibleMediaQuery: "collapsibleMediaQuery", styles: "styles" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleSidebarNav_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleSidebarNav, [{
        type: Component,
        args: [{
                selector: 'scale-sidebar-nav',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['ariaLabelSidebarNav', 'collapsible', 'collapsibleLabel', 'collapsibleMediaQuery', 'styles']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleSidebarNav;
}());
var ScaleSidebarNavCollapsible = /** @class */ (function () {
    function ScaleSidebarNavCollapsible(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleSidebarNavCollapsible.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleSidebarNavCollapsible = __decorate([
        ProxyCmp({
            inputs: ['active', 'bold', 'condensed', 'expanded', 'href', 'label', 'nestingLevel', 'styles', 'tag']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleSidebarNavCollapsible);
ScaleSidebarNavCollapsible.ɵfac = function ScaleSidebarNavCollapsible_Factory(t) { return new (t || ScaleSidebarNavCollapsible)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleSidebarNavCollapsible.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleSidebarNavCollapsible, selectors: [["scale-sidebar-nav-collapsible"]], inputs: { active: "active", bold: "bold", condensed: "condensed", expanded: "expanded", href: "href", label: "label", nestingLevel: "nestingLevel", styles: "styles", tag: "tag" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleSidebarNavCollapsible_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleSidebarNavCollapsible, [{
        type: Component,
        args: [{
                selector: 'scale-sidebar-nav-collapsible',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['active', 'bold', 'condensed', 'expanded', 'href', 'label', 'nestingLevel', 'styles', 'tag']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleSidebarNavCollapsible;
}());
var ScaleSidebarNavItem = /** @class */ (function () {
    function ScaleSidebarNavItem(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleSidebarNavItem.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleSidebarNavItem = __decorate([
        ProxyCmp({
            inputs: ['active', 'bold', 'condensed', 'current', 'nestingLevel', 'styles']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleSidebarNavItem);
ScaleSidebarNavItem.ɵfac = function ScaleSidebarNavItem_Factory(t) { return new (t || ScaleSidebarNavItem)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleSidebarNavItem.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleSidebarNavItem, selectors: [["scale-sidebar-nav-item"]], inputs: { active: "active", bold: "bold", condensed: "condensed", current: "current", nestingLevel: "nestingLevel", styles: "styles" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleSidebarNavItem_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleSidebarNavItem, [{
        type: Component,
        args: [{
                selector: 'scale-sidebar-nav-item',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['active', 'bold', 'condensed', 'current', 'nestingLevel', 'styles']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleSidebarNavItem;
}());
var ScaleSlider = /** @class */ (function () {
    function ScaleSlider(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-change', 'scaleChange', 'scale-input', 'scaleInput']);
    }
    /** @nocollapse */
    ScaleSlider.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleSlider = __decorate([
        ProxyCmp({
            inputs: ['customColor', 'decimals', 'disabled', 'label', 'max', 'min', 'name', 'showValue', 'sliderId', 'step', 'styles', 'thumbLarge', 'trackSmall', 'unit', 'value']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleSlider);
ScaleSlider.ɵfac = function ScaleSlider_Factory(t) { return new (t || ScaleSlider)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleSlider.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleSlider, selectors: [["scale-slider"]], inputs: { customColor: "customColor", decimals: "decimals", disabled: "disabled", label: "label", max: "max", min: "min", name: "name", showValue: "showValue", sliderId: "sliderId", step: "step", styles: "styles", thumbLarge: "thumbLarge", trackSmall: "trackSmall", unit: "unit", value: "value" }, outputs: { "scale-change": "scale-change", scaleChange: "scaleChange", "scale-input": "scale-input", scaleInput: "scaleInput" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleSlider_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleSlider, [{
        type: Component,
        args: [{
                selector: 'scale-slider',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['customColor', 'decimals', 'disabled', 'label', 'max', 'min', 'name', 'showValue', 'sliderId', 'step', 'styles', 'thumbLarge', 'trackSmall', 'unit', 'value'],
                outputs: ['scale-change', 'scaleChange', 'scale-input', 'scaleInput']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleSlider;
}());
var ScaleSsrSlotFix = /** @class */ (function () {
    function ScaleSsrSlotFix(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleSsrSlotFix.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
ScaleSsrSlotFix.ɵfac = function ScaleSsrSlotFix_Factory(t) { return new (t || ScaleSsrSlotFix)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleSsrSlotFix.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleSsrSlotFix, selectors: [["scale-ssr-slot-fix"]], ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleSsrSlotFix_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleSsrSlotFix, [{
        type: Component,
        args: [{
                selector: 'scale-ssr-slot-fix',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>'
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleSsrSlotFix;
}());
var ScaleSwitch = /** @class */ (function () {
    function ScaleSwitch(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-change', 'scaleChange']);
    }
    /** @nocollapse */
    ScaleSwitch.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleSwitch = __decorate([
        ProxyCmp({
            inputs: ['checked', 'disabled', 'inputId', 'label', 'name', 'styles']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleSwitch);
ScaleSwitch.ɵfac = function ScaleSwitch_Factory(t) { return new (t || ScaleSwitch)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleSwitch.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleSwitch, selectors: [["scale-switch"]], inputs: { checked: "checked", disabled: "disabled", inputId: "inputId", label: "label", name: "name", styles: "styles" }, outputs: { "scale-change": "scale-change", scaleChange: "scaleChange" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleSwitch_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleSwitch, [{
        type: Component,
        args: [{
                selector: 'scale-switch',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['checked', 'disabled', 'inputId', 'label', 'name', 'styles'],
                outputs: ['scale-change', 'scaleChange']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleSwitch;
}());
var ScaleTabHeader = /** @class */ (function () {
    function ScaleTabHeader(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleTabHeader.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleTabHeader = __decorate([
        ProxyCmp({
            inputs: ['disabled', 'selected', 'size', 'small', 'styles']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleTabHeader);
ScaleTabHeader.ɵfac = function ScaleTabHeader_Factory(t) { return new (t || ScaleTabHeader)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleTabHeader.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleTabHeader, selectors: [["scale-tab-header"]], inputs: { disabled: "disabled", selected: "selected", size: "size", small: "small", styles: "styles" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleTabHeader_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleTabHeader, [{
        type: Component,
        args: [{
                selector: 'scale-tab-header',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['disabled', 'selected', 'size', 'small', 'styles']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleTabHeader;
}());
var ScaleTabNav = /** @class */ (function () {
    function ScaleTabNav(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleTabNav.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleTabNav = __decorate([
        ProxyCmp({
            inputs: ['size', 'small', 'styles']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleTabNav);
ScaleTabNav.ɵfac = function ScaleTabNav_Factory(t) { return new (t || ScaleTabNav)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleTabNav.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleTabNav, selectors: [["scale-tab-nav"]], inputs: { size: "size", small: "small", styles: "styles" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleTabNav_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleTabNav, [{
        type: Component,
        args: [{
                selector: 'scale-tab-nav',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['size', 'small', 'styles']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleTabNav;
}());
var ScaleTabPanel = /** @class */ (function () {
    function ScaleTabPanel(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleTabPanel.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleTabPanel = __decorate([
        ProxyCmp({
            inputs: ['size', 'small', 'styles']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleTabPanel);
ScaleTabPanel.ɵfac = function ScaleTabPanel_Factory(t) { return new (t || ScaleTabPanel)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleTabPanel.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleTabPanel, selectors: [["scale-tab-panel"]], inputs: { size: "size", small: "small", styles: "styles" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleTabPanel_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleTabPanel, [{
        type: Component,
        args: [{
                selector: 'scale-tab-panel',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['size', 'small', 'styles']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleTabPanel;
}());
var ScaleTable = /** @class */ (function () {
    function ScaleTable(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleTable.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleTable = __decorate([
        ProxyCmp({
            inputs: ['showSort', 'size', 'striped', 'styles']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleTable);
ScaleTable.ɵfac = function ScaleTable_Factory(t) { return new (t || ScaleTable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleTable.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleTable, selectors: [["scale-table"]], inputs: { showSort: "showSort", size: "size", striped: "striped", styles: "styles" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleTable_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleTable, [{
        type: Component,
        args: [{
                selector: 'scale-table',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['showSort', 'size', 'striped', 'styles']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleTable;
}());
var ScaleTag = /** @class */ (function () {
    function ScaleTag(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-close', 'scaleClose']);
    }
    /** @nocollapse */
    ScaleTag.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleTag = __decorate([
        ProxyCmp({
            inputs: ['disabled', 'dismissText', 'dismissable', 'href', 'size', 'styles', 'target', 'variant']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleTag);
ScaleTag.ɵfac = function ScaleTag_Factory(t) { return new (t || ScaleTag)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleTag.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleTag, selectors: [["scale-tag"]], inputs: { disabled: "disabled", dismissText: "dismissText", dismissable: "dismissable", href: "href", size: "size", styles: "styles", target: "target", variant: "variant" }, outputs: { "scale-close": "scale-close", scaleClose: "scaleClose" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleTag_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleTag, [{
        type: Component,
        args: [{
                selector: 'scale-tag',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['disabled', 'dismissText', 'dismissable', 'href', 'size', 'styles', 'target', 'variant'],
                outputs: ['scale-close', 'scaleClose']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleTag;
}());
var ScaleTextField = /** @class */ (function () {
    function ScaleTextField(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-input', 'scaleInput', 'scale-change', 'scaleChange', 'scale-focus', 'scaleFocus', 'scale-blur', 'scaleBlur', 'scale-keydown', 'scaleKeydown']);
    }
    /** @nocollapse */
    ScaleTextField.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleTextField = __decorate([
        ProxyCmp({
            inputs: ['counter', 'disabled', 'helperText', 'inputAutofocus', 'inputId', 'invalid', 'label', 'list', 'max', 'maxLength', 'min', 'minLength', 'name', 'placeholder', 'readonly', 'required', 'size', 'status', 'step', 'styles', 'transparent', 'type', 'value']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleTextField);
ScaleTextField.ɵfac = function ScaleTextField_Factory(t) { return new (t || ScaleTextField)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleTextField.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleTextField, selectors: [["scale-text-field"]], inputs: { counter: "counter", disabled: "disabled", helperText: "helperText", inputAutofocus: "inputAutofocus", inputId: "inputId", invalid: "invalid", label: "label", list: "list", max: "max", maxLength: "maxLength", min: "min", minLength: "minLength", name: "name", placeholder: "placeholder", readonly: "readonly", required: "required", size: "size", status: "status", step: "step", styles: "styles", transparent: "transparent", type: "type", value: "value" }, outputs: { "scale-input": "scale-input", scaleInput: "scaleInput", "scale-change": "scale-change", scaleChange: "scaleChange", "scale-focus": "scale-focus", scaleFocus: "scaleFocus", "scale-blur": "scale-blur", scaleBlur: "scaleBlur", "scale-keydown": "scale-keydown", scaleKeydown: "scaleKeydown" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleTextField_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleTextField, [{
        type: Component,
        args: [{
                selector: 'scale-text-field',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['counter', 'disabled', 'helperText', 'inputAutofocus', 'inputId', 'invalid', 'label', 'list', 'max', 'maxLength', 'min', 'minLength', 'name', 'placeholder', 'readonly', 'required', 'size', 'status', 'step', 'styles', 'transparent', 'type', 'value'],
                outputs: ['scale-input', 'scaleInput', 'scale-change', 'scaleChange', 'scale-focus', 'scaleFocus', 'scale-blur', 'scaleBlur', 'scale-keydown', 'scaleKeydown']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleTextField;
}());
var ScaleTextarea = /** @class */ (function () {
    function ScaleTextarea(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-input', 'scaleInput', 'scale-change', 'scaleChange', 'scale-focus', 'scaleFocus', 'scale-blur', 'scaleBlur', 'scale-keydown', 'scaleKeyDown']);
    }
    /** @nocollapse */
    ScaleTextarea.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleTextarea = __decorate([
        ProxyCmp({
            inputs: ['cols', 'counter', 'disabled', 'helperText', 'inputAutofocus', 'inputId', 'invalid', 'label', 'maxLength', 'minLength', 'name', 'placeholder', 'readonly', 'required', 'resize', 'rows', 'status', 'styles', 'transparent', 'value']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleTextarea);
ScaleTextarea.ɵfac = function ScaleTextarea_Factory(t) { return new (t || ScaleTextarea)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleTextarea.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleTextarea, selectors: [["scale-textarea"]], inputs: { cols: "cols", counter: "counter", disabled: "disabled", helperText: "helperText", inputAutofocus: "inputAutofocus", inputId: "inputId", invalid: "invalid", label: "label", maxLength: "maxLength", minLength: "minLength", name: "name", placeholder: "placeholder", readonly: "readonly", required: "required", resize: "resize", rows: "rows", status: "status", styles: "styles", transparent: "transparent", value: "value" }, outputs: { "scale-input": "scale-input", scaleInput: "scaleInput", "scale-change": "scale-change", scaleChange: "scaleChange", "scale-focus": "scale-focus", scaleFocus: "scaleFocus", "scale-blur": "scale-blur", scaleBlur: "scaleBlur", "scale-keydown": "scale-keydown", scaleKeyDown: "scaleKeyDown" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleTextarea_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleTextarea, [{
        type: Component,
        args: [{
                selector: 'scale-textarea',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['cols', 'counter', 'disabled', 'helperText', 'inputAutofocus', 'inputId', 'invalid', 'label', 'maxLength', 'minLength', 'name', 'placeholder', 'readonly', 'required', 'resize', 'rows', 'status', 'styles', 'transparent', 'value'],
                outputs: ['scale-input', 'scaleInput', 'scale-change', 'scaleChange', 'scale-focus', 'scaleFocus', 'scale-blur', 'scaleBlur', 'scale-keydown', 'scaleKeyDown']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleTextarea;
}());
var ScaleToast = /** @class */ (function () {
    function ScaleToast(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
    }
    /** @nocollapse */
    ScaleToast.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleToast = __decorate([
        ProxyCmp({
            inputs: ['animated', 'autoHide', 'fadeDuration', 'opened', 'positionRight', 'positionTop', 'size', 'styles', 'time', 'variant'],
            methods: ['open']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleToast);
ScaleToast.ɵfac = function ScaleToast_Factory(t) { return new (t || ScaleToast)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleToast.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleToast, selectors: [["scale-toast"]], inputs: { animated: "animated", autoHide: "autoHide", fadeDuration: "fadeDuration", opened: "opened", positionRight: "positionRight", positionTop: "positionTop", size: "size", styles: "styles", time: "time", variant: "variant" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleToast_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleToast, [{
        type: Component,
        args: [{
                selector: 'scale-toast',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['animated', 'autoHide', 'fadeDuration', 'opened', 'positionRight', 'positionTop', 'size', 'styles', 'time', 'variant']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleToast;
}());
var ScaleToggleButton = /** @class */ (function () {
    function ScaleToggleButton(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-click', 'scaleClick']);
    }
    /** @nocollapse */
    ScaleToggleButton.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleToggleButton = __decorate([
        ProxyCmp({
            inputs: ['ariaDescriptionTranslation', 'ariaLabelToggleButton', 'ariaLangDeselected', 'ariaLangSelected', 'background', 'colorScheme', 'disabled', 'hideBorder', 'iconOnly', 'iconPosition', 'position', 'radius', 'selected', 'size', 'styles', 'toggleButtonId', 'variant'],
            methods: ['setFocus']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleToggleButton);
ScaleToggleButton.ɵfac = function ScaleToggleButton_Factory(t) { return new (t || ScaleToggleButton)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleToggleButton.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleToggleButton, selectors: [["scale-toggle-button"]], inputs: { ariaDescriptionTranslation: "ariaDescriptionTranslation", ariaLabelToggleButton: "ariaLabelToggleButton", ariaLangDeselected: "ariaLangDeselected", ariaLangSelected: "ariaLangSelected", background: "background", colorScheme: "colorScheme", disabled: "disabled", hideBorder: "hideBorder", iconOnly: "iconOnly", iconPosition: "iconPosition", position: "position", radius: "radius", selected: "selected", size: "size", styles: "styles", toggleButtonId: "toggleButtonId", variant: "variant" }, outputs: { "scale-click": "scale-click", scaleClick: "scaleClick" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleToggleButton_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleToggleButton, [{
        type: Component,
        args: [{
                selector: 'scale-toggle-button',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['ariaDescriptionTranslation', 'ariaLabelToggleButton', 'ariaLangDeselected', 'ariaLangSelected', 'background', 'colorScheme', 'disabled', 'hideBorder', 'iconOnly', 'iconPosition', 'position', 'radius', 'selected', 'size', 'styles', 'toggleButtonId', 'variant'],
                outputs: ['scale-click', 'scaleClick']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleToggleButton;
}());
var ScaleToggleGroup = /** @class */ (function () {
    function ScaleToggleGroup(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-change', 'scaleChange']);
    }
    /** @nocollapse */
    ScaleToggleGroup.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleToggleGroup = __decorate([
        ProxyCmp({
            inputs: ['ariaLabelTranslation', 'background', 'colorScheme', 'disabled', 'fullWidth', 'hideBorder', 'singleSelect', 'size', 'styles', 'variant']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleToggleGroup);
ScaleToggleGroup.ɵfac = function ScaleToggleGroup_Factory(t) { return new (t || ScaleToggleGroup)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleToggleGroup.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleToggleGroup, selectors: [["scale-toggle-group"]], inputs: { ariaLabelTranslation: "ariaLabelTranslation", background: "background", colorScheme: "colorScheme", disabled: "disabled", fullWidth: "fullWidth", hideBorder: "hideBorder", singleSelect: "singleSelect", size: "size", styles: "styles", variant: "variant" }, outputs: { "scale-change": "scale-change", scaleChange: "scaleChange" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleToggleGroup_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleToggleGroup, [{
        type: Component,
        args: [{
                selector: 'scale-toggle-group',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['ariaLabelTranslation', 'background', 'colorScheme', 'disabled', 'fullWidth', 'hideBorder', 'singleSelect', 'size', 'styles', 'variant'],
                outputs: ['scale-change', 'scaleChange']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleToggleGroup;
}());
var ScaleTooltip = /** @class */ (function () {
    function ScaleTooltip(c, r, z) {
        this.z = z;
        c.detach();
        this.el = r.nativeElement;
        proxyOutputs(this, this.el, ['scale-before-show', 'scale-show', 'scale-before-hide', 'scale-hide']);
    }
    /** @nocollapse */
    ScaleTooltip.ctorParameters = function () { return [
        { type: ChangeDetectorRef },
        { type: ElementRef },
        { type: NgZone }
    ]; };
    ScaleTooltip = __decorate([
        ProxyCmp({
            inputs: ['content', 'disabled', 'distance', 'flip', 'open', 'placement', 'preventOverflow', 'skidding', 'styles', 'trigger'],
            methods: ['showTooltip', 'hideTooltip']
        }),
        __metadata("design:paramtypes", [ChangeDetectorRef, ElementRef, NgZone])
    ], ScaleTooltip);
ScaleTooltip.ɵfac = function ScaleTooltip_Factory(t) { return new (t || ScaleTooltip)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };
ScaleTooltip.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: ScaleTooltip, selectors: [["scale-tooltip"]], inputs: { content: "content", disabled: "disabled", distance: "distance", flip: "flip", open: "open", placement: "placement", preventOverflow: "preventOverflow", skidding: "skidding", styles: "styles", trigger: "trigger" }, outputs: { "scale-before-show": "scale-before-show", "scale-show": "scale-show", "scale-before-hide": "scale-before-hide", "scale-hide": "scale-hide" }, ngContentSelectors: _c0, decls: 1, vars: 0, template: function ScaleTooltip_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
    } }, encapsulation: 2, changeDetection: 0 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ScaleTooltip, [{
        type: Component,
        args: [{
                selector: 'scale-tooltip',
                changeDetection: ChangeDetectionStrategy.OnPush,
                template: '<ng-content></ng-content>',
                inputs: ['content', 'disabled', 'distance', 'flip', 'open', 'placement', 'preventOverflow', 'skidding', 'styles', 'trigger'],
                outputs: ['scale-before-show', 'scale-show', 'scale-before-hide', 'scale-hide']
            }]
    }], function () { return [{ type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.ElementRef }, { type: ɵngcc0.NgZone }]; }, null); })();
    return ScaleTooltip;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var ValueAccessor = /** @class */ (function () {
    function ValueAccessor(el) {
        this.el = el;
        this.onChange = (/**
         * @return {?}
         */
        function () { });
        this.onTouched = (/**
         * @return {?}
         */
        function () { });
    }
    /**
     * @param {?} value
     * @return {?}
     */
    ValueAccessor.prototype.writeValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.el.nativeElement.value = this.lastValue = value == null ? '' : value;
    };
    /**
     * @param {?} value
     * @return {?}
     */
    ValueAccessor.prototype.handleChangeEvent = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        if (value !== this.lastValue) {
            this.lastValue = value;
            this.onChange(value);
        }
    };
    /**
     * @return {?}
     */
    ValueAccessor.prototype._handleBlurEvent = /**
     * @return {?}
     */
    function () {
        this.onTouched();
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    ValueAccessor.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onChange = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    ValueAccessor.prototype.registerOnTouched = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this.onTouched = fn;
    };
    /**
     * @param {?} isDisabled
     * @return {?}
     */
    ValueAccessor.prototype.setDisabledState = /**
     * @param {?} isDisabled
     * @return {?}
     */
    function (isDisabled) {
        this.el.nativeElement.disabled = isDisabled;
    };
    /** @nocollapse */
    ValueAccessor.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
    ValueAccessor.propDecorators = {
        _handleBlurEvent: [{ type: HostListener, args: ['focusout',] }]
    };
ValueAccessor.ɵfac = function ValueAccessor_Factory(t) { return new (t || ValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
ValueAccessor.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: ValueAccessor, hostBindings: function ValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("focusout", function ValueAccessor_focusout_HostBindingHandler() { return ctx._handleBlurEvent(); });
    } } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ValueAccessor, [{
        type: Directive,
        args: [{}]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, { _handleBlurEvent: [{
            type: HostListener,
            args: ['focusout']
        }] }); })();
    return ValueAccessor;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var BooleanValueAccessor = /** @class */ (function (_super) {
    __extends(BooleanValueAccessor, _super);
    function BooleanValueAccessor(el) {
        return _super.call(this, el) || this;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    BooleanValueAccessor.prototype.writeValue = /**
     * @param {?} value
     * @return {?}
     */
    function (value) {
        this.el.nativeElement.checked = this.lastValue = value == null ? false : value;
    };
    /** @nocollapse */
    BooleanValueAccessor.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
BooleanValueAccessor.ɵfac = function BooleanValueAccessor_Factory(t) { return new (t || BooleanValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
BooleanValueAccessor.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: BooleanValueAccessor, selectors: [["scale-input", "type", "checkbox"]], hostBindings: function BooleanValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("scaleChange", function BooleanValueAccessor_scaleChange_HostBindingHandler($event) { return ctx.handleChangeEvent($event.target.checked); });
    } }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: BooleanValueAccessor,
                multi: true
            }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(BooleanValueAccessor, [{
        type: Directive,
        args: [{
                /* tslint:disable-next-line:directive-selector */
                selector: 'scale-input[type=checkbox]',
                host: {
                    '(scaleChange)': 'handleChangeEvent($event.target.checked)'
                },
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: BooleanValueAccessor,
                        multi: true
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();
    return BooleanValueAccessor;
}(ValueAccessor));

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var NumericValueAccessor = /** @class */ (function (_super) {
    __extends(NumericValueAccessor, _super);
    function NumericValueAccessor(el) {
        return _super.call(this, el) || this;
    }
    /**
     * @param {?} fn
     * @return {?}
     */
    NumericValueAccessor.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        _super.prototype.registerOnChange.call(this, (/**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            fn(value === '' ? null : parseFloat(value));
        }));
    };
    /** @nocollapse */
    NumericValueAccessor.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
NumericValueAccessor.ɵfac = function NumericValueAccessor_Factory(t) { return new (t || NumericValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
NumericValueAccessor.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: NumericValueAccessor, selectors: [["scale-slider"]], hostBindings: function NumericValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("scaleChange", function NumericValueAccessor_scaleChange_HostBindingHandler($event) { return ctx.handleChangeEvent($event.target.value); });
    } }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: NumericValueAccessor,
                multi: true
            }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NumericValueAccessor, [{
        type: Directive,
        args: [{
                /* tslint:disable-next-line:directive-selector */
                selector: 'scale-slider',
                host: {
                    '(scaleChange)': 'handleChangeEvent($event.target.value)'
                },
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: NumericValueAccessor,
                        multi: true
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();
    return NumericValueAccessor;
}(ValueAccessor));

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var RadioValueAccessor = /** @class */ (function (_super) {
    __extends(RadioValueAccessor, _super);
    function RadioValueAccessor(el) {
        return _super.call(this, el) || this;
    }
    /** @nocollapse */
    RadioValueAccessor.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
RadioValueAccessor.ɵfac = function RadioValueAccessor_Factory(t) { return new (t || RadioValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
RadioValueAccessor.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: RadioValueAccessor, selectors: [["scale-input", "type", "radio"]], hostBindings: function RadioValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("scaleChange", function RadioValueAccessor_scaleChange_HostBindingHandler($event) { return ctx.handleChangeEvent($event.target.checked); });
    } }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: RadioValueAccessor,
                multi: true
            }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(RadioValueAccessor, [{
        type: Directive,
        args: [{
                /* tslint:disable-next-line:directive-selector */
                selector: 'scale-input[type=radio]',
                host: {
                    '(scaleChange)': 'handleChangeEvent($event.target.checked)'
                },
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: RadioValueAccessor,
                        multi: true
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();
    return RadioValueAccessor;
}(ValueAccessor));

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SelectValueAccessor = /** @class */ (function (_super) {
    __extends(SelectValueAccessor, _super);
    function SelectValueAccessor(el) {
        return _super.call(this, el) || this;
    }
    /** @nocollapse */
    SelectValueAccessor.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
SelectValueAccessor.ɵfac = function SelectValueAccessor_Factory(t) { return new (t || SelectValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
SelectValueAccessor.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: SelectValueAccessor, selectors: [["scale-input", "type", "select"]], hostBindings: function SelectValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("scaleChange", function SelectValueAccessor_scaleChange_HostBindingHandler($event) { return ctx.handleChangeEvent($event.target.value); });
    } }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: SelectValueAccessor,
                multi: true
            }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(SelectValueAccessor, [{
        type: Directive,
        args: [{
                /* tslint:disable-next-line:directive-selector */
                selector: 'scale-input[type=select]',
                host: {
                    '(scaleChange)': 'handleChangeEvent($event.target.value)'
                },
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: SelectValueAccessor,
                        multi: true
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();
    return SelectValueAccessor;
}(ValueAccessor));

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var TextValueAccessor = /** @class */ (function (_super) {
    __extends(TextValueAccessor, _super);
    function TextValueAccessor(el) {
        return _super.call(this, el) || this;
    }
    /** @nocollapse */
    TextValueAccessor.ctorParameters = function () { return [
        { type: ElementRef }
    ]; };
TextValueAccessor.ɵfac = function TextValueAccessor_Factory(t) { return new (t || TextValueAccessor)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef)); };
TextValueAccessor.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: TextValueAccessor, selectors: [["scale-input"]], hostBindings: function TextValueAccessor_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("scaleChange", function TextValueAccessor_scaleChange_HostBindingHandler($event) { return ctx.handleChangeEvent($event.target.value); });
    } }, features: [ɵngcc0.ɵɵProvidersFeature([
            {
                provide: NG_VALUE_ACCESSOR,
                useExisting: TextValueAccessor,
                multi: true
            }
        ]), ɵngcc0.ɵɵInheritDefinitionFeature] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(TextValueAccessor, [{
        type: Directive,
        args: [{
                /* tslint:disable-next-line:directive-selector */
                selector: 'scale-input',
                host: {
                    '(scaleChange)': 'handleChangeEvent($event.target.value)'
                },
                providers: [
                    {
                        provide: NG_VALUE_ACCESSOR,
                        useExisting: TextValueAccessor,
                        multi: true
                    }
                ]
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }]; }, null); })();
    return TextValueAccessor;
}(ValueAccessor));

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
defineCustomElements(window);
/** @type {?} */
var DECLARATIONS = [
    // proxies
    AppLogo,
    AppMegaMenu,
    AppNavigationMainMobile,
    AppNavigationSectorMobile,
    ScaleAccordion,
    ScaleAlert,
    ScaleAppHeader,
    ScaleAppShell,
    ScaleCallout,
    ScaleBreadcrumb,
    ScaleButton,
    ScaleCard,
    ScaleCarousel,
    ScaleChartStackCard,
    ScaleCheckbox,
    ScaleCollapsible,
    ScaleDataGrid,
    ScaleDatePicker,
    ScaleDivider,
    ScaleIcon,
    ScaleInput,
    ScaleLink,
    ScaleList,
    ScaleListItem,
    ScaleLoadingSpinner,
    ScaleMenuFlyout,
    ScaleMenuFlyoutDivider,
    ScaleMenuFlyoutItem,
    ScaleMenuFlyoutList,
    ScaleModal,
    ScalePagination,
    ScaleProgressBar,
    ScaleRadioButton,
    ScaleRatingStars,
    ScaleSidebarNav,
    ScaleSidebarNavCollapsible,
    ScaleSidebarNavItem,
    ScaleSlider,
    ScaleSsrSlotFix,
    ScaleSwitch,
    ScaleTabHeader,
    ScaleTabNav,
    ScaleTabPanel,
    ScaleTable,
    ScaleTag,
    ScaleTextField,
    ScaleToast,
    // Value Accessors
    BooleanValueAccessor,
    NumericValueAccessor,
    RadioValueAccessor,
    SelectValueAccessor,
    TextValueAccessor,
];
var ComponentLibraryModule = /** @class */ (function () {
    function ComponentLibraryModule() {
    }
ComponentLibraryModule.ɵfac = function ComponentLibraryModule_Factory(t) { return new (t || ComponentLibraryModule)(); };
ComponentLibraryModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ComponentLibraryModule });
ComponentLibraryModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ providers: [], imports: [[]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ComponentLibraryModule, [{
        type: NgModule,
        args: [{
                declarations: DECLARATIONS,
                exports: DECLARATIONS,
                imports: [],
                providers: []
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ComponentLibraryModule, { declarations: [AppLogo, AppMegaMenu, AppNavigationMainMobile, AppNavigationSectorMobile, ScaleAccordion, ScaleAlert, ScaleAppHeader, ScaleAppShell, ScaleCallout, ScaleBreadcrumb, ScaleButton, ScaleCard, ScaleCarousel, ScaleChartStackCard, ScaleCheckbox, ScaleCollapsible, ScaleDataGrid, ScaleDatePicker, ScaleDivider, ScaleIcon, ScaleInput, ScaleLink, ScaleList, ScaleListItem, ScaleLoadingSpinner, ScaleMenuFlyout, ScaleMenuFlyoutDivider, ScaleMenuFlyoutItem, ScaleMenuFlyoutList, ScaleModal, ScalePagination, ScaleProgressBar, ScaleRadioButton, ScaleRatingStars, ScaleSidebarNav, ScaleSidebarNavCollapsible, ScaleSidebarNavItem, ScaleSlider, ScaleSsrSlotFix, ScaleSwitch, ScaleTabHeader, ScaleTabNav, ScaleTabPanel, ScaleTable, ScaleTag, ScaleTextField, ScaleToast, BooleanValueAccessor, NumericValueAccessor, RadioValueAccessor, SelectValueAccessor, TextValueAccessor], exports: [AppLogo, AppMegaMenu, AppNavigationMainMobile, AppNavigationSectorMobile, ScaleAccordion, ScaleAlert, ScaleAppHeader, ScaleAppShell, ScaleCallout, ScaleBreadcrumb, ScaleButton, ScaleCard, ScaleCarousel, ScaleChartStackCard, ScaleCheckbox, ScaleCollapsible, ScaleDataGrid, ScaleDatePicker, ScaleDivider, ScaleIcon, ScaleInput, ScaleLink, ScaleList, ScaleListItem, ScaleLoadingSpinner, ScaleMenuFlyout, ScaleMenuFlyoutDivider, ScaleMenuFlyoutItem, ScaleMenuFlyoutList, ScaleModal, ScalePagination, ScaleProgressBar, ScaleRadioButton, ScaleRatingStars, ScaleSidebarNav, ScaleSidebarNavCollapsible, ScaleSidebarNavItem, ScaleSlider, ScaleSsrSlotFix, ScaleSwitch, ScaleTabHeader, ScaleTabNav, ScaleTabPanel, ScaleTable, ScaleTag, ScaleTextField, ScaleToast, BooleanValueAccessor, NumericValueAccessor, RadioValueAccessor, SelectValueAccessor, TextValueAccessor] }); })();
    return ComponentLibraryModule;
}());

export { AppLogo, AppMegaMenu, AppNavigationMainMobile, AppNavigationSectorMobile, AppNavigationUserMenu, ComponentLibraryModule, ScaleAccordion, ScaleAlert, ScaleAppFooter, ScaleAppHeader, ScaleAppShell, ScaleBreadcrumb, ScaleButton, ScaleCallout, ScaleCard, ScaleCarousel, ScaleChartStackCard, ScaleCheckbox, ScaleCheckboxGroup, ScaleCollapsible, ScaleDataGrid, ScaleDatePicker, ScaleDivider, ScaleDropdown, ScaleGrid, ScaleGridItem, ScaleIcon, ScaleIconActionAdd, ScaleIconActionAddCard, ScaleIconActionAutoLogin, ScaleIconActionBackspace, ScaleIconActionChangelog, ScaleIconActionCircleAdd, ScaleIconActionCircleClose, ScaleIconActionClose, ScaleIconActionCopyPaste, ScaleIconActionCutPaste, ScaleIconActionDisabledMicrophone, ScaleIconActionDownload, ScaleIconActionDragAndDrop, ScaleIconActionEdit, ScaleIconActionFastForward, ScaleIconActionFavorite, ScaleIconActionFilter, ScaleIconActionForward, ScaleIconActionFullScreen, ScaleIconActionHidePassword, ScaleIconActionIndeterminate, ScaleIconActionInstall, ScaleIconActionLink, ScaleIconActionLogout, ScaleIconActionLoop, ScaleIconActionMenu, ScaleIconActionMicrophone, ScaleIconActionMinimizeScreen, ScaleIconActionMore, ScaleIconActionMove, ScaleIconActionMute, ScaleIconActionNotification, ScaleIconActionPause, ScaleIconActionPin, ScaleIconActionPlay, ScaleIconActionPopUpWindow, ScaleIconActionPrint, ScaleIconActionRandom, ScaleIconActionRefresh, ScaleIconActionRemove, ScaleIconActionRestart, ScaleIconActionSearch, ScaleIconActionShoppingCart, ScaleIconActionShowPassword, ScaleIconActionSort, ScaleIconActionSoundOn, ScaleIconActionStreamOn, ScaleIconActionSuccess, ScaleIconActionThumbsDown, ScaleIconActionThumbsUp, ScaleIconActionTilesAdd, ScaleIconActionUpload, ScaleIconActionVolumeDown, ScaleIconActionVolumeUp, ScaleIconActionZoomIn, ScaleIconActionZoomOut, ScaleIconAlertCompliance, ScaleIconAlertError, ScaleIconAlertHelp, ScaleIconAlertImprintDataprivacy, ScaleIconAlertInformation, ScaleIconAlertLegal, ScaleIconAlertSecurity, ScaleIconAlertSuccess, ScaleIconAlertWarning, ScaleIconCommunicationCallIncoming, ScaleIconCommunicationCallOutgoing, ScaleIconCommunicationChat, ScaleIconCommunicationEmail, ScaleIconCommunicationEndCall, ScaleIconCommunicationFeedback, ScaleIconCommunicationMessage, ScaleIconCommunicationPhoneNumber, ScaleIconCommunicationRecipient, ScaleIconCommunicationVoiceMessage, ScaleIconContentAchievement, ScaleIconContentApplications, ScaleIconContentBiometric, ScaleIconContentBookmark, ScaleIconContentCalendar, ScaleIconContentClipboard, ScaleIconContentClock, ScaleIconContentCreditCard, ScaleIconContentDelivery, ScaleIconContentDigitalBanking, ScaleIconContentDigitalMedia, ScaleIconContentDraftFile, ScaleIconContentESim, ScaleIconContentEu, ScaleIconContentFeatures, ScaleIconContentFlexibleTariffs, ScaleIconContentHeart, ScaleIconContentHistory, ScaleIconContentInternational, ScaleIconContentInternationalSms, ScaleIconContentInterview, ScaleIconContentKey, ScaleIconContentLock, ScaleIconContentMediaFolder, ScaleIconContentMoneyAt, ScaleIconContentMusic, ScaleIconContentNews, ScaleIconContentPrepaidActivate, ScaleIconContentPriceTag, ScaleIconContentRss, ScaleIconContentShop, ScaleIconContentSignal, ScaleIconContentSimCard, ScaleIconContentSmile, ScaleIconContentTariffs, ScaleIconContentTransport, ScaleIconContentUnlock, ScaleIconContentVoucher, ScaleIconContentWallet, ScaleIconDeviceAddDevice, ScaleIconDeviceCamera, ScaleIconDeviceChangeCamera, ScaleIconDeviceComputer, ScaleIconDeviceDevicePhone, ScaleIconDeviceDeviceRouter, ScaleIconDeviceDeviceTv, ScaleIconDeviceDeviceWatch, ScaleIconDeviceFixedLineServices, ScaleIconDeviceMediaReceiver, ScaleIconDeviceMobileDevicesCombination, ScaleIconDeviceMobileEquipment, ScaleIconDeviceMobilePhoneInsurance, ScaleIconDeviceMobileServices, ScaleIconDeviceNoCamera, ScaleIconDevicePhotoCamera, ScaleIconDeviceRemoteController, ScaleIconDeviceReplacementMobilephone, ScaleIconDeviceScreenRotate, ScaleIconDeviceSmartSpeaker, ScaleIconDeviceTvAndMobile, ScaleIconHomeHome, ScaleIconHomeInternetAtHome, ScaleIconHomeIot, ScaleIconHomeNoWifi, ScaleIconHomeSmarthome, ScaleIconHomeWifi, ScaleIconNavigationCircleTopUp, ScaleIconNavigationCollapseDown, ScaleIconNavigationCollapseUp, ScaleIconNavigationExternalLink, ScaleIconNavigationInternalLink, ScaleIconNavigationLeft, ScaleIconNavigationLocation, ScaleIconNavigationMyLocation, ScaleIconNavigationRight, ScaleIconNavigationStart, ScaleIconNavigationTopUp, ScaleIconProcessOrderStatus, ScaleIconProcessProcessing, ScaleIconServiceDevicesService, ScaleIconServiceMaintanance, ScaleIconServiceServices, ScaleIconServiceSettings, ScaleIconServiceSupport, ScaleIconTProductMagentaCloud, ScaleIconTProductMagentaTv, ScaleIconTProductMagentaone, ScaleIconTProductMeasureInternetSpeed, ScaleIconTProductSeamlessConnectivity, ScaleIconTProductTelekomShopB, ScaleIconTProductUsage, ScaleIconUserFileAnalytics, ScaleIconUserFileAttachment, ScaleIconUserFileAudioFile, ScaleIconUserFileBilling, ScaleIconUserFileBussinesUsers, ScaleIconUserFileCommunities, ScaleIconUserFileContacts, ScaleIconUserFileContracts, ScaleIconUserFileFamilies, ScaleIconUserFileHandshake, ScaleIconUserFileIdCard, ScaleIconUserFileImageFile, ScaleIconUserFileLogout, ScaleIconUserFilePdfFile, ScaleIconUserFileSwitchUsers, ScaleIconUserFileUser, ScaleIconUserFileVideos, ScaleIconWeatherCloudy, ScaleIconWeatherCloudyRain, ScaleIconWeatherCloudySleet, ScaleIconWeatherCloudySnow, ScaleIconWeatherCloudyThunderRain, ScaleIconWeatherCloudyThunderSnow, ScaleIconWeatherHeavySleet, ScaleIconWeatherHeavySnow, ScaleIconWeatherMoonClear, ScaleIconWeatherMoonCloudyA, ScaleIconWeatherMoonCloudyB, ScaleIconWeatherMoonRain, ScaleIconWeatherMoonSleet, ScaleIconWeatherMoonSnow, ScaleIconWeatherMoonThunderRain, ScaleIconWeatherMoonThunderSnow, ScaleIconWeatherOvercast, ScaleIconWeatherRain, ScaleIconWeatherSunny, ScaleIconWeatherThunderRain, ScaleIconWeatherThunderSnow, ScaleInput, ScaleLink, ScaleList, ScaleListItem, ScaleLoadingSpinner, ScaleLogo, ScaleLogoSvg, ScaleMenuFlyout, ScaleMenuFlyoutDivider, ScaleMenuFlyoutItem, ScaleMenuFlyoutList, ScaleModal, ScaleNavIcon, ScaleNavMain, ScaleNavSegment, ScaleNotificationBadge, ScaleNotificationBanner, ScaleNotificationMessage, ScaleNotificationToast, ScalePagination, ScaleProgressBar, ScaleRadioButton, ScaleRadioButtonGroup, ScaleRatingStars, ScaleSidebarNav, ScaleSidebarNavCollapsible, ScaleSidebarNavItem, ScaleSlider, ScaleSsrSlotFix, ScaleSwitch, ScaleTabHeader, ScaleTabNav, ScaleTabPanel, ScaleTable, ScaleTag, ScaleTextField, ScaleTextarea, ScaleToast, ScaleToggleButton, ScaleToggleGroup, ScaleTooltip, ProxyCmp as ɵa, BooleanValueAccessor as ɵb, ValueAccessor as ɵc, NumericValueAccessor as ɵd, RadioValueAccessor as ɵe, SelectValueAccessor as ɵf, TextValueAccessor as ɵg };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,
import { ChangeDetectorRef, ElementRef, NgZone } from '@angular/core';
import { Components } from '@telekom/scale-components';
import * as ɵngcc0 from '@angular/core';
export declare interface AppLogo extends Components.AppLogo {
}
export declare class AppLogo {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<AppLogo, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<AppLogo, "app-logo", never, { "claim": "claim"; "claimLang": "claimLang"; "color": "color"; "focusable": "focusable"; "href": "href"; "logoTitle": "logoTitle"; }, {}, never, ["*"]>;
}
export declare interface AppMegaMenu extends Components.AppMegaMenu {
}
export declare class AppMegaMenu {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<AppMegaMenu, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<AppMegaMenu, "app-mega-menu", never, { "active": "active"; "activeRouteId": "activeRouteId"; "hide": "hide"; "isActive": "isActive"; "navigation": "navigation"; }, {}, never, ["*"]>;
}
import { MainNavigationMobile as IMainNavigationMobile } from '@telekom/scale-components/dist/types/components/telekom/app-navigation-main-mobile/app-navigation-main-mobile';
export declare interface AppNavigationMainMobile extends Components.AppNavigationMainMobile {
}
export declare class AppNavigationMainMobile {
    protected z: NgZone;
    /**  */
    closeMenu: IMainNavigationMobile['closeMenu'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<AppNavigationMainMobile, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<AppNavigationMainMobile, "app-navigation-main-mobile", never, { "activeRouteId": "activeRouteId"; "hide": "hide"; "navigation": "navigation"; }, { "closeMenu": "closeMenu"; }, never, ["*"]>;
}
export declare interface AppNavigationSectorMobile extends Components.AppNavigationSectorMobile {
}
export declare class AppNavigationSectorMobile {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<AppNavigationSectorMobile, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<AppNavigationSectorMobile, "app-navigation-sector-mobile", never, { "activeSectorId": "activeSectorId"; "hide": "hide"; "navigation": "navigation"; }, {}, never, ["*"]>;
}
import { AppNavigationUserMenu as IAppNavigationUserMenu } from '@telekom/scale-components/dist/types/components/telekom/app-navigation-user-menu/app-navigation-user-menu';
export declare interface AppNavigationUserMenu extends Components.AppNavigationUserMenu {
}
export declare class AppNavigationUserMenu {
    protected z: NgZone;
    /**  */
    closeMenu: IAppNavigationUserMenu['closeMenu'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<AppNavigationUserMenu, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<AppNavigationUserMenu, "app-navigation-user-menu", never, { "hide": "hide"; "navigation": "navigation"; }, { "closeMenu": "closeMenu"; }, never, ["*"]>;
}
export declare interface ScaleAccordion extends Components.ScaleAccordion {
}
export declare class ScaleAccordion {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleAccordion, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleAccordion, "scale-accordion", never, { "dependent": "dependent"; "expanded": "expanded"; "headingLevel": "headingLevel"; "iconLocation": "iconLocation"; "styles": "styles"; }, {}, never, ["*"]>;
}
export declare interface ScaleAlert extends Components.ScaleAlert {
}
export declare class ScaleAlert {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleAlert, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleAlert, "scale-alert", never, { "headline": "headline"; "icon": "icon"; "opened": "opened"; "size": "size"; "styles": "styles"; "timeout": "timeout"; "variant": "variant"; }, {}, never, ["*"]>;
}
export declare interface ScaleAppFooter extends Components.ScaleAppFooter {
}
export declare class ScaleAppFooter {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleAppFooter, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleAppFooter, "scale-app-footer", never, { "claimLang": "claimLang"; "copyright": "copyright"; "footerNavigation": "footerNavigation"; "logoAriaDescribedBy": "logoAriaDescribedBy"; "logoClick": "logoClick"; "logoHref": "logoHref"; "logoTitle": "logoTitle"; "styles": "styles"; "variant": "variant"; }, {}, never, ["*"]>;
}
export declare interface ScaleAppHeader extends Components.ScaleAppHeader {
}
export declare class ScaleAppHeader {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleAppHeader, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleAppHeader, "scale-app-header", never, { "activeRouteId": "activeRouteId"; "activeSectorId": "activeSectorId"; "addonNavigation": "addonNavigation"; "claimLang": "claimLang"; "iconNavigation": "iconNavigation"; "isMegaMenuVisible": "isMegaMenuVisible"; "isMobileMenuVisible": "isMobileMenuVisible"; "logoAriaDescribedBy": "logoAriaDescribedBy"; "logoClick": "logoClick"; "logoHref": "logoHref"; "logoTitle": "logoTitle"; "mainNavigation": "mainNavigation"; "megaMenuVisible": "megaMenuVisible"; "mobileMenuVisible": "mobileMenuVisible"; "portalName": "portalName"; "sectorNavigation": "sectorNavigation"; "sticky": "sticky"; "userNavigation": "userNavigation"; }, {}, never, ["*"]>;
}
export declare interface ScaleAppShell extends Components.ScaleAppShell {
}
export declare class ScaleAppShell {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleAppShell, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleAppShell, "scale-app-shell", never, { "activeRouteId": "activeRouteId"; "activeSectorId": "activeSectorId"; "addonNavigation": "addonNavigation"; "claimLang": "claimLang"; "iconNavigation": "iconNavigation"; "logoAriaDescribedBy": "logoAriaDescribedBy"; "logoClick": "logoClick"; "logoHref": "logoHref"; "logoTitle": "logoTitle"; "mainNavigation": "mainNavigation"; "portalName": "portalName"; "sectorNavigation": "sectorNavigation"; "sticky": "sticky"; "styles": "styles"; "userNavigation": "userNavigation"; }, {}, never, ["*"]>;
}
export declare interface ScaleBreadcrumb extends Components.ScaleBreadcrumb {
}
export declare class ScaleBreadcrumb {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleBreadcrumb, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleBreadcrumb, "scale-breadcrumb", never, { "separator": "separator"; "styles": "styles"; }, {}, never, ["*"]>;
}
export declare interface ScaleButton extends Components.ScaleButton {
}
export declare class ScaleButton {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleButton, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleButton, "scale-button", never, { "disabled": "disabled"; "download": "download"; "href": "href"; "iconOnly": "iconOnly"; "iconPosition": "iconPosition"; "innerTabindex": "innerTabindex"; "name": "name"; "size": "size"; "styles": "styles"; "target": "target"; "type": "type"; "value": "value"; "variant": "variant"; }, {}, never, ["*"]>;
}
export declare interface ScaleCallout extends Components.ScaleCallout {
}
export declare class ScaleCallout {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleCallout, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleCallout, "scale-callout", never, { "asterisk": "asterisk"; "rotation": "rotation"; "size": "size"; "variant": "variant"; }, {}, never, ["*"]>;
}
export declare interface ScaleCard extends Components.ScaleCard {
}
export declare class ScaleCard {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleCard, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleCard, "scale-card", never, { "label": "label"; "rel": "rel"; "styles": "styles"; "target": "target"; "to": "to"; }, {}, never, ["*"]>;
}
export declare interface ScaleCarousel extends Components.ScaleCarousel {
}
export declare class ScaleCarousel {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleCarousel, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleCarousel, "scale-carousel", never, { "styles": "styles"; "vertical": "vertical"; }, {}, never, ["*"]>;
}
export declare interface ScaleChartStackCard extends Components.ScaleChartStackCard {
}
export declare class ScaleChartStackCard {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleChartStackCard, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleChartStackCard, "scale-chart-stack-card", never, { "data": "data"; "heading": "heading"; }, {}, never, ["*"]>;
}
import { Checkbox as ICheckbox } from '@telekom/scale-components/dist/types/components/checkbox/checkbox';
export declare interface ScaleCheckbox extends Components.ScaleCheckbox {
}
export declare class ScaleCheckbox {
    protected z: NgZone;
    /** Emitted when the value has changed. */
    "scale-change": ICheckbox['scaleChange'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleChange: ICheckbox['scaleChangeLegacy'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleCheckbox, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleCheckbox, "scale-checkbox", never, { "ariaLabelCheckbox": "ariaLabelCheckbox"; "checked": "checked"; "disabled": "disabled"; "helperText": "helperText"; "hideLabel": "hideLabel"; "indeterminate": "indeterminate"; "inputId": "inputId"; "invalid": "invalid"; "label": "label"; "name": "name"; "status": "status"; "styles": "styles"; "value": "value"; }, { "scale-change": "scale-change"; "scaleChange": "scaleChange"; }, never, ["*"]>;
}
export declare interface ScaleCheckboxGroup extends Components.ScaleCheckboxGroup {
}
export declare class ScaleCheckboxGroup {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleCheckboxGroup, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleCheckboxGroup, "scale-checkbox-group", never, { "ariaLabelCheckboxGroup": "ariaLabelCheckboxGroup"; "helperText": "helperText"; "inputId": "inputId"; "invalid": "invalid"; "label": "label"; "name": "name"; "selectText": "selectText"; "status": "status"; "styles": "styles"; "unselectText": "unselectText"; "value": "value"; }, {}, never, ["*"]>;
}
import { Collapsible as ICollapsible } from '@telekom/scale-components/dist/types/components/collapsible/collapsible';
export declare interface ScaleCollapsible extends Components.ScaleCollapsible {
}
export declare class ScaleCollapsible {
    protected z: NgZone;
    /** Emitted so parent <scale-accordion> knows about it */
    "scale-expand": ICollapsible['scaleExpand'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleExpand: ICollapsible['scaleExpandLegacy'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleCollapsible, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleCollapsible, "scale-collapsible", never, { "expanded": "expanded"; "headingLevel": "headingLevel"; "iconLocation": "iconLocation"; "styles": "styles"; }, { "scale-expand": "scale-expand"; "scaleExpand": "scaleExpand"; }, never, ["*"]>;
}
import { DataGrid as IDataGrid } from '@telekom/scale-components/dist/types/components/data-grid/data-grid';
export declare interface ScaleDataGrid extends Components.ScaleDataGrid {
}
export declare class ScaleDataGrid {
    protected z: NgZone;
    /** Event triggered every time the editable cells are changed, updating the original rows data */
    "scale-edit": IDataGrid['scaleEdit'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleEdit: IDataGrid['scaleEditLegacy'];
    /** Event triggered every time the data is sorted, changing original rows data */
    "scale-sort": IDataGrid['scaleSort'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleSort: IDataGrid['scaleSortLegacy'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleDataGrid, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleDataGrid, "scale-data-grid", never, { "fields": "fields"; "freezeHeader": "freezeHeader"; "heading": "heading"; "height": "height"; "hideBorder": "hideBorder"; "hideHeader": "hideHeader"; "hideInfo": "hideInfo"; "hideMenu": "hideMenu"; "numbered": "numbered"; "pageSize": "pageSize"; "rows": "rows"; "selectable": "selectable"; "selection": "selection"; "shadeAlternate": "shadeAlternate"; "styles": "styles"; "visible": "visible"; }, { "scale-edit": "scale-edit"; "scaleEdit": "scaleEdit"; "scale-sort": "scale-sort"; "scaleSort": "scaleSort"; }, never, ["*"]>;
}
import { DatePicker as IDatePicker } from '@telekom/scale-components/dist/types/components/date-picker/date-picker';
export declare interface ScaleDatePicker extends Components.ScaleDatePicker {
}
export declare class ScaleDatePicker {
    protected z: NgZone;
    /** Event emitted when a date is selected. */
    "scale-change": IDatePicker['scaleChange'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleChange: IDatePicker['scaleChangeLegacy'];
    /** Event emitted the date picker input is blurred. */
    "scale-blur": IDatePicker['scaleBlur'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleBlur: IDatePicker['scaleBlurLegacy'];
    /** Event emitted the date picker input is focused. */
    "scale-focus": IDatePicker['scaleFocus'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleFocus: IDatePicker['scaleFocusLegacy'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleDatePicker, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleDatePicker, "scale-date-picker", never, { "dateAdapter": "dateAdapter"; "direction": "direction"; "disabled": "disabled"; "firstDayOfWeek": "firstDayOfWeek"; "helperText": "helperText"; "identifier": "identifier"; "invalid": "invalid"; "label": "label"; "localization": "localization"; "max": "max"; "min": "min"; "name": "name"; "popupTitle": "popupTitle"; "required": "required"; "role": "role"; "size": "size"; "status": "status"; "styles": "styles"; "value": "value"; }, { "scale-change": "scale-change"; "scaleChange": "scaleChange"; "scale-blur": "scale-blur"; "scaleBlur": "scaleBlur"; "scale-focus": "scale-focus"; "scaleFocus": "scaleFocus"; }, never, ["*"]>;
}
export declare interface ScaleDivider extends Components.ScaleDivider {
}
export declare class ScaleDivider {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleDivider, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleDivider, "scale-divider", never, { "styles": "styles"; "vertical": "vertical"; }, {}, never, ["*"]>;
}
import { Dropdown as IDropdown } from '@telekom/scale-components/dist/types/components/dropdown/dropdown';
export declare interface ScaleDropdown extends Components.ScaleDropdown {
}
export declare class ScaleDropdown {
    protected z: NgZone;
    /** Emitted when a keyboard input occurred. */
    "scale-input": IDropdown['scaleInput'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleInput: IDropdown['scaleInputLegacy'];
    /** Emitted when the value has changed. */
    "scale-change": IDropdown['scaleChange'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleChange: IDropdown['scaleChangeLegacy'];
    /** Emitted when the input has focus. */
    "scale-focus": IDropdown['scaleFocus'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleFocus: IDropdown['scaleFocusLegacy'];
    /** Emitted when the input loses focus. */
    "scale-blur": IDropdown['scaleBlur'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleBlur: IDropdown['scaleBlurLegacy'];
    /** Emitted on keydown. */
    "scale-keydown": IDropdown['scaleKeyDown'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleKeydown: IDropdown['scaleKeyDownLegacy'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleDropdown, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleDropdown, "scale-dropdown", never, { "controlled": "controlled"; "disabled": "disabled"; "helperText": "helperText"; "inputId": "inputId"; "invalid": "invalid"; "label": "label"; "multiple": "multiple"; "name": "name"; "required": "required"; "size": "size"; "status": "status"; "styles": "styles"; "transparent": "transparent"; "value": "value"; "visibleSize": "visibleSize"; }, { "scale-input": "scale-input"; "scaleInput": "scaleInput"; "scale-change": "scale-change"; "scaleChange": "scaleChange"; "scale-focus": "scale-focus"; "scaleFocus": "scaleFocus"; "scale-blur": "scale-blur"; "scaleBlur": "scaleBlur"; "scale-keydown": "scale-keydown"; "scaleKeydown": "scaleKeydown"; }, never, ["*"]>;
}
export declare interface ScaleGrid extends Components.ScaleGrid {
}
export declare class ScaleGrid {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleGrid, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleGrid, "scale-grid", never, { "columns": "columns"; "gutterX": "gutterX"; "gutterY": "gutterY"; "maxWidth": "maxWidth"; "spacing": "spacing"; }, {}, never, ["*"]>;
}
export declare interface ScaleGridItem extends Components.ScaleGridItem {
}
export declare class ScaleGridItem {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleGridItem, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleGridItem, "scale-grid-item", never, { "offset": "offset"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIcon extends Components.ScaleIcon {
}
export declare class ScaleIcon {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIcon, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIcon, "scale-icon", never, { "accessibilityTitle": "accessibilityTitle"; "decorative": "decorative"; "fill": "fill"; "focusable": "focusable"; "name": "name"; "path": "path"; "size": "size"; "stroke": "stroke"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionAdd extends Components.ScaleIconActionAdd {
}
export declare class ScaleIconActionAdd {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionAdd, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionAdd, "scale-icon-action-add", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionAddCard extends Components.ScaleIconActionAddCard {
}
export declare class ScaleIconActionAddCard {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionAddCard, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionAddCard, "scale-icon-action-add-card", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionAutoLogin extends Components.ScaleIconActionAutoLogin {
}
export declare class ScaleIconActionAutoLogin {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionAutoLogin, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionAutoLogin, "scale-icon-action-auto-login", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionBackspace extends Components.ScaleIconActionBackspace {
}
export declare class ScaleIconActionBackspace {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionBackspace, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionBackspace, "scale-icon-action-backspace", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionChangelog extends Components.ScaleIconActionChangelog {
}
export declare class ScaleIconActionChangelog {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionChangelog, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionChangelog, "scale-icon-action-changelog", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionCircleAdd extends Components.ScaleIconActionCircleAdd {
}
export declare class ScaleIconActionCircleAdd {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionCircleAdd, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionCircleAdd, "scale-icon-action-circle-add", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionCircleClose extends Components.ScaleIconActionCircleClose {
}
export declare class ScaleIconActionCircleClose {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionCircleClose, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionCircleClose, "scale-icon-action-circle-close", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionClose extends Components.ScaleIconActionClose {
}
export declare class ScaleIconActionClose {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionClose, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionClose, "scale-icon-action-close", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionCopyPaste extends Components.ScaleIconActionCopyPaste {
}
export declare class ScaleIconActionCopyPaste {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionCopyPaste, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionCopyPaste, "scale-icon-action-copy-paste", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionCutPaste extends Components.ScaleIconActionCutPaste {
}
export declare class ScaleIconActionCutPaste {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionCutPaste, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionCutPaste, "scale-icon-action-cut-paste", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionDisabledMicrophone extends Components.ScaleIconActionDisabledMicrophone {
}
export declare class ScaleIconActionDisabledMicrophone {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionDisabledMicrophone, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionDisabledMicrophone, "scale-icon-action-disabled-microphone", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionDownload extends Components.ScaleIconActionDownload {
}
export declare class ScaleIconActionDownload {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionDownload, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionDownload, "scale-icon-action-download", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionDragAndDrop extends Components.ScaleIconActionDragAndDrop {
}
export declare class ScaleIconActionDragAndDrop {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionDragAndDrop, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionDragAndDrop, "scale-icon-action-drag-and-drop", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionEdit extends Components.ScaleIconActionEdit {
}
export declare class ScaleIconActionEdit {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionEdit, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionEdit, "scale-icon-action-edit", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionFastForward extends Components.ScaleIconActionFastForward {
}
export declare class ScaleIconActionFastForward {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionFastForward, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionFastForward, "scale-icon-action-fast-forward", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionFavorite extends Components.ScaleIconActionFavorite {
}
export declare class ScaleIconActionFavorite {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionFavorite, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionFavorite, "scale-icon-action-favorite", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionFilter extends Components.ScaleIconActionFilter {
}
export declare class ScaleIconActionFilter {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionFilter, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionFilter, "scale-icon-action-filter", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionForward extends Components.ScaleIconActionForward {
}
export declare class ScaleIconActionForward {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionForward, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionForward, "scale-icon-action-forward", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionFullScreen extends Components.ScaleIconActionFullScreen {
}
export declare class ScaleIconActionFullScreen {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionFullScreen, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionFullScreen, "scale-icon-action-full-screen", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionHidePassword extends Components.ScaleIconActionHidePassword {
}
export declare class ScaleIconActionHidePassword {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionHidePassword, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionHidePassword, "scale-icon-action-hide-password", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionIndeterminate extends Components.ScaleIconActionIndeterminate {
}
export declare class ScaleIconActionIndeterminate {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionIndeterminate, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionIndeterminate, "scale-icon-action-indeterminate", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionInstall extends Components.ScaleIconActionInstall {
}
export declare class ScaleIconActionInstall {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionInstall, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionInstall, "scale-icon-action-install", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionLink extends Components.ScaleIconActionLink {
}
export declare class ScaleIconActionLink {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionLink, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionLink, "scale-icon-action-link", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionLogout extends Components.ScaleIconActionLogout {
}
export declare class ScaleIconActionLogout {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionLogout, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionLogout, "scale-icon-action-logout", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionLoop extends Components.ScaleIconActionLoop {
}
export declare class ScaleIconActionLoop {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionLoop, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionLoop, "scale-icon-action-loop", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionMenu extends Components.ScaleIconActionMenu {
}
export declare class ScaleIconActionMenu {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionMenu, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionMenu, "scale-icon-action-menu", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionMicrophone extends Components.ScaleIconActionMicrophone {
}
export declare class ScaleIconActionMicrophone {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionMicrophone, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionMicrophone, "scale-icon-action-microphone", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionMinimizeScreen extends Components.ScaleIconActionMinimizeScreen {
}
export declare class ScaleIconActionMinimizeScreen {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionMinimizeScreen, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionMinimizeScreen, "scale-icon-action-minimize-screen", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionMore extends Components.ScaleIconActionMore {
}
export declare class ScaleIconActionMore {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionMore, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionMore, "scale-icon-action-more", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionMove extends Components.ScaleIconActionMove {
}
export declare class ScaleIconActionMove {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionMove, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionMove, "scale-icon-action-move", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionMute extends Components.ScaleIconActionMute {
}
export declare class ScaleIconActionMute {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionMute, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionMute, "scale-icon-action-mute", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionNotification extends Components.ScaleIconActionNotification {
}
export declare class ScaleIconActionNotification {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionNotification, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionNotification, "scale-icon-action-notification", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionPause extends Components.ScaleIconActionPause {
}
export declare class ScaleIconActionPause {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionPause, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionPause, "scale-icon-action-pause", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionPin extends Components.ScaleIconActionPin {
}
export declare class ScaleIconActionPin {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionPin, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionPin, "scale-icon-action-pin", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionPlay extends Components.ScaleIconActionPlay {
}
export declare class ScaleIconActionPlay {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionPlay, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionPlay, "scale-icon-action-play", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionPopUpWindow extends Components.ScaleIconActionPopUpWindow {
}
export declare class ScaleIconActionPopUpWindow {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionPopUpWindow, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionPopUpWindow, "scale-icon-action-pop-up-window", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionPrint extends Components.ScaleIconActionPrint {
}
export declare class ScaleIconActionPrint {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionPrint, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionPrint, "scale-icon-action-print", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionRandom extends Components.ScaleIconActionRandom {
}
export declare class ScaleIconActionRandom {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionRandom, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionRandom, "scale-icon-action-random", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionRefresh extends Components.ScaleIconActionRefresh {
}
export declare class ScaleIconActionRefresh {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionRefresh, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionRefresh, "scale-icon-action-refresh", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionRemove extends Components.ScaleIconActionRemove {
}
export declare class ScaleIconActionRemove {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionRemove, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionRemove, "scale-icon-action-remove", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionRestart extends Components.ScaleIconActionRestart {
}
export declare class ScaleIconActionRestart {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionRestart, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionRestart, "scale-icon-action-restart", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionSearch extends Components.ScaleIconActionSearch {
}
export declare class ScaleIconActionSearch {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionSearch, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionSearch, "scale-icon-action-search", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionShoppingCart extends Components.ScaleIconActionShoppingCart {
}
export declare class ScaleIconActionShoppingCart {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionShoppingCart, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionShoppingCart, "scale-icon-action-shopping-cart", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionShowPassword extends Components.ScaleIconActionShowPassword {
}
export declare class ScaleIconActionShowPassword {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionShowPassword, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionShowPassword, "scale-icon-action-show-password", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionSort extends Components.ScaleIconActionSort {
}
export declare class ScaleIconActionSort {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionSort, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionSort, "scale-icon-action-sort", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionSoundOn extends Components.ScaleIconActionSoundOn {
}
export declare class ScaleIconActionSoundOn {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionSoundOn, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionSoundOn, "scale-icon-action-sound-on", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionStreamOn extends Components.ScaleIconActionStreamOn {
}
export declare class ScaleIconActionStreamOn {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionStreamOn, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionStreamOn, "scale-icon-action-stream-on", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionSuccess extends Components.ScaleIconActionSuccess {
}
export declare class ScaleIconActionSuccess {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionSuccess, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionSuccess, "scale-icon-action-success", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionThumbsDown extends Components.ScaleIconActionThumbsDown {
}
export declare class ScaleIconActionThumbsDown {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionThumbsDown, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionThumbsDown, "scale-icon-action-thumbs-down", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionThumbsUp extends Components.ScaleIconActionThumbsUp {
}
export declare class ScaleIconActionThumbsUp {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionThumbsUp, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionThumbsUp, "scale-icon-action-thumbs-up", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionTilesAdd extends Components.ScaleIconActionTilesAdd {
}
export declare class ScaleIconActionTilesAdd {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionTilesAdd, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionTilesAdd, "scale-icon-action-tiles-add", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionUpload extends Components.ScaleIconActionUpload {
}
export declare class ScaleIconActionUpload {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionUpload, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionUpload, "scale-icon-action-upload", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionVolumeDown extends Components.ScaleIconActionVolumeDown {
}
export declare class ScaleIconActionVolumeDown {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionVolumeDown, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionVolumeDown, "scale-icon-action-volume-down", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionVolumeUp extends Components.ScaleIconActionVolumeUp {
}
export declare class ScaleIconActionVolumeUp {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionVolumeUp, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionVolumeUp, "scale-icon-action-volume-up", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionZoomIn extends Components.ScaleIconActionZoomIn {
}
export declare class ScaleIconActionZoomIn {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionZoomIn, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionZoomIn, "scale-icon-action-zoom-in", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconActionZoomOut extends Components.ScaleIconActionZoomOut {
}
export declare class ScaleIconActionZoomOut {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconActionZoomOut, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconActionZoomOut, "scale-icon-action-zoom-out", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconAlertCompliance extends Components.ScaleIconAlertCompliance {
}
export declare class ScaleIconAlertCompliance {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconAlertCompliance, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconAlertCompliance, "scale-icon-alert-compliance", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconAlertError extends Components.ScaleIconAlertError {
}
export declare class ScaleIconAlertError {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconAlertError, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconAlertError, "scale-icon-alert-error", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconAlertHelp extends Components.ScaleIconAlertHelp {
}
export declare class ScaleIconAlertHelp {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconAlertHelp, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconAlertHelp, "scale-icon-alert-help", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconAlertImprintDataprivacy extends Components.ScaleIconAlertImprintDataprivacy {
}
export declare class ScaleIconAlertImprintDataprivacy {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconAlertImprintDataprivacy, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconAlertImprintDataprivacy, "scale-icon-alert-imprint-dataprivacy", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconAlertInformation extends Components.ScaleIconAlertInformation {
}
export declare class ScaleIconAlertInformation {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconAlertInformation, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconAlertInformation, "scale-icon-alert-information", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconAlertLegal extends Components.ScaleIconAlertLegal {
}
export declare class ScaleIconAlertLegal {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconAlertLegal, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconAlertLegal, "scale-icon-alert-legal", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconAlertSecurity extends Components.ScaleIconAlertSecurity {
}
export declare class ScaleIconAlertSecurity {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconAlertSecurity, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconAlertSecurity, "scale-icon-alert-security", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconAlertSuccess extends Components.ScaleIconAlertSuccess {
}
export declare class ScaleIconAlertSuccess {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconAlertSuccess, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconAlertSuccess, "scale-icon-alert-success", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconAlertWarning extends Components.ScaleIconAlertWarning {
}
export declare class ScaleIconAlertWarning {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconAlertWarning, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconAlertWarning, "scale-icon-alert-warning", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconCommunicationCallIncoming extends Components.ScaleIconCommunicationCallIncoming {
}
export declare class ScaleIconCommunicationCallIncoming {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconCommunicationCallIncoming, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconCommunicationCallIncoming, "scale-icon-communication-call-incoming", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconCommunicationCallOutgoing extends Components.ScaleIconCommunicationCallOutgoing {
}
export declare class ScaleIconCommunicationCallOutgoing {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconCommunicationCallOutgoing, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconCommunicationCallOutgoing, "scale-icon-communication-call-outgoing", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconCommunicationChat extends Components.ScaleIconCommunicationChat {
}
export declare class ScaleIconCommunicationChat {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconCommunicationChat, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconCommunicationChat, "scale-icon-communication-chat", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconCommunicationEmail extends Components.ScaleIconCommunicationEmail {
}
export declare class ScaleIconCommunicationEmail {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconCommunicationEmail, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconCommunicationEmail, "scale-icon-communication-email", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconCommunicationEndCall extends Components.ScaleIconCommunicationEndCall {
}
export declare class ScaleIconCommunicationEndCall {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconCommunicationEndCall, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconCommunicationEndCall, "scale-icon-communication-end-call", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconCommunicationFeedback extends Components.ScaleIconCommunicationFeedback {
}
export declare class ScaleIconCommunicationFeedback {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconCommunicationFeedback, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconCommunicationFeedback, "scale-icon-communication-feedback", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconCommunicationMessage extends Components.ScaleIconCommunicationMessage {
}
export declare class ScaleIconCommunicationMessage {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconCommunicationMessage, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconCommunicationMessage, "scale-icon-communication-message", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconCommunicationPhoneNumber extends Components.ScaleIconCommunicationPhoneNumber {
}
export declare class ScaleIconCommunicationPhoneNumber {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconCommunicationPhoneNumber, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconCommunicationPhoneNumber, "scale-icon-communication-phone-number", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconCommunicationRecipient extends Components.ScaleIconCommunicationRecipient {
}
export declare class ScaleIconCommunicationRecipient {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconCommunicationRecipient, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconCommunicationRecipient, "scale-icon-communication-recipient", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconCommunicationVoiceMessage extends Components.ScaleIconCommunicationVoiceMessage {
}
export declare class ScaleIconCommunicationVoiceMessage {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconCommunicationVoiceMessage, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconCommunicationVoiceMessage, "scale-icon-communication-voice-message", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentAchievement extends Components.ScaleIconContentAchievement {
}
export declare class ScaleIconContentAchievement {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentAchievement, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentAchievement, "scale-icon-content-achievement", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentApplications extends Components.ScaleIconContentApplications {
}
export declare class ScaleIconContentApplications {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentApplications, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentApplications, "scale-icon-content-applications", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentBiometric extends Components.ScaleIconContentBiometric {
}
export declare class ScaleIconContentBiometric {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentBiometric, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentBiometric, "scale-icon-content-biometric", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentBookmark extends Components.ScaleIconContentBookmark {
}
export declare class ScaleIconContentBookmark {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentBookmark, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentBookmark, "scale-icon-content-bookmark", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentCalendar extends Components.ScaleIconContentCalendar {
}
export declare class ScaleIconContentCalendar {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentCalendar, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentCalendar, "scale-icon-content-calendar", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentClipboard extends Components.ScaleIconContentClipboard {
}
export declare class ScaleIconContentClipboard {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentClipboard, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentClipboard, "scale-icon-content-clipboard", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentClock extends Components.ScaleIconContentClock {
}
export declare class ScaleIconContentClock {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentClock, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentClock, "scale-icon-content-clock", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentCreditCard extends Components.ScaleIconContentCreditCard {
}
export declare class ScaleIconContentCreditCard {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentCreditCard, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentCreditCard, "scale-icon-content-credit-card", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentDelivery extends Components.ScaleIconContentDelivery {
}
export declare class ScaleIconContentDelivery {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentDelivery, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentDelivery, "scale-icon-content-delivery", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentDigitalBanking extends Components.ScaleIconContentDigitalBanking {
}
export declare class ScaleIconContentDigitalBanking {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentDigitalBanking, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentDigitalBanking, "scale-icon-content-digital-banking", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentDigitalMedia extends Components.ScaleIconContentDigitalMedia {
}
export declare class ScaleIconContentDigitalMedia {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentDigitalMedia, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentDigitalMedia, "scale-icon-content-digital-media", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentDraftFile extends Components.ScaleIconContentDraftFile {
}
export declare class ScaleIconContentDraftFile {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentDraftFile, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentDraftFile, "scale-icon-content-draft-file", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentESim extends Components.ScaleIconContentESim {
}
export declare class ScaleIconContentESim {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentESim, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentESim, "scale-icon-content-e-sim", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentEu extends Components.ScaleIconContentEu {
}
export declare class ScaleIconContentEu {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentEu, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentEu, "scale-icon-content-eu", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentFeatures extends Components.ScaleIconContentFeatures {
}
export declare class ScaleIconContentFeatures {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentFeatures, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentFeatures, "scale-icon-content-features", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentFlexibleTariffs extends Components.ScaleIconContentFlexibleTariffs {
}
export declare class ScaleIconContentFlexibleTariffs {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentFlexibleTariffs, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentFlexibleTariffs, "scale-icon-content-flexible-tariffs", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentHeart extends Components.ScaleIconContentHeart {
}
export declare class ScaleIconContentHeart {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentHeart, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentHeart, "scale-icon-content-heart", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentHistory extends Components.ScaleIconContentHistory {
}
export declare class ScaleIconContentHistory {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentHistory, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentHistory, "scale-icon-content-history", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentInternational extends Components.ScaleIconContentInternational {
}
export declare class ScaleIconContentInternational {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentInternational, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentInternational, "scale-icon-content-international", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentInternationalSms extends Components.ScaleIconContentInternationalSms {
}
export declare class ScaleIconContentInternationalSms {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentInternationalSms, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentInternationalSms, "scale-icon-content-international-sms", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentInterview extends Components.ScaleIconContentInterview {
}
export declare class ScaleIconContentInterview {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentInterview, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentInterview, "scale-icon-content-interview", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentKey extends Components.ScaleIconContentKey {
}
export declare class ScaleIconContentKey {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentKey, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentKey, "scale-icon-content-key", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentLock extends Components.ScaleIconContentLock {
}
export declare class ScaleIconContentLock {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentLock, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentLock, "scale-icon-content-lock", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentMediaFolder extends Components.ScaleIconContentMediaFolder {
}
export declare class ScaleIconContentMediaFolder {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentMediaFolder, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentMediaFolder, "scale-icon-content-media-folder", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentMoneyAt extends Components.ScaleIconContentMoneyAt {
}
export declare class ScaleIconContentMoneyAt {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentMoneyAt, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentMoneyAt, "scale-icon-content-money-at", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentMusic extends Components.ScaleIconContentMusic {
}
export declare class ScaleIconContentMusic {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentMusic, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentMusic, "scale-icon-content-music", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentNews extends Components.ScaleIconContentNews {
}
export declare class ScaleIconContentNews {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentNews, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentNews, "scale-icon-content-news", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentPrepaidActivate extends Components.ScaleIconContentPrepaidActivate {
}
export declare class ScaleIconContentPrepaidActivate {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentPrepaidActivate, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentPrepaidActivate, "scale-icon-content-prepaid-activate", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentPriceTag extends Components.ScaleIconContentPriceTag {
}
export declare class ScaleIconContentPriceTag {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentPriceTag, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentPriceTag, "scale-icon-content-price-tag", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentRss extends Components.ScaleIconContentRss {
}
export declare class ScaleIconContentRss {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentRss, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentRss, "scale-icon-content-rss", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentShop extends Components.ScaleIconContentShop {
}
export declare class ScaleIconContentShop {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentShop, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentShop, "scale-icon-content-shop", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentSignal extends Components.ScaleIconContentSignal {
}
export declare class ScaleIconContentSignal {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentSignal, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentSignal, "scale-icon-content-signal", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentSimCard extends Components.ScaleIconContentSimCard {
}
export declare class ScaleIconContentSimCard {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentSimCard, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentSimCard, "scale-icon-content-sim-card", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentSmile extends Components.ScaleIconContentSmile {
}
export declare class ScaleIconContentSmile {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentSmile, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentSmile, "scale-icon-content-smile", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentTariffs extends Components.ScaleIconContentTariffs {
}
export declare class ScaleIconContentTariffs {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentTariffs, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentTariffs, "scale-icon-content-tariffs", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentTransport extends Components.ScaleIconContentTransport {
}
export declare class ScaleIconContentTransport {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentTransport, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentTransport, "scale-icon-content-transport", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentUnlock extends Components.ScaleIconContentUnlock {
}
export declare class ScaleIconContentUnlock {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentUnlock, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentUnlock, "scale-icon-content-unlock", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentVoucher extends Components.ScaleIconContentVoucher {
}
export declare class ScaleIconContentVoucher {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentVoucher, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentVoucher, "scale-icon-content-voucher", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconContentWallet extends Components.ScaleIconContentWallet {
}
export declare class ScaleIconContentWallet {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconContentWallet, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconContentWallet, "scale-icon-content-wallet", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconDeviceAddDevice extends Components.ScaleIconDeviceAddDevice {
}
export declare class ScaleIconDeviceAddDevice {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconDeviceAddDevice, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconDeviceAddDevice, "scale-icon-device-add-device", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconDeviceCamera extends Components.ScaleIconDeviceCamera {
}
export declare class ScaleIconDeviceCamera {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconDeviceCamera, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconDeviceCamera, "scale-icon-device-camera", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconDeviceChangeCamera extends Components.ScaleIconDeviceChangeCamera {
}
export declare class ScaleIconDeviceChangeCamera {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconDeviceChangeCamera, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconDeviceChangeCamera, "scale-icon-device-change-camera", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconDeviceComputer extends Components.ScaleIconDeviceComputer {
}
export declare class ScaleIconDeviceComputer {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconDeviceComputer, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconDeviceComputer, "scale-icon-device-computer", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconDeviceDevicePhone extends Components.ScaleIconDeviceDevicePhone {
}
export declare class ScaleIconDeviceDevicePhone {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconDeviceDevicePhone, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconDeviceDevicePhone, "scale-icon-device-device-phone", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconDeviceDeviceRouter extends Components.ScaleIconDeviceDeviceRouter {
}
export declare class ScaleIconDeviceDeviceRouter {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconDeviceDeviceRouter, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconDeviceDeviceRouter, "scale-icon-device-device-router", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconDeviceDeviceTv extends Components.ScaleIconDeviceDeviceTv {
}
export declare class ScaleIconDeviceDeviceTv {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconDeviceDeviceTv, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconDeviceDeviceTv, "scale-icon-device-device-tv", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconDeviceDeviceWatch extends Components.ScaleIconDeviceDeviceWatch {
}
export declare class ScaleIconDeviceDeviceWatch {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconDeviceDeviceWatch, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconDeviceDeviceWatch, "scale-icon-device-device-watch", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconDeviceFixedLineServices extends Components.ScaleIconDeviceFixedLineServices {
}
export declare class ScaleIconDeviceFixedLineServices {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconDeviceFixedLineServices, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconDeviceFixedLineServices, "scale-icon-device-fixed-line-services", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconDeviceMediaReceiver extends Components.ScaleIconDeviceMediaReceiver {
}
export declare class ScaleIconDeviceMediaReceiver {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconDeviceMediaReceiver, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconDeviceMediaReceiver, "scale-icon-device-media-receiver", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconDeviceMobileDevicesCombination extends Components.ScaleIconDeviceMobileDevicesCombination {
}
export declare class ScaleIconDeviceMobileDevicesCombination {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconDeviceMobileDevicesCombination, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconDeviceMobileDevicesCombination, "scale-icon-device-mobile-devices-combination", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconDeviceMobileEquipment extends Components.ScaleIconDeviceMobileEquipment {
}
export declare class ScaleIconDeviceMobileEquipment {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconDeviceMobileEquipment, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconDeviceMobileEquipment, "scale-icon-device-mobile-equipment", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconDeviceMobilePhoneInsurance extends Components.ScaleIconDeviceMobilePhoneInsurance {
}
export declare class ScaleIconDeviceMobilePhoneInsurance {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconDeviceMobilePhoneInsurance, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconDeviceMobilePhoneInsurance, "scale-icon-device-mobile-phone-insurance", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconDeviceMobileServices extends Components.ScaleIconDeviceMobileServices {
}
export declare class ScaleIconDeviceMobileServices {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconDeviceMobileServices, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconDeviceMobileServices, "scale-icon-device-mobile-services", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconDeviceNoCamera extends Components.ScaleIconDeviceNoCamera {
}
export declare class ScaleIconDeviceNoCamera {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconDeviceNoCamera, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconDeviceNoCamera, "scale-icon-device-no-camera", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconDevicePhotoCamera extends Components.ScaleIconDevicePhotoCamera {
}
export declare class ScaleIconDevicePhotoCamera {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconDevicePhotoCamera, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconDevicePhotoCamera, "scale-icon-device-photo-camera", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconDeviceRemoteController extends Components.ScaleIconDeviceRemoteController {
}
export declare class ScaleIconDeviceRemoteController {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconDeviceRemoteController, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconDeviceRemoteController, "scale-icon-device-remote-controller", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconDeviceReplacementMobilephone extends Components.ScaleIconDeviceReplacementMobilephone {
}
export declare class ScaleIconDeviceReplacementMobilephone {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconDeviceReplacementMobilephone, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconDeviceReplacementMobilephone, "scale-icon-device-replacement-mobilephone", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconDeviceScreenRotate extends Components.ScaleIconDeviceScreenRotate {
}
export declare class ScaleIconDeviceScreenRotate {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconDeviceScreenRotate, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconDeviceScreenRotate, "scale-icon-device-screen-rotate", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconDeviceSmartSpeaker extends Components.ScaleIconDeviceSmartSpeaker {
}
export declare class ScaleIconDeviceSmartSpeaker {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconDeviceSmartSpeaker, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconDeviceSmartSpeaker, "scale-icon-device-smart-speaker", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconDeviceTvAndMobile extends Components.ScaleIconDeviceTvAndMobile {
}
export declare class ScaleIconDeviceTvAndMobile {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconDeviceTvAndMobile, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconDeviceTvAndMobile, "scale-icon-device-tv-and-mobile", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconHomeHome extends Components.ScaleIconHomeHome {
}
export declare class ScaleIconHomeHome {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconHomeHome, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconHomeHome, "scale-icon-home-home", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconHomeInternetAtHome extends Components.ScaleIconHomeInternetAtHome {
}
export declare class ScaleIconHomeInternetAtHome {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconHomeInternetAtHome, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconHomeInternetAtHome, "scale-icon-home-internet-at-home", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconHomeIot extends Components.ScaleIconHomeIot {
}
export declare class ScaleIconHomeIot {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconHomeIot, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconHomeIot, "scale-icon-home-iot", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconHomeNoWifi extends Components.ScaleIconHomeNoWifi {
}
export declare class ScaleIconHomeNoWifi {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconHomeNoWifi, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconHomeNoWifi, "scale-icon-home-no-wifi", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconHomeSmarthome extends Components.ScaleIconHomeSmarthome {
}
export declare class ScaleIconHomeSmarthome {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconHomeSmarthome, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconHomeSmarthome, "scale-icon-home-smarthome", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconHomeWifi extends Components.ScaleIconHomeWifi {
}
export declare class ScaleIconHomeWifi {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconHomeWifi, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconHomeWifi, "scale-icon-home-wifi", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconNavigationCircleTopUp extends Components.ScaleIconNavigationCircleTopUp {
}
export declare class ScaleIconNavigationCircleTopUp {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconNavigationCircleTopUp, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconNavigationCircleTopUp, "scale-icon-navigation-circle-top-up", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconNavigationCollapseDown extends Components.ScaleIconNavigationCollapseDown {
}
export declare class ScaleIconNavigationCollapseDown {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconNavigationCollapseDown, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconNavigationCollapseDown, "scale-icon-navigation-collapse-down", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconNavigationCollapseUp extends Components.ScaleIconNavigationCollapseUp {
}
export declare class ScaleIconNavigationCollapseUp {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconNavigationCollapseUp, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconNavigationCollapseUp, "scale-icon-navigation-collapse-up", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconNavigationExternalLink extends Components.ScaleIconNavigationExternalLink {
}
export declare class ScaleIconNavigationExternalLink {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconNavigationExternalLink, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconNavigationExternalLink, "scale-icon-navigation-external-link", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconNavigationInternalLink extends Components.ScaleIconNavigationInternalLink {
}
export declare class ScaleIconNavigationInternalLink {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconNavigationInternalLink, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconNavigationInternalLink, "scale-icon-navigation-internal-link", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconNavigationLeft extends Components.ScaleIconNavigationLeft {
}
export declare class ScaleIconNavigationLeft {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconNavigationLeft, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconNavigationLeft, "scale-icon-navigation-left", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconNavigationLocation extends Components.ScaleIconNavigationLocation {
}
export declare class ScaleIconNavigationLocation {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconNavigationLocation, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconNavigationLocation, "scale-icon-navigation-location", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconNavigationMyLocation extends Components.ScaleIconNavigationMyLocation {
}
export declare class ScaleIconNavigationMyLocation {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconNavigationMyLocation, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconNavigationMyLocation, "scale-icon-navigation-my-location", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconNavigationRight extends Components.ScaleIconNavigationRight {
}
export declare class ScaleIconNavigationRight {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconNavigationRight, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconNavigationRight, "scale-icon-navigation-right", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconNavigationStart extends Components.ScaleIconNavigationStart {
}
export declare class ScaleIconNavigationStart {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconNavigationStart, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconNavigationStart, "scale-icon-navigation-start", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconNavigationTopUp extends Components.ScaleIconNavigationTopUp {
}
export declare class ScaleIconNavigationTopUp {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconNavigationTopUp, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconNavigationTopUp, "scale-icon-navigation-top-up", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconProcessOrderStatus extends Components.ScaleIconProcessOrderStatus {
}
export declare class ScaleIconProcessOrderStatus {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconProcessOrderStatus, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconProcessOrderStatus, "scale-icon-process-order-status", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconProcessProcessing extends Components.ScaleIconProcessProcessing {
}
export declare class ScaleIconProcessProcessing {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconProcessProcessing, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconProcessProcessing, "scale-icon-process-processing", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconServiceDevicesService extends Components.ScaleIconServiceDevicesService {
}
export declare class ScaleIconServiceDevicesService {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconServiceDevicesService, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconServiceDevicesService, "scale-icon-service-devices-service", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconServiceMaintanance extends Components.ScaleIconServiceMaintanance {
}
export declare class ScaleIconServiceMaintanance {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconServiceMaintanance, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconServiceMaintanance, "scale-icon-service-maintanance", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconServiceServices extends Components.ScaleIconServiceServices {
}
export declare class ScaleIconServiceServices {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconServiceServices, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconServiceServices, "scale-icon-service-services", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconServiceSettings extends Components.ScaleIconServiceSettings {
}
export declare class ScaleIconServiceSettings {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconServiceSettings, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconServiceSettings, "scale-icon-service-settings", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconServiceSupport extends Components.ScaleIconServiceSupport {
}
export declare class ScaleIconServiceSupport {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconServiceSupport, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconServiceSupport, "scale-icon-service-support", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconTProductMagentaCloud extends Components.ScaleIconTProductMagentaCloud {
}
export declare class ScaleIconTProductMagentaCloud {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconTProductMagentaCloud, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconTProductMagentaCloud, "scale-icon-t-product-magenta-cloud", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconTProductMagentaTv extends Components.ScaleIconTProductMagentaTv {
}
export declare class ScaleIconTProductMagentaTv {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconTProductMagentaTv, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconTProductMagentaTv, "scale-icon-t-product-magenta-tv", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconTProductMagentaone extends Components.ScaleIconTProductMagentaone {
}
export declare class ScaleIconTProductMagentaone {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconTProductMagentaone, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconTProductMagentaone, "scale-icon-t-product-magentaone", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconTProductMeasureInternetSpeed extends Components.ScaleIconTProductMeasureInternetSpeed {
}
export declare class ScaleIconTProductMeasureInternetSpeed {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconTProductMeasureInternetSpeed, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconTProductMeasureInternetSpeed, "scale-icon-t-product-measure-internet-speed", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconTProductSeamlessConnectivity extends Components.ScaleIconTProductSeamlessConnectivity {
}
export declare class ScaleIconTProductSeamlessConnectivity {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconTProductSeamlessConnectivity, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconTProductSeamlessConnectivity, "scale-icon-t-product-seamless-connectivity", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconTProductTelekomShopB extends Components.ScaleIconTProductTelekomShopB {
}
export declare class ScaleIconTProductTelekomShopB {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconTProductTelekomShopB, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconTProductTelekomShopB, "scale-icon-t-product-telekom-shop-b", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconTProductUsage extends Components.ScaleIconTProductUsage {
}
export declare class ScaleIconTProductUsage {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconTProductUsage, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconTProductUsage, "scale-icon-t-product-usage", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconUserFileAnalytics extends Components.ScaleIconUserFileAnalytics {
}
export declare class ScaleIconUserFileAnalytics {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconUserFileAnalytics, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconUserFileAnalytics, "scale-icon-user-file-analytics", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconUserFileAttachment extends Components.ScaleIconUserFileAttachment {
}
export declare class ScaleIconUserFileAttachment {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconUserFileAttachment, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconUserFileAttachment, "scale-icon-user-file-attachment", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconUserFileAudioFile extends Components.ScaleIconUserFileAudioFile {
}
export declare class ScaleIconUserFileAudioFile {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconUserFileAudioFile, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconUserFileAudioFile, "scale-icon-user-file-audio-file", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconUserFileBilling extends Components.ScaleIconUserFileBilling {
}
export declare class ScaleIconUserFileBilling {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconUserFileBilling, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconUserFileBilling, "scale-icon-user-file-billing", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconUserFileBussinesUsers extends Components.ScaleIconUserFileBussinesUsers {
}
export declare class ScaleIconUserFileBussinesUsers {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconUserFileBussinesUsers, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconUserFileBussinesUsers, "scale-icon-user-file-bussines-users", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconUserFileCommunities extends Components.ScaleIconUserFileCommunities {
}
export declare class ScaleIconUserFileCommunities {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconUserFileCommunities, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconUserFileCommunities, "scale-icon-user-file-communities", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconUserFileContacts extends Components.ScaleIconUserFileContacts {
}
export declare class ScaleIconUserFileContacts {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconUserFileContacts, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconUserFileContacts, "scale-icon-user-file-contacts", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconUserFileContracts extends Components.ScaleIconUserFileContracts {
}
export declare class ScaleIconUserFileContracts {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconUserFileContracts, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconUserFileContracts, "scale-icon-user-file-contracts", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconUserFileFamilies extends Components.ScaleIconUserFileFamilies {
}
export declare class ScaleIconUserFileFamilies {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconUserFileFamilies, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconUserFileFamilies, "scale-icon-user-file-families", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconUserFileHandshake extends Components.ScaleIconUserFileHandshake {
}
export declare class ScaleIconUserFileHandshake {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconUserFileHandshake, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconUserFileHandshake, "scale-icon-user-file-handshake", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconUserFileIdCard extends Components.ScaleIconUserFileIdCard {
}
export declare class ScaleIconUserFileIdCard {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconUserFileIdCard, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconUserFileIdCard, "scale-icon-user-file-id-card", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconUserFileImageFile extends Components.ScaleIconUserFileImageFile {
}
export declare class ScaleIconUserFileImageFile {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconUserFileImageFile, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconUserFileImageFile, "scale-icon-user-file-image-file", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconUserFileLogout extends Components.ScaleIconUserFileLogout {
}
export declare class ScaleIconUserFileLogout {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconUserFileLogout, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconUserFileLogout, "scale-icon-user-file-logout", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconUserFilePdfFile extends Components.ScaleIconUserFilePdfFile {
}
export declare class ScaleIconUserFilePdfFile {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconUserFilePdfFile, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconUserFilePdfFile, "scale-icon-user-file-pdf-file", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconUserFileSwitchUsers extends Components.ScaleIconUserFileSwitchUsers {
}
export declare class ScaleIconUserFileSwitchUsers {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconUserFileSwitchUsers, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconUserFileSwitchUsers, "scale-icon-user-file-switch-users", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconUserFileUser extends Components.ScaleIconUserFileUser {
}
export declare class ScaleIconUserFileUser {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconUserFileUser, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconUserFileUser, "scale-icon-user-file-user", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconUserFileVideos extends Components.ScaleIconUserFileVideos {
}
export declare class ScaleIconUserFileVideos {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconUserFileVideos, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconUserFileVideos, "scale-icon-user-file-videos", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconWeatherCloudy extends Components.ScaleIconWeatherCloudy {
}
export declare class ScaleIconWeatherCloudy {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconWeatherCloudy, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconWeatherCloudy, "scale-icon-weather-cloudy", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconWeatherCloudyRain extends Components.ScaleIconWeatherCloudyRain {
}
export declare class ScaleIconWeatherCloudyRain {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconWeatherCloudyRain, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconWeatherCloudyRain, "scale-icon-weather-cloudy-rain", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconWeatherCloudySleet extends Components.ScaleIconWeatherCloudySleet {
}
export declare class ScaleIconWeatherCloudySleet {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconWeatherCloudySleet, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconWeatherCloudySleet, "scale-icon-weather-cloudy-sleet", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconWeatherCloudySnow extends Components.ScaleIconWeatherCloudySnow {
}
export declare class ScaleIconWeatherCloudySnow {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconWeatherCloudySnow, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconWeatherCloudySnow, "scale-icon-weather-cloudy-snow", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconWeatherCloudyThunderRain extends Components.ScaleIconWeatherCloudyThunderRain {
}
export declare class ScaleIconWeatherCloudyThunderRain {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconWeatherCloudyThunderRain, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconWeatherCloudyThunderRain, "scale-icon-weather-cloudy-thunder-rain", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconWeatherCloudyThunderSnow extends Components.ScaleIconWeatherCloudyThunderSnow {
}
export declare class ScaleIconWeatherCloudyThunderSnow {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconWeatherCloudyThunderSnow, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconWeatherCloudyThunderSnow, "scale-icon-weather-cloudy-thunder-snow", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconWeatherHeavySleet extends Components.ScaleIconWeatherHeavySleet {
}
export declare class ScaleIconWeatherHeavySleet {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconWeatherHeavySleet, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconWeatherHeavySleet, "scale-icon-weather-heavy-sleet", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconWeatherHeavySnow extends Components.ScaleIconWeatherHeavySnow {
}
export declare class ScaleIconWeatherHeavySnow {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconWeatherHeavySnow, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconWeatherHeavySnow, "scale-icon-weather-heavy-snow", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconWeatherMoonClear extends Components.ScaleIconWeatherMoonClear {
}
export declare class ScaleIconWeatherMoonClear {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconWeatherMoonClear, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconWeatherMoonClear, "scale-icon-weather-moon-clear", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconWeatherMoonCloudyA extends Components.ScaleIconWeatherMoonCloudyA {
}
export declare class ScaleIconWeatherMoonCloudyA {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconWeatherMoonCloudyA, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconWeatherMoonCloudyA, "scale-icon-weather-moon-cloudy-a", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconWeatherMoonCloudyB extends Components.ScaleIconWeatherMoonCloudyB {
}
export declare class ScaleIconWeatherMoonCloudyB {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconWeatherMoonCloudyB, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconWeatherMoonCloudyB, "scale-icon-weather-moon-cloudy-b", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconWeatherMoonRain extends Components.ScaleIconWeatherMoonRain {
}
export declare class ScaleIconWeatherMoonRain {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconWeatherMoonRain, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconWeatherMoonRain, "scale-icon-weather-moon-rain", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconWeatherMoonSleet extends Components.ScaleIconWeatherMoonSleet {
}
export declare class ScaleIconWeatherMoonSleet {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconWeatherMoonSleet, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconWeatherMoonSleet, "scale-icon-weather-moon-sleet", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconWeatherMoonSnow extends Components.ScaleIconWeatherMoonSnow {
}
export declare class ScaleIconWeatherMoonSnow {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconWeatherMoonSnow, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconWeatherMoonSnow, "scale-icon-weather-moon-snow", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconWeatherMoonThunderRain extends Components.ScaleIconWeatherMoonThunderRain {
}
export declare class ScaleIconWeatherMoonThunderRain {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconWeatherMoonThunderRain, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconWeatherMoonThunderRain, "scale-icon-weather-moon-thunder-rain", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconWeatherMoonThunderSnow extends Components.ScaleIconWeatherMoonThunderSnow {
}
export declare class ScaleIconWeatherMoonThunderSnow {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconWeatherMoonThunderSnow, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconWeatherMoonThunderSnow, "scale-icon-weather-moon-thunder-snow", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconWeatherOvercast extends Components.ScaleIconWeatherOvercast {
}
export declare class ScaleIconWeatherOvercast {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconWeatherOvercast, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconWeatherOvercast, "scale-icon-weather-overcast", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconWeatherRain extends Components.ScaleIconWeatherRain {
}
export declare class ScaleIconWeatherRain {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconWeatherRain, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconWeatherRain, "scale-icon-weather-rain", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconWeatherSunny extends Components.ScaleIconWeatherSunny {
}
export declare class ScaleIconWeatherSunny {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconWeatherSunny, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconWeatherSunny, "scale-icon-weather-sunny", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconWeatherThunderRain extends Components.ScaleIconWeatherThunderRain {
}
export declare class ScaleIconWeatherThunderRain {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconWeatherThunderRain, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconWeatherThunderRain, "scale-icon-weather-thunder-rain", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
export declare interface ScaleIconWeatherThunderSnow extends Components.ScaleIconWeatherThunderSnow {
}
export declare class ScaleIconWeatherThunderSnow {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleIconWeatherThunderSnow, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleIconWeatherThunderSnow, "scale-icon-weather-thunder-snow", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "decorative": "decorative"; "fill": "fill"; "selected": "selected"; "size": "size"; }, {}, never, ["*"]>;
}
import { Input as IInput } from '@telekom/scale-components/dist/types/components/input/input';
export declare interface ScaleInput extends Components.ScaleInput {
}
export declare class ScaleInput {
    protected z: NgZone;
    /** Emitted when a keyboard input occurred. */
    "scale-input": IInput['scaleInput'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleInput: IInput['scaleInputLegacy'];
    /** Emitted when the value has changed. */
    "scale-change": IInput['scaleChange'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleChange: IInput['scaleChangeLegacy'];
    /** Emitted when the input has focus. */
    "scale-focus": IInput['scaleFocus'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleFocus: IInput['scaleFocusLegacy'];
    /** Emitted when the input loses focus. */
    "scale-blur": IInput['scaleBlur'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleBlur: IInput['scaleBlurLegacy'];
    /** Emitted on keydown. */
    "scale-keydown": IInput['scaleKeyDown'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleKeyDown: IInput['scaleKeyDownLegacy'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleInput, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleInput, "scale-input", never, { "checked": "checked"; "cols": "cols"; "controlled": "controlled"; "counter": "counter"; "disabled": "disabled"; "helperText": "helperText"; "icon": "icon"; "inputId": "inputId"; "invalid": "invalid"; "label": "label"; "maxLength": "maxLength"; "minLength": "minLength"; "multiple": "multiple"; "name": "name"; "placeholder": "placeholder"; "required": "required"; "resize": "resize"; "rows": "rows"; "size": "size"; "status": "status"; "styles": "styles"; "transparent": "transparent"; "type": "type"; "value": "value"; "variant": "variant"; "visibleSize": "visibleSize"; }, { "scale-input": "scale-input"; "scaleInput": "scaleInput"; "scale-change": "scale-change"; "scaleChange": "scaleChange"; "scale-focus": "scale-focus"; "scaleFocus": "scaleFocus"; "scale-blur": "scale-blur"; "scaleBlur": "scaleBlur"; "scale-keydown": "scale-keydown"; "scaleKeyDown": "scaleKeyDown"; }, never, ["*"]>;
}
export declare interface ScaleLink extends Components.ScaleLink {
}
export declare class ScaleLink {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleLink, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleLink, "scale-link", never, { "disabled": "disabled"; "download": "download"; "href": "href"; "hreflang": "hreflang"; "iconPosition": "iconPosition"; "innerTabindex": "innerTabindex"; "omitUnderline": "omitUnderline"; "ping": "ping"; "referrerpolicy": "referrerpolicy"; "rel": "rel"; "styles": "styles"; "target": "target"; "type": "type"; }, {}, never, ["*"]>;
}
export declare interface ScaleList extends Components.ScaleList {
}
export declare class ScaleList {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleList, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleList, "scale-list", never, { "ordered": "ordered"; "styles": "styles"; }, {}, never, ["*"]>;
}
export declare interface ScaleListItem extends Components.ScaleListItem {
}
export declare class ScaleListItem {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleListItem, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleListItem, "scale-list-item", never, { "index": "index"; "marker": "marker"; "ordered": "ordered"; "styles": "styles"; }, {}, never, ["*"]>;
}
export declare interface ScaleLoadingSpinner extends Components.ScaleLoadingSpinner {
}
export declare class ScaleLoadingSpinner {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleLoadingSpinner, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleLoadingSpinner, "scale-loading-spinner", never, { "alignment": "alignment"; "size": "size"; "text": "text"; "variant": "variant"; }, {}, never, ["*"]>;
}
export declare interface ScaleLogo extends Components.ScaleLogo {
}
export declare class ScaleLogo {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleLogo, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleLogo, "scale-logo", never, { "accessibilityTitle": "accessibilityTitle"; "focusable": "focusable"; "href": "href"; "language": "language"; "logoAriaDescribedBy": "logoAriaDescribedBy"; "logoTitle": "logoTitle"; "scrollIntoViewOnFocus": "scrollIntoViewOnFocus"; "size": "size"; "styles": "styles"; "transparent": "transparent"; "variant": "variant"; }, {}, never, ["*"]>;
}
export declare interface ScaleLogoSvg extends Components.ScaleLogoSvg {
}
export declare class ScaleLogoSvg {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleLogoSvg, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleLogoSvg, "scale-logo-svg", never, { "accessibilityTitle": "accessibilityTitle"; "color": "color"; "focusable": "focusable"; "language": "language"; "role": "role"; }, {}, never, ["*"]>;
}
export declare interface ScaleMenuFlyout extends Components.ScaleMenuFlyout {
}
export declare class ScaleMenuFlyout {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleMenuFlyout, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleMenuFlyout, "scale-menu-flyout", never, { "closeOnSelect": "closeOnSelect"; "direction": "direction"; "styles": "styles"; }, {}, never, ["*"]>;
}
export declare interface ScaleMenuFlyoutDivider extends Components.ScaleMenuFlyoutDivider {
}
export declare class ScaleMenuFlyoutDivider {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleMenuFlyoutDivider, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleMenuFlyoutDivider, "scale-menu-flyout-divider", never, { "styles": "styles"; }, {}, never, ["*"]>;
}
import { MenuFlyoutItem as IMenuFlyoutItem } from '@telekom/scale-components/dist/types/components/menu-flyout-item/menu-flyout-item';
export declare interface ScaleMenuFlyoutItem extends Components.ScaleMenuFlyoutItem {
}
export declare class ScaleMenuFlyoutItem {
    protected z: NgZone;
    /** Event triggered when menu item selected */
    "scale-select": IMenuFlyoutItem['scaleSelect'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleSelect: IMenuFlyoutItem['scaleSelectLegacy'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleMenuFlyoutItem, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleMenuFlyoutItem, "scale-menu-flyout-item", never, { "active": "active"; "cascade": "cascade"; "checkable": "checkable"; "checked": "checked"; "disabled": "disabled"; "styles": "styles"; "value": "value"; }, { "scale-select": "scale-select"; "scaleSelect": "scaleSelect"; }, never, ["*"]>;
}
import { MenuFlyoutList as IMenuFlyoutList } from '@telekom/scale-components/dist/types/components/menu-flyout-list/menu-flyout-list';
export declare interface ScaleMenuFlyoutList extends Components.ScaleMenuFlyoutList {
}
export declare class ScaleMenuFlyoutList {
    protected z: NgZone;
    /** Event triggered when menu list opened */
    "scale-open": IMenuFlyoutList['scaleOpen'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleOpen: IMenuFlyoutList['scaleOpenLegacy'];
    /** Event triggered when menu list closed */
    "scale-close": IMenuFlyoutList['scaleClose'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleClose: IMenuFlyoutList['scaleCloseLegacy'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleMenuFlyoutList, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleMenuFlyoutList, "scale-menu-flyout-list", never, { "active": "active"; "closeOnSelect": "closeOnSelect"; "direction": "direction"; "opened": "opened"; "styles": "styles"; "trigger": "trigger"; }, { "scale-open": "scale-open"; "scaleOpen": "scaleOpen"; "scale-close": "scale-close"; "scaleClose": "scaleClose"; }, never, ["*"]>;
}
import { Modal as IModal } from '@telekom/scale-components/dist/types/components/modal/modal';
export declare interface ScaleModal extends Components.ScaleModal {
}
export declare class ScaleModal {
    protected z: NgZone;
    /** Fires when the modal has been opened */
    "scale-open": IModal['scaleOpen'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleOpen: IModal['scaleOpenLegacy'];
    /** Fires on every close attempt. Calling `event.preventDefault()` will prevent the modal from closing */
    "scale-before-close": IModal['scaleBeforeClose'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleBeforeClose: IModal['scaleBeforeCloseLegacy'];
    /** Fires when the modal has been closed */
    "scale-close": IModal['scaleClose'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleClose: IModal['scaleCloseLegacy'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleModal, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleModal, "scale-modal", never, { "alignActions": "alignActions"; "allowInjectingStyleToBody": "allowInjectingStyleToBody"; "closeButtonLabel": "closeButtonLabel"; "closeButtonTitle": "closeButtonTitle"; "duration": "duration"; "heading": "heading"; "opened": "opened"; "size": "size"; "styles": "styles"; }, { "scale-open": "scale-open"; "scaleOpen": "scaleOpen"; "scale-before-close": "scale-before-close"; "scaleBeforeClose": "scaleBeforeClose"; "scale-close": "scale-close"; "scaleClose": "scaleClose"; }, never, ["*"]>;
}
export declare interface ScaleNavIcon extends Components.ScaleNavIcon {
}
export declare class ScaleNavIcon {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleNavIcon, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleNavIcon, "scale-nav-icon", never, { "active": "active"; "badge": "badge"; "badgeLabel": "badgeLabel"; "clickLink": "clickLink"; "href": "href"; "icon": "icon"; "isActive": "isActive"; "isMobileMenuOpen": "isMobileMenuOpen"; "mobileMenuOpen": "mobileMenuOpen"; "refMobileMenuToggle": "refMobileMenuToggle"; "refMobileUserMenuToggle": "refMobileUserMenuToggle"; "refUserMenuToggle": "refUserMenuToggle"; }, {}, never, ["*"]>;
}
export declare interface ScaleNavMain extends Components.ScaleNavMain {
}
export declare class ScaleNavMain {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleNavMain, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleNavMain, "scale-nav-main", never, { "active": "active"; "clickLink": "clickLink"; "href": "href"; "isActive": "isActive"; "isMegaMenuVisible": "isMegaMenuVisible"; "megaMenuVisible": "megaMenuVisible"; "name": "name"; "popup": "popup"; }, {}, never, ["*"]>;
}
export declare interface ScaleNavSegment extends Components.ScaleNavSegment {
}
export declare class ScaleNavSegment {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleNavSegment, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleNavSegment, "scale-nav-segment", never, { "active": "active"; "href": "href"; "isActive": "isActive"; }, {}, never, ["*"]>;
}
export declare interface ScaleNotificationBadge extends Components.ScaleNotificationBadge {
}
export declare class ScaleNotificationBadge {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleNotificationBadge, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleNotificationBadge, "scale-notification-badge", never, { "clickHandler": "clickHandler"; "label": "label"; "maxCharacters": "maxCharacters"; "type": "type"; }, {}, never, ["*"]>;
}
import { NotificationBanner as INotificationBanner } from '@telekom/scale-components/dist/types/components/notification-banner/notification-banner';
export declare interface ScaleNotificationBanner extends Components.ScaleNotificationBanner {
}
export declare class ScaleNotificationBanner {
    protected z: NgZone;
    /** Fires when the notification banner has been dismissed */
    "scale-close": INotificationBanner['scaleClose'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleNotificationBanner, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleNotificationBanner, "scale-notification-banner", never, { "autoHide": "autoHide"; "autoHideDuration": "autoHideDuration"; "dismissible": "dismissible"; "href": "href"; "opened": "opened"; "variant": "variant"; }, { "scale-close": "scale-close"; }, never, ["*"]>;
}
import { NotificationMessage as INotificationMessage } from '@telekom/scale-components/dist/types/components/notification-message/notification-message';
export declare interface ScaleNotificationMessage extends Components.ScaleNotificationMessage {
}
export declare class ScaleNotificationMessage {
    protected z: NgZone;
    /** Fires when the notification message has been dismissed */
    "scale-close": INotificationMessage['scaleClose'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleNotificationMessage, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleNotificationMessage, "scale-notification-message", never, { "autoHide": "autoHide"; "autoHideDuration": "autoHideDuration"; "dismissible": "dismissible"; "opened": "opened"; "variant": "variant"; }, { "scale-close": "scale-close"; }, never, ["*"]>;
}
export declare interface ScaleNotificationToast extends Components.ScaleNotificationToast {
}
export declare class ScaleNotificationToast {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleNotificationToast, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleNotificationToast, "scale-notification-toast", never, { "alignment": "alignment"; "animated": "animated"; "autoHide": "autoHide"; "autoHideDuration": "autoHideDuration"; "fadeDuration": "fadeDuration"; "href": "href"; "opened": "opened"; "positionHorizontal": "positionHorizontal"; "positionVertical": "positionVertical"; "story": "story"; "styles": "styles"; "variant": "variant"; }, {}, never, ["*"]>;
}
import { Pagination as IPagination } from '@telekom/scale-components/dist/types/components/pagination/pagination';
export declare interface ScalePagination extends Components.ScalePagination {
}
export declare class ScalePagination {
    protected z: NgZone;
    /** Event triggered every time the data is edited, changing original rows data */
    "scale-pagination": IPagination['scalePagination'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scalePagination: IPagination['scalePaginationLegacy'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScalePagination, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScalePagination, "scale-pagination", never, { "ariaLabelFirstPage": "ariaLabelFirstPage"; "ariaLabelLastPage": "ariaLabelLastPage"; "ariaLabelNextPage": "ariaLabelNextPage"; "ariaLabelPreviousPage": "ariaLabelPreviousPage"; "hideBorder": "hideBorder"; "hideBorders": "hideBorders"; "pageSize": "pageSize"; "size": "size"; "small": "small"; "startElement": "startElement"; "styles": "styles"; "totalElements": "totalElements"; }, { "scale-pagination": "scale-pagination"; "scalePagination": "scalePagination"; }, never, ["*"]>;
}
export declare interface ScaleProgressBar extends Components.ScaleProgressBar {
}
export declare class ScaleProgressBar {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleProgressBar, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleProgressBar, "scale-progress-bar", never, { "busy": "busy"; "customColor": "customColor"; "disabled": "disabled"; "hasError": "hasError"; "icon": "icon"; "label": "label"; "mute": "mute"; "percentage": "percentage"; "progressBarId": "progressBarId"; "showStatus": "showStatus"; "statusDescription": "statusDescription"; "statusInside": "statusInside"; "strokeWidth": "strokeWidth"; "styles": "styles"; }, {}, never, ["*"]>;
}
import { RadioButton as IRadioButton } from '@telekom/scale-components/dist/types/components/radio-button/radio-button';
export declare interface ScaleRadioButton extends Components.ScaleRadioButton {
}
export declare class ScaleRadioButton {
    protected z: NgZone;
    /**  */
    "scale-change": IRadioButton['scaleChange'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleChange: IRadioButton['scaleChangeLegacy'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleRadioButton, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleRadioButton, "scale-radio-button", never, { "checked": "checked"; "disabled": "disabled"; "helperText": "helperText"; "inputId": "inputId"; "invalid": "invalid"; "label": "label"; "name": "name"; "status": "status"; "styles": "styles"; "value": "value"; }, { "scale-change": "scale-change"; "scaleChange": "scaleChange"; }, never, ["*"]>;
}
export declare interface ScaleRadioButtonGroup extends Components.ScaleRadioButtonGroup {
}
export declare class ScaleRadioButtonGroup {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleRadioButtonGroup, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleRadioButtonGroup, "scale-radio-button-group", never, { "helperText": "helperText"; "invalid": "invalid"; "label": "label"; "status": "status"; }, {}, never, ["*"]>;
}
import { RatingStars as IRatingStars } from '@telekom/scale-components/dist/types/components/rating-stars/rating-stars';
export declare interface ScaleRatingStars extends Components.ScaleRatingStars {
}
export declare class ScaleRatingStars {
    protected z: NgZone;
    /** Emitted when the rating has changed */
    "scale-change": IRatingStars['scaleChange'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleChange: IRatingStars['scaleChangeLegacy'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleRatingStars, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleRatingStars, "scale-rating-stars", never, { "ariaLabelTranslation": "ariaLabelTranslation"; "disabled": "disabled"; "hideLabel": "hideLabel"; "infoText": "infoText"; "label": "label"; "max": "max"; "maxRating": "maxRating"; "minRating": "minRating"; "rating": "rating"; "readonly": "readonly"; "size": "size"; "starSize": "starSize"; }, { "scale-change": "scale-change"; "scaleChange": "scaleChange"; }, never, ["*"]>;
}
export declare interface ScaleSidebarNav extends Components.ScaleSidebarNav {
}
export declare class ScaleSidebarNav {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleSidebarNav, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleSidebarNav, "scale-sidebar-nav", never, { "ariaLabelSidebarNav": "ariaLabelSidebarNav"; "collapsible": "collapsible"; "collapsibleLabel": "collapsibleLabel"; "collapsibleMediaQuery": "collapsibleMediaQuery"; "styles": "styles"; }, {}, never, ["*"]>;
}
export declare interface ScaleSidebarNavCollapsible extends Components.ScaleSidebarNavCollapsible {
}
export declare class ScaleSidebarNavCollapsible {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleSidebarNavCollapsible, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleSidebarNavCollapsible, "scale-sidebar-nav-collapsible", never, { "active": "active"; "bold": "bold"; "condensed": "condensed"; "expanded": "expanded"; "href": "href"; "label": "label"; "nestingLevel": "nestingLevel"; "styles": "styles"; "tag": "tag"; }, {}, never, ["*"]>;
}
export declare interface ScaleSidebarNavItem extends Components.ScaleSidebarNavItem {
}
export declare class ScaleSidebarNavItem {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleSidebarNavItem, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleSidebarNavItem, "scale-sidebar-nav-item", never, { "active": "active"; "bold": "bold"; "condensed": "condensed"; "current": "current"; "nestingLevel": "nestingLevel"; "styles": "styles"; }, {}, never, ["*"]>;
}
import { Slider as ISlider } from '@telekom/scale-components/dist/types/components/slider/slider';
export declare interface ScaleSlider extends Components.ScaleSlider {
}
export declare class ScaleSlider {
    protected z: NgZone;
    /**  */
    "scale-change": ISlider['scaleChange'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleChange: ISlider['scaleChangeLegacy'];
    /**  */
    "scale-input": ISlider['scaleInput'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleInput: ISlider['scaleInputLegacy'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleSlider, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleSlider, "scale-slider", never, { "customColor": "customColor"; "decimals": "decimals"; "disabled": "disabled"; "label": "label"; "max": "max"; "min": "min"; "name": "name"; "showValue": "showValue"; "sliderId": "sliderId"; "step": "step"; "styles": "styles"; "thumbLarge": "thumbLarge"; "trackSmall": "trackSmall"; "unit": "unit"; "value": "value"; }, { "scale-change": "scale-change"; "scaleChange": "scaleChange"; "scale-input": "scale-input"; "scaleInput": "scaleInput"; }, never, ["*"]>;
}
export declare interface ScaleSsrSlotFix extends Components.ScaleSsrSlotFix {
}
export declare class ScaleSsrSlotFix {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleSsrSlotFix, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleSsrSlotFix, "scale-ssr-slot-fix", never, {}, {}, never, ["*"]>;
}
import { Switch as ISwitch } from '@telekom/scale-components/dist/types/components/switch/switch';
export declare interface ScaleSwitch extends Components.ScaleSwitch {
}
export declare class ScaleSwitch {
    protected z: NgZone;
    /** Emitted when the switch was clicked */
    "scale-change": ISwitch['scaleChange'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleChange: ISwitch['scaleChangeLegacy'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleSwitch, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleSwitch, "scale-switch", never, { "checked": "checked"; "disabled": "disabled"; "inputId": "inputId"; "label": "label"; "name": "name"; "styles": "styles"; }, { "scale-change": "scale-change"; "scaleChange": "scaleChange"; }, never, ["*"]>;
}
export declare interface ScaleTabHeader extends Components.ScaleTabHeader {
}
export declare class ScaleTabHeader {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleTabHeader, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleTabHeader, "scale-tab-header", never, { "disabled": "disabled"; "selected": "selected"; "size": "size"; "small": "small"; "styles": "styles"; }, {}, never, ["*"]>;
}
export declare interface ScaleTabNav extends Components.ScaleTabNav {
}
export declare class ScaleTabNav {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleTabNav, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleTabNav, "scale-tab-nav", never, { "size": "size"; "small": "small"; "styles": "styles"; }, {}, never, ["*"]>;
}
export declare interface ScaleTabPanel extends Components.ScaleTabPanel {
}
export declare class ScaleTabPanel {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleTabPanel, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleTabPanel, "scale-tab-panel", never, { "size": "size"; "small": "small"; "styles": "styles"; }, {}, never, ["*"]>;
}
export declare interface ScaleTable extends Components.ScaleTable {
}
export declare class ScaleTable {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleTable, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleTable, "scale-table", never, { "showSort": "showSort"; "size": "size"; "striped": "striped"; "styles": "styles"; }, {}, never, ["*"]>;
}
import { Tag as ITag } from '@telekom/scale-components/dist/types/components/tag/tag';
export declare interface ScaleTag extends Components.ScaleTag {
}
export declare class ScaleTag {
    protected z: NgZone;
    /** (optional) Close icon click event */
    "scale-close": ITag['scaleClose'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleClose: ITag['scaleCloseLegacy'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleTag, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleTag, "scale-tag", never, { "disabled": "disabled"; "dismissText": "dismissText"; "dismissable": "dismissable"; "href": "href"; "size": "size"; "styles": "styles"; "target": "target"; "variant": "variant"; }, { "scale-close": "scale-close"; "scaleClose": "scaleClose"; }, never, ["*"]>;
}
import { TextField as ITextField } from '@telekom/scale-components/dist/types/components/text-field/text-field';
export declare interface ScaleTextField extends Components.ScaleTextField {
}
export declare class ScaleTextField {
    protected z: NgZone;
    /** Emitted when a keyboard input occurred. */
    "scale-input": ITextField['scaleInput'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleInput: ITextField['scaleInputLegacy'];
    /** Emitted when the value has changed. */
    "scale-change": ITextField['scaleChange'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleChange: ITextField['scaleChangeLegacy'];
    /** Emitted when the input has focus. */
    "scale-focus": ITextField['scaleFocus'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleFocus: ITextField['scaleFocusLegacy'];
    /** Emitted when the input loses focus. */
    "scale-blur": ITextField['scaleBlur'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleBlur: ITextField['scaleBlurLegacy'];
    /** Emitted on keydown. */
    "scale-keydown": ITextField['scaleKeyDown'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleKeydown: ITextField['scaleKeyDownLegacy'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleTextField, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleTextField, "scale-text-field", never, { "counter": "counter"; "disabled": "disabled"; "helperText": "helperText"; "inputAutofocus": "inputAutofocus"; "inputId": "inputId"; "invalid": "invalid"; "label": "label"; "list": "list"; "max": "max"; "maxLength": "maxLength"; "min": "min"; "minLength": "minLength"; "name": "name"; "placeholder": "placeholder"; "readonly": "readonly"; "required": "required"; "size": "size"; "status": "status"; "step": "step"; "styles": "styles"; "transparent": "transparent"; "type": "type"; "value": "value"; }, { "scale-input": "scale-input"; "scaleInput": "scaleInput"; "scale-change": "scale-change"; "scaleChange": "scaleChange"; "scale-focus": "scale-focus"; "scaleFocus": "scaleFocus"; "scale-blur": "scale-blur"; "scaleBlur": "scaleBlur"; "scale-keydown": "scale-keydown"; "scaleKeydown": "scaleKeydown"; }, never, ["*"]>;
}
import { Textarea as ITextarea } from '@telekom/scale-components/dist/types/components/textarea/textarea';
export declare interface ScaleTextarea extends Components.ScaleTextarea {
}
export declare class ScaleTextarea {
    protected z: NgZone;
    /** Emitted when a keyboard input occurred. */
    "scale-input": ITextarea['scaleInput'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleInput: ITextarea['scaleInputLegacy'];
    /** Emitted when the value has changed. */
    "scale-change": ITextarea['scaleChange'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleChange: ITextarea['scaleChangeLegacy'];
    /** Emitted when the input has focus. */
    "scale-focus": ITextarea['scaleFocus'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleFocus: ITextarea['scaleFocusLegacy'];
    /** Emitted when the input loses focus. */
    "scale-blur": ITextarea['scaleBlur'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleBlur: ITextarea['scaleBlurLegacy'];
    /** Emitted on keydown. */
    "scale-keydown": ITextarea['scaleKeyDown'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleKeyDown: ITextarea['scaleKeyDownLegacy'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleTextarea, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleTextarea, "scale-textarea", never, { "cols": "cols"; "counter": "counter"; "disabled": "disabled"; "helperText": "helperText"; "inputAutofocus": "inputAutofocus"; "inputId": "inputId"; "invalid": "invalid"; "label": "label"; "maxLength": "maxLength"; "minLength": "minLength"; "name": "name"; "placeholder": "placeholder"; "readonly": "readonly"; "required": "required"; "resize": "resize"; "rows": "rows"; "status": "status"; "styles": "styles"; "transparent": "transparent"; "value": "value"; }, { "scale-input": "scale-input"; "scaleInput": "scaleInput"; "scale-change": "scale-change"; "scaleChange": "scaleChange"; "scale-focus": "scale-focus"; "scaleFocus": "scaleFocus"; "scale-blur": "scale-blur"; "scaleBlur": "scaleBlur"; "scale-keydown": "scale-keydown"; "scaleKeyDown": "scaleKeyDown"; }, never, ["*"]>;
}
export declare interface ScaleToast extends Components.ScaleToast {
}
export declare class ScaleToast {
    protected z: NgZone;
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleToast, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleToast, "scale-toast", never, { "animated": "animated"; "autoHide": "autoHide"; "fadeDuration": "fadeDuration"; "opened": "opened"; "positionRight": "positionRight"; "positionTop": "positionTop"; "size": "size"; "styles": "styles"; "time": "time"; "variant": "variant"; }, {}, never, ["*"]>;
}
import { ToggleButton as IToggleButton } from '@telekom/scale-components/dist/types/components/toggle-button/toggle-button';
export declare interface ScaleToggleButton extends Components.ScaleToggleButton {
}
export declare class ScaleToggleButton {
    protected z: NgZone;
    /** Emitted when button is clicked */
    "scale-click": IToggleButton['scaleClick'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleClick: IToggleButton['scaleClickLegacy'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleToggleButton, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleToggleButton, "scale-toggle-button", never, { "ariaDescriptionTranslation": "ariaDescriptionTranslation"; "ariaLabelToggleButton": "ariaLabelToggleButton"; "ariaLangDeselected": "ariaLangDeselected"; "ariaLangSelected": "ariaLangSelected"; "background": "background"; "colorScheme": "colorScheme"; "disabled": "disabled"; "hideBorder": "hideBorder"; "iconOnly": "iconOnly"; "iconPosition": "iconPosition"; "position": "position"; "radius": "radius"; "selected": "selected"; "size": "size"; "styles": "styles"; "toggleButtonId": "toggleButtonId"; "variant": "variant"; }, { "scale-click": "scale-click"; "scaleClick": "scaleClick"; }, never, ["*"]>;
}
import { ToggleGroup as IToggleGroup } from '@telekom/scale-components/dist/types/components/toggle-group/toggle-group';
export declare interface ScaleToggleGroup extends Components.ScaleToggleGroup {
}
export declare class ScaleToggleGroup {
    protected z: NgZone;
    /** Emitted when button is clicked */
    "scale-change": IToggleGroup['scaleChange'];
    /**  @deprecated in v3 in favor of kebab-case event names*/
    scaleChange: IToggleGroup['scaleChangeLegacy'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleToggleGroup, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleToggleGroup, "scale-toggle-group", never, { "ariaLabelTranslation": "ariaLabelTranslation"; "background": "background"; "colorScheme": "colorScheme"; "disabled": "disabled"; "fullWidth": "fullWidth"; "hideBorder": "hideBorder"; "singleSelect": "singleSelect"; "size": "size"; "styles": "styles"; "variant": "variant"; }, { "scale-change": "scale-change"; "scaleChange": "scaleChange"; }, never, ["*"]>;
}
import { Tooltip as ITooltip } from '@telekom/scale-components/dist/types/components/tooltip/tooltip';
export declare interface ScaleTooltip extends Components.ScaleTooltip {
}
export declare class ScaleTooltip {
    protected z: NgZone;
    /**  */
    "scale-before-show": ITooltip['tooltipBeforeShow'];
    /**  */
    "scale-show": ITooltip['tooltipShow'];
    /**  */
    "scale-before-hide": ITooltip['tooltipBeforeHide'];
    /**  */
    "scale-hide": ITooltip['tooltipHide'];
    protected el: HTMLElement;
    constructor(c: ChangeDetectorRef, r: ElementRef, z: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<ScaleTooltip, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<ScaleTooltip, "scale-tooltip", never, { "content": "content"; "disabled": "disabled"; "distance": "distance"; "flip": "flip"; "open": "open"; "placement": "placement"; "preventOverflow": "preventOverflow"; "skidding": "skidding"; "styles": "styles"; "trigger": "trigger"; }, { "scale-before-show": "scale-before-show"; "scale-show": "scale-show"; "scale-before-hide": "scale-before-hide"; "scale-hide": "scale-hide"; }, never, ["*"]>;
}

//# sourceMappingURL=proxies.d.ts.map
/* ScaleComponents custom elements bundle */

import type { Components, JSX } from "../types/components";

interface ScaleAccordion extends Components.ScaleAccordion, HTMLElement {}
export const ScaleAccordion: {
  prototype: ScaleAccordion;
  new (): ScaleAccordion;
};

interface ScaleAlert extends Components.ScaleAlert, HTMLElement {}
export const ScaleAlert: {
  prototype: ScaleAlert;
  new (): ScaleAlert;
};

interface ScaleBreadcrumb extends Components.ScaleBreadcrumb, HTMLElement {}
export const ScaleBreadcrumb: {
  prototype: ScaleBreadcrumb;
  new (): ScaleBreadcrumb;
};

interface ScaleButton extends Components.ScaleButton, HTMLElement {}
export const ScaleButton: {
  prototype: ScaleButton;
  new (): ScaleButton;
};

interface ScaleCallout extends Components.ScaleCallout, HTMLElement {}
export const ScaleCallout: {
  prototype: ScaleCallout;
  new (): ScaleCallout;
};

interface ScaleCard extends Components.ScaleCard, HTMLElement {}
export const ScaleCard: {
  prototype: ScaleCard;
  new (): ScaleCard;
};

interface ScaleCarousel extends Components.ScaleCarousel, HTMLElement {}
export const ScaleCarousel: {
  prototype: ScaleCarousel;
  new (): ScaleCarousel;
};

interface ScaleChartStackCard extends Components.ScaleChartStackCard, HTMLElement {}
export const ScaleChartStackCard: {
  prototype: ScaleChartStackCard;
  new (): ScaleChartStackCard;
};

interface ScaleCheckbox extends Components.ScaleCheckbox, HTMLElement {}
export const ScaleCheckbox: {
  prototype: ScaleCheckbox;
  new (): ScaleCheckbox;
};

interface ScaleCheckboxGroup extends Components.ScaleCheckboxGroup, HTMLElement {}
export const ScaleCheckboxGroup: {
  prototype: ScaleCheckboxGroup;
  new (): ScaleCheckboxGroup;
};

interface ScaleCollapsible extends Components.ScaleCollapsible, HTMLElement {}
export const ScaleCollapsible: {
  prototype: ScaleCollapsible;
  new (): ScaleCollapsible;
};

interface ScaleDataGrid extends Components.ScaleDataGrid, HTMLElement {}
export const ScaleDataGrid: {
  prototype: ScaleDataGrid;
  new (): ScaleDataGrid;
};

interface ScaleDatePicker extends Components.ScaleDatePicker, HTMLElement {}
export const ScaleDatePicker: {
  prototype: ScaleDatePicker;
  new (): ScaleDatePicker;
};

interface ScaleDivider extends Components.ScaleDivider, HTMLElement {}
export const ScaleDivider: {
  prototype: ScaleDivider;
  new (): ScaleDivider;
};

interface ScaleDropdown extends Components.ScaleDropdown, HTMLElement {}
export const ScaleDropdown: {
  prototype: ScaleDropdown;
  new (): ScaleDropdown;
};

interface ScaleGrid extends Components.ScaleGrid, HTMLElement {}
export const ScaleGrid: {
  prototype: ScaleGrid;
  new (): ScaleGrid;
};

interface ScaleGridItem extends Components.ScaleGridItem, HTMLElement {}
export const ScaleGridItem: {
  prototype: ScaleGridItem;
  new (): ScaleGridItem;
};

interface ScaleIcon extends Components.ScaleIcon, HTMLElement {}
export const ScaleIcon: {
  prototype: ScaleIcon;
  new (): ScaleIcon;
};

interface ScaleIconActionAdd extends Components.ScaleIconActionAdd, HTMLElement {}
export const ScaleIconActionAdd: {
  prototype: ScaleIconActionAdd;
  new (): ScaleIconActionAdd;
};

interface ScaleIconActionCircleClose extends Components.ScaleIconActionCircleClose, HTMLElement {}
export const ScaleIconActionCircleClose: {
  prototype: ScaleIconActionCircleClose;
  new (): ScaleIconActionCircleClose;
};

interface ScaleIconActionClose extends Components.ScaleIconActionClose, HTMLElement {}
export const ScaleIconActionClose: {
  prototype: ScaleIconActionClose;
  new (): ScaleIconActionClose;
};

interface ScaleIconActionDownload extends Components.ScaleIconActionDownload, HTMLElement {}
export const ScaleIconActionDownload: {
  prototype: ScaleIconActionDownload;
  new (): ScaleIconActionDownload;
};

interface ScaleIconActionEdit extends Components.ScaleIconActionEdit, HTMLElement {}
export const ScaleIconActionEdit: {
  prototype: ScaleIconActionEdit;
  new (): ScaleIconActionEdit;
};

interface ScaleIconActionFavorite extends Components.ScaleIconActionFavorite, HTMLElement {}
export const ScaleIconActionFavorite: {
  prototype: ScaleIconActionFavorite;
  new (): ScaleIconActionFavorite;
};

interface ScaleIconActionHidePassword extends Components.ScaleIconActionHidePassword, HTMLElement {}
export const ScaleIconActionHidePassword: {
  prototype: ScaleIconActionHidePassword;
  new (): ScaleIconActionHidePassword;
};

interface ScaleIconActionIndeterminate extends Components.ScaleIconActionIndeterminate, HTMLElement {}
export const ScaleIconActionIndeterminate: {
  prototype: ScaleIconActionIndeterminate;
  new (): ScaleIconActionIndeterminate;
};

interface ScaleIconActionLogout extends Components.ScaleIconActionLogout, HTMLElement {}
export const ScaleIconActionLogout: {
  prototype: ScaleIconActionLogout;
  new (): ScaleIconActionLogout;
};

interface ScaleIconActionRandom extends Components.ScaleIconActionRandom, HTMLElement {}
export const ScaleIconActionRandom: {
  prototype: ScaleIconActionRandom;
  new (): ScaleIconActionRandom;
};

interface ScaleIconActionSearch extends Components.ScaleIconActionSearch, HTMLElement {}
export const ScaleIconActionSearch: {
  prototype: ScaleIconActionSearch;
  new (): ScaleIconActionSearch;
};

interface ScaleIconActionSort extends Components.ScaleIconActionSort, HTMLElement {}
export const ScaleIconActionSort: {
  prototype: ScaleIconActionSort;
  new (): ScaleIconActionSort;
};

interface ScaleIconActionSuccess extends Components.ScaleIconActionSuccess, HTMLElement {}
export const ScaleIconActionSuccess: {
  prototype: ScaleIconActionSuccess;
  new (): ScaleIconActionSuccess;
};

interface ScaleIconAlertImprintDataprivacy extends Components.ScaleIconAlertImprintDataprivacy, HTMLElement {}
export const ScaleIconAlertImprintDataprivacy: {
  prototype: ScaleIconAlertImprintDataprivacy;
  new (): ScaleIconAlertImprintDataprivacy;
};

interface ScaleIconContentCalendar extends Components.ScaleIconContentCalendar, HTMLElement {}
export const ScaleIconContentCalendar: {
  prototype: ScaleIconContentCalendar;
  new (): ScaleIconContentCalendar;
};

interface ScaleIconContentHeart extends Components.ScaleIconContentHeart, HTMLElement {}
export const ScaleIconContentHeart: {
  prototype: ScaleIconContentHeart;
  new (): ScaleIconContentHeart;
};

interface ScaleIconHomeHome extends Components.ScaleIconHomeHome, HTMLElement {}
export const ScaleIconHomeHome: {
  prototype: ScaleIconHomeHome;
  new (): ScaleIconHomeHome;
};

interface ScaleIconNavigationCollapseDown extends Components.ScaleIconNavigationCollapseDown, HTMLElement {}
export const ScaleIconNavigationCollapseDown: {
  prototype: ScaleIconNavigationCollapseDown;
  new (): ScaleIconNavigationCollapseDown;
};

interface ScaleIconNavigationCollapseUp extends Components.ScaleIconNavigationCollapseUp, HTMLElement {}
export const ScaleIconNavigationCollapseUp: {
  prototype: ScaleIconNavigationCollapseUp;
  new (): ScaleIconNavigationCollapseUp;
};

interface ScaleIconNavigationExternalLink extends Components.ScaleIconNavigationExternalLink, HTMLElement {}
export const ScaleIconNavigationExternalLink: {
  prototype: ScaleIconNavigationExternalLink;
  new (): ScaleIconNavigationExternalLink;
};

interface ScaleIconNavigationLeft extends Components.ScaleIconNavigationLeft, HTMLElement {}
export const ScaleIconNavigationLeft: {
  prototype: ScaleIconNavigationLeft;
  new (): ScaleIconNavigationLeft;
};

interface ScaleIconNavigationRight extends Components.ScaleIconNavigationRight, HTMLElement {}
export const ScaleIconNavigationRight: {
  prototype: ScaleIconNavigationRight;
  new (): ScaleIconNavigationRight;
};

interface ScaleIconServiceDevicesService extends Components.ScaleIconServiceDevicesService, HTMLElement {}
export const ScaleIconServiceDevicesService: {
  prototype: ScaleIconServiceDevicesService;
  new (): ScaleIconServiceDevicesService;
};

interface ScaleIconServiceMaintanance extends Components.ScaleIconServiceMaintanance, HTMLElement {}
export const ScaleIconServiceMaintanance: {
  prototype: ScaleIconServiceMaintanance;
  new (): ScaleIconServiceMaintanance;
};

interface ScaleIconServiceServices extends Components.ScaleIconServiceServices, HTMLElement {}
export const ScaleIconServiceServices: {
  prototype: ScaleIconServiceServices;
  new (): ScaleIconServiceServices;
};

interface ScaleIconServiceSettings extends Components.ScaleIconServiceSettings, HTMLElement {}
export const ScaleIconServiceSettings: {
  prototype: ScaleIconServiceSettings;
  new (): ScaleIconServiceSettings;
};

interface ScaleIconServiceSupport extends Components.ScaleIconServiceSupport, HTMLElement {}
export const ScaleIconServiceSupport: {
  prototype: ScaleIconServiceSupport;
  new (): ScaleIconServiceSupport;
};

interface ScaleIconUserFileAnalytics extends Components.ScaleIconUserFileAnalytics, HTMLElement {}
export const ScaleIconUserFileAnalytics: {
  prototype: ScaleIconUserFileAnalytics;
  new (): ScaleIconUserFileAnalytics;
};

interface ScaleInput extends Components.ScaleInput, HTMLElement {}
export const ScaleInput: {
  prototype: ScaleInput;
  new (): ScaleInput;
};

interface ScaleLink extends Components.ScaleLink, HTMLElement {}
export const ScaleLink: {
  prototype: ScaleLink;
  new (): ScaleLink;
};

interface ScaleList extends Components.ScaleList, HTMLElement {}
export const ScaleList: {
  prototype: ScaleList;
  new (): ScaleList;
};

interface ScaleListItem extends Components.ScaleListItem, HTMLElement {}
export const ScaleListItem: {
  prototype: ScaleListItem;
  new (): ScaleListItem;
};

interface ScaleLoadingSpinner extends Components.ScaleLoadingSpinner, HTMLElement {}
export const ScaleLoadingSpinner: {
  prototype: ScaleLoadingSpinner;
  new (): ScaleLoadingSpinner;
};

interface ScaleMenuFlyout extends Components.ScaleMenuFlyout, HTMLElement {}
export const ScaleMenuFlyout: {
  prototype: ScaleMenuFlyout;
  new (): ScaleMenuFlyout;
};

interface ScaleMenuFlyoutDivider extends Components.ScaleMenuFlyoutDivider, HTMLElement {}
export const ScaleMenuFlyoutDivider: {
  prototype: ScaleMenuFlyoutDivider;
  new (): ScaleMenuFlyoutDivider;
};

interface ScaleMenuFlyoutItem extends Components.ScaleMenuFlyoutItem, HTMLElement {}
export const ScaleMenuFlyoutItem: {
  prototype: ScaleMenuFlyoutItem;
  new (): ScaleMenuFlyoutItem;
};

interface ScaleMenuFlyoutList extends Components.ScaleMenuFlyoutList, HTMLElement {}
export const ScaleMenuFlyoutList: {
  prototype: ScaleMenuFlyoutList;
  new (): ScaleMenuFlyoutList;
};

interface ScaleModal extends Components.ScaleModal, HTMLElement {}
export const ScaleModal: {
  prototype: ScaleModal;
  new (): ScaleModal;
};

interface ScaleNotificationBadge extends Components.ScaleNotificationBadge, HTMLElement {}
export const ScaleNotificationBadge: {
  prototype: ScaleNotificationBadge;
  new (): ScaleNotificationBadge;
};

interface ScaleNotificationBanner extends Components.ScaleNotificationBanner, HTMLElement {}
export const ScaleNotificationBanner: {
  prototype: ScaleNotificationBanner;
  new (): ScaleNotificationBanner;
};

interface ScaleNotificationMessage extends Components.ScaleNotificationMessage, HTMLElement {}
export const ScaleNotificationMessage: {
  prototype: ScaleNotificationMessage;
  new (): ScaleNotificationMessage;
};

interface ScaleNotificationToast extends Components.ScaleNotificationToast, HTMLElement {}
export const ScaleNotificationToast: {
  prototype: ScaleNotificationToast;
  new (): ScaleNotificationToast;
};

interface ScalePagination extends Components.ScalePagination, HTMLElement {}
export const ScalePagination: {
  prototype: ScalePagination;
  new (): ScalePagination;
};

interface ScaleProgressBar extends Components.ScaleProgressBar, HTMLElement {}
export const ScaleProgressBar: {
  prototype: ScaleProgressBar;
  new (): ScaleProgressBar;
};

interface ScaleRadioButton extends Components.ScaleRadioButton, HTMLElement {}
export const ScaleRadioButton: {
  prototype: ScaleRadioButton;
  new (): ScaleRadioButton;
};

interface ScaleRadioButtonGroup extends Components.ScaleRadioButtonGroup, HTMLElement {}
export const ScaleRadioButtonGroup: {
  prototype: ScaleRadioButtonGroup;
  new (): ScaleRadioButtonGroup;
};

interface ScaleRatingStars extends Components.ScaleRatingStars, HTMLElement {}
export const ScaleRatingStars: {
  prototype: ScaleRatingStars;
  new (): ScaleRatingStars;
};

interface ScaleSidebarNav extends Components.ScaleSidebarNav, HTMLElement {}
export const ScaleSidebarNav: {
  prototype: ScaleSidebarNav;
  new (): ScaleSidebarNav;
};

interface ScaleSidebarNavCollapsible extends Components.ScaleSidebarNavCollapsible, HTMLElement {}
export const ScaleSidebarNavCollapsible: {
  prototype: ScaleSidebarNavCollapsible;
  new (): ScaleSidebarNavCollapsible;
};

interface ScaleSidebarNavItem extends Components.ScaleSidebarNavItem, HTMLElement {}
export const ScaleSidebarNavItem: {
  prototype: ScaleSidebarNavItem;
  new (): ScaleSidebarNavItem;
};

interface ScaleSlider extends Components.ScaleSlider, HTMLElement {}
export const ScaleSlider: {
  prototype: ScaleSlider;
  new (): ScaleSlider;
};

interface ScaleSsrSlotFix extends Components.ScaleSsrSlotFix, HTMLElement {}
export const ScaleSsrSlotFix: {
  prototype: ScaleSsrSlotFix;
  new (): ScaleSsrSlotFix;
};

interface ScaleSwitch extends Components.ScaleSwitch, HTMLElement {}
export const ScaleSwitch: {
  prototype: ScaleSwitch;
  new (): ScaleSwitch;
};

interface ScaleTabHeader extends Components.ScaleTabHeader, HTMLElement {}
export const ScaleTabHeader: {
  prototype: ScaleTabHeader;
  new (): ScaleTabHeader;
};

interface ScaleTabNav extends Components.ScaleTabNav, HTMLElement {}
export const ScaleTabNav: {
  prototype: ScaleTabNav;
  new (): ScaleTabNav;
};

interface ScaleTabPanel extends Components.ScaleTabPanel, HTMLElement {}
export const ScaleTabPanel: {
  prototype: ScaleTabPanel;
  new (): ScaleTabPanel;
};

interface ScaleTable extends Components.ScaleTable, HTMLElement {}
export const ScaleTable: {
  prototype: ScaleTable;
  new (): ScaleTable;
};

interface ScaleTag extends Components.ScaleTag, HTMLElement {}
export const ScaleTag: {
  prototype: ScaleTag;
  new (): ScaleTag;
};

interface ScaleTextField extends Components.ScaleTextField, HTMLElement {}
export const ScaleTextField: {
  prototype: ScaleTextField;
  new (): ScaleTextField;
};

interface ScaleTextarea extends Components.ScaleTextarea, HTMLElement {}
export const ScaleTextarea: {
  prototype: ScaleTextarea;
  new (): ScaleTextarea;
};

interface ScaleToast extends Components.ScaleToast, HTMLElement {}
export const ScaleToast: {
  prototype: ScaleToast;
  new (): ScaleToast;
};

interface ScaleToggleButton extends Components.ScaleToggleButton, HTMLElement {}
export const ScaleToggleButton: {
  prototype: ScaleToggleButton;
  new (): ScaleToggleButton;
};

interface ScaleToggleGroup extends Components.ScaleToggleGroup, HTMLElement {}
export const ScaleToggleGroup: {
  prototype: ScaleToggleGroup;
  new (): ScaleToggleGroup;
};

interface ScaleTooltip extends Components.ScaleTooltip, HTMLElement {}
export const ScaleTooltip: {
  prototype: ScaleTooltip;
  new (): ScaleTooltip;
};

/**
 * Utility to define all custom elements within this package using the tag name provided in the component's source. 
 * When defining each custom element, it will also check it's safe to define by:
 *
 * 1. Ensuring the "customElements" registry is available in the global context (window).
 * 2. The component tag name is not already defined.
 *
 * Use the standard [customElements.define()](https://developer.mozilla.org/en-US/docs/Web/API/CustomElementRegistry/define) 
 * method instead to define custom elements individually, or to provide a different tag name.
 */
export declare const defineCustomElements: (opts?: any) => void;

/**
 * Used to manually set the base path where assets can be found.
 * If the script is used as "module", it's recommended to use "import.meta.url",
 * such as "setAssetPath(import.meta.url)". Other options include
 * "setAssetPath(document.currentScript.src)", or using a bundler's replace plugin to
 * dynamically set the path at build time, such as "setAssetPath(process.env.ASSET_PATH)".
 * But do note that this configuration depends on how your script is bundled, or lack of
 * bunding, and where your assets can be loaded from. Additionally custom bundling
 * will have to ensure the static assets are copied to its build directory.
 */
export declare const setAssetPath: (path: string) => void;

export interface SetPlatformOptions {
  raf?: (c: FrameRequestCallback) => number;
  ael?: (el: EventTarget, eventName: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions) => void;
  rel?: (el: EventTarget, eventName: string, listener: EventListenerOrEventListenerObject, options: boolean | AddEventListenerOptions) => void;
  ce?: (eventName: string, opts?: any) => CustomEvent;
}
export declare const setPlatformOptions: (opts: SetPlatformOptions) => void;

export type { Components, JSX };

export * from '../types/components';
